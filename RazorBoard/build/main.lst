ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_dcmpgt
  19              		.section	.text.ProcessIMUData,"ax",%progbits
  20              		.align	1
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	ProcessIMUData:
  28              	.LFB285:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** #define ARM_MATH_CM4
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** #include "stdio.h"
  29:Core/Src/main.c **** #include "string.h"
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 2


  30:Core/Src/main.c **** #include "math.h"
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <time.h>
  33:Core/Src/main.c **** #include <arm_math.h>
  34:Core/Src/main.c **** #include <fir_filter.h>
  35:Core/Src/main.c **** #include <signature.h>
  36:Core/Src/main.c **** #include <ctype.h>
  37:Core/Src/main.c **** #include <help.h>
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END Includes */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** #define ADS1115_ADDRESS 0x48
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** #define M1_addr 0xC1		//M1 Current Sensor
  55:Core/Src/main.c **** #define V1_addr 0xD1		//Voltage Sensor
  56:Core/Src/main.c **** #define M2_addr 0xE1		//M2 Current Sensor
  57:Core/Src/main.c **** #define C1_addr 0xF1		//C1 Current Sensor
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** int M1_Value = 0;
  60:Core/Src/main.c **** int M2_Value = 0;
  61:Core/Src/main.c **** int C1_Value = 0;
  62:Core/Src/main.c **** int V1_Value = 0;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** uint8_t Channel = M1_addr;
  65:Core/Src/main.c **** uint8_t Channel_Status = 0;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** #define TRUE 1
  68:Core/Src/main.c **** #define FALSE 0
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** #define STOP 0
  71:Core/Src/main.c **** #define FORWARD 1
  72:Core/Src/main.c **** #define BACKWARD 2
  73:Core/Src/main.c **** #define LEFT 3
  74:Core/Src/main.c **** #define RIGHT 4
  75:Core/Src/main.c **** #define AVOID_OBSTACLE 5
  76:Core/Src/main.c **** #define FAIL 6
  77:Core/Src/main.c **** #define BRAKE 7
  78:Core/Src/main.c **** #define HARDBRAKE 8
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** #define NOSIGNAL 0
  81:Core/Src/main.c **** #define INSIDE 1
  82:Core/Src/main.c **** #define OUTSIDE 2
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** #define SECURITY_FAIL 0
  85:Core/Src/main.c **** #define SECURITY_OK 1
  86:Core/Src/main.c **** #define SECURITY_NOSIGNAL 2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 3


  87:Core/Src/main.c **** #define SECURITY_LEFT 3
  88:Core/Src/main.c **** #define SECURITY_RIGHT 4
  89:Core/Src/main.c **** #define SECURITY_BUMBER 5
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** #define INITIAL_MAX_THRESHOLD 10000
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** #define MotorMaxSpeed 3360 -1		// 3359 is max PWM for 25Khz at 84 MHz with APB1 Clock
  94:Core/Src/main.c **** #define MotorMinSpeed 2000			// Minimum speed to start with
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** #define CUTTER_MAX_SPEED 2650		// max is 3359 at 25Khz
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** #define PI_BFR_SIZE 64				// Buffer size for RPi
  99:Core/Src/main.c **** #define CONSOLE_BFR_SIZE 64			// Buffer size for Serial Console
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** #define MPU6050_ADDR 0xD0			// Registers for MPU 6050
 102:Core/Src/main.c **** #define SMPLRT_DIV_REG 0x19
 103:Core/Src/main.c **** #define GYRO_CONFIG_REG 0x1B
 104:Core/Src/main.c **** #define ACCEL_CONFIG_REG 0x1C
 105:Core/Src/main.c **** #define ACCEL_XOUT_H_REG 0x3B
 106:Core/Src/main.c **** #define TEMP_OUT_H_REG 0x41
 107:Core/Src/main.c **** #define GYRO_XOUT_H_REG 0x43
 108:Core/Src/main.c **** #define PWR_MGMT_1_REG 0x6B
 109:Core/Src/main.c **** #define WHO_AM_I_REG 0x75
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** #define Voltage_Fully_Charged 25000	// When to consider battery fully charged, if using lithium, do
 112:Core/Src/main.c **** #define Voltage_Limit_LOW 22000		// When battery is "empty"
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** int16_t Accel_X_RAW = 0;
 115:Core/Src/main.c **** int16_t Accel_Y_RAW = 0;
 116:Core/Src/main.c **** int16_t Accel_Z_RAW = 0;
 117:Core/Src/main.c **** int16_t Gyro_X_RAW = 0;
 118:Core/Src/main.c **** int16_t Gyro_Y_RAW = 0;
 119:Core/Src/main.c **** int16_t Gyro_Z_RAW = 0;
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** float Ax, Ay, Az, Gx, Gy, Gz;
 122:Core/Src/main.c **** float raw_roll, raw_pitch;
 123:Core/Src/main.c **** float yaw = 0;
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** double Tick1 = 0;
 126:Core/Src/main.c **** double Tick2 = 0;
 127:Core/Src/main.c **** float kp = 0.12;
 128:Core/Src/main.c **** float ki = 0.0;
 129:Core/Src/main.c **** float kd = 0.01;
 130:Core/Src/main.c **** double error = 0;
 131:Core/Src/main.c **** double lastError = 0;
 132:Core/Src/main.c **** double cumError = 0;
 133:Core/Src/main.c **** double elapsedTime = 0;
 134:Core/Src/main.c **** double rateError = 0;
 135:Core/Src/main.c **** double previousTime = 0;
 136:Core/Src/main.c **** uint8_t perimeterTracking = 0;
 137:Core/Src/main.c **** uint8_t perimeterTrackingActive = 0;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** uint8_t Initial_Start = 0;
 140:Core/Src/main.c **** uint16_t Start_Threshold = 0;
 141:Core/Src/main.c **** uint8_t Outside_Threshold = 8;			// How long we can be outside before disabling the system, in seco
 142:Core/Src/main.c **** float Signal_Integrity_IN = 0.80;		// Classified as IN
 143:Core/Src/main.c **** float Signal_Integrity_OUT = -0.80;		// Classified as OUT
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 4


 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** int bwf1_inside = 0;				// Some stats, how many messages we can detect per second
 146:Core/Src/main.c **** int bwf2_inside = 0;
 147:Core/Src/main.c **** int bwf1_outside = 0;
 148:Core/Src/main.c **** int bwf2_outside = 0;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** uint32_t Boundary_Timer;			// Keep track of time between signals.
 151:Core/Src/main.c **** uint8_t Boundary_Timeout = 6;		// in seconds, mower will stop if no signal has been detected for X 
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** float M1_amp,M2_amp,C1_amp = 0.0f;	// Values for AMP per motor
 154:Core/Src/main.c **** float M1_error = 0.0f;				// Auto calibration value stored here.
 155:Core/Src/main.c **** float M2_error = 0.0f;				// Auto calibration value stored here.
 156:Core/Src/main.c **** float C1_error = 0.0f;				// Auto calibration value stored here.
 157:Core/Src/main.c **** float Voltage = 25200.00;			// Max voltage, only to feed the system something while starting up.
 158:Core/Src/main.c **** float Motor_Limit = 3.0;			// Limit for power spikes in motors
 159:Core/Src/main.c **** float Cutter_Limit = 1.0;			// Limit in AMP for the cutter disk, when reached the system will disab
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** uint8_t BWF1_Status = 0;
 162:Core/Src/main.c **** uint8_t BWF2_Status = 0;
 163:Core/Src/main.c **** uint8_t State = STOP;
 164:Core/Src/main.c **** uint8_t LastState = STOP;
 165:Core/Src/main.c **** uint8_t cutterStatus = 0;
 166:Core/Src/main.c **** uint8_t AVOID_LEFT = 0;
 167:Core/Src/main.c **** uint8_t AVOID_RIGHT = 0;
 168:Core/Src/main.c **** uint8_t AVOID_FRONT = 0;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** uint32_t ADC_timer = 0;
 171:Core/Src/main.c **** uint32_t IMU_timer = 0;
 172:Core/Src/main.c **** uint32_t OUTSIDE_timer = 0;
 173:Core/Src/main.c **** uint8_t SendInfoStatus = 0;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** uint8_t Docked = 0;
 176:Core/Src/main.c **** uint8_t MasterSwitch = 1;			// This is the "masterswitch", by default this is turned on.
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** char msg[68];						// Buffer to store all our messages
 179:Core/Src/main.c **** uint8_t PIBuffer[PI_BFR_SIZE];
 180:Core/Src/main.c **** uint8_t ConsoleBuffer[CONSOLE_BFR_SIZE];
 181:Core/Src/main.c **** uint8_t UART1_ready = 0;
 182:Core/Src/main.c **** uint8_t UART2_ready = 0;
 183:Core/Src/main.c **** uint8_t Security = 0;
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** uint8_t WorkingHourStart = 10;		// RazorBoard will not start mowing until we reached 10.00
 186:Core/Src/main.c **** uint8_t WorkingHourEnd = 20;		// RazorBoard will mow until we reached 20.00, after that it will go 
 187:Core/Src/main.c **** uint8_t Battery_Ready = 0;			// Battery fully charged?
 188:Core/Src/main.c **** uint16_t HoldChargeDetection = 200;	// When we detect connection with the charger, wait in millisec
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** uint8_t M1_idx = 0;
 191:Core/Src/main.c **** uint8_t M2_idx = 0;
 192:Core/Src/main.c **** uint8_t C1_idx = 0;
 193:Core/Src/main.c **** float M1_force[20];					// Array of power consumption of Motor M1, used for detecting if we bump in
 194:Core/Src/main.c **** float M2_force[20];					// Array of power consumption of Motor M2, used for detecting if we bump in
 195:Core/Src/main.c **** float C1_force[20];
 196:Core/Src/main.c **** float M1_F = 0;
 197:Core/Src/main.c **** float M2_F = 0;
 198:Core/Src/main.c **** float C1_F = 0;
 199:Core/Src/main.c **** uint8_t Force_Active = 0;			// When the mower has gained enough movement, Force_Active will turn on
 200:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 5


 201:Core/Src/main.c **** float hold_heading = 0;				// In degrees, something to hold on to and try to steer in a straight li
 202:Core/Src/main.c **** float heading = 0.0;				// Relative heading
 203:Core/Src/main.c **** float yaw_error = 0.0;
 204:Core/Src/main.c **** float roll = 0.00;
 205:Core/Src/main.c **** float roll_error = 0.0;
 206:Core/Src/main.c **** float pitch = 0.00;
 207:Core/Src/main.c **** float pitch_error = 0.0;
 208:Core/Src/main.c **** float pitch_limit[20] = {0};
 209:Core/Src/main.c **** float roll_limit[20] = {0};
 210:Core/Src/main.c **** uint8_t pitch_limit_idx = 0;
 211:Core/Src/main.c **** uint8_t roll_limit_idx = 0;
 212:Core/Src/main.c **** uint8_t Overturn_Limit = 35;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** float32_t BWF1[ADC_SAMPLE_LEN / 2];
 215:Core/Src/main.c **** float32_t BWF2[ADC_SAMPLE_LEN / 2];
 216:Core/Src/main.c **** arm_fir_instance_f32 S;
 217:Core/Src/main.c **** uint8_t Signature_Record = FALSE;
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** uint32_t MotorSpeedUpdateFreq_timer = 0;	// Timer for MotorSpeed Update
 220:Core/Src/main.c **** uint8_t MotorSpeedUpdateFreq = 100;			// Freq to update motor speed, in milliseconds
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** uint8_t ChargerConnect = 0;					// Are we connected to the charger?
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** uint8_t DEBUG_RAZORBOARD = 0;				// Used by "debug on/debug off"
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* USER CODE END PD */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 229:Core/Src/main.c **** /* USER CODE BEGIN PM */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /* USER CODE END PM */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 234:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
 235:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
 238:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** RNG_HandleTypeDef hrng;
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** TIM_HandleTypeDef htim2;
 247:Core/Src/main.c **** TIM_HandleTypeDef htim3;
 248:Core/Src/main.c **** TIM_HandleTypeDef htim4;
 249:Core/Src/main.c **** TIM_HandleTypeDef htim5;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** UART_HandleTypeDef huart1;
 252:Core/Src/main.c **** UART_HandleTypeDef huart2;
 253:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_rx;
 254:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE BEGIN PV */
 257:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 6


 258:Core/Src/main.c **** /* USER CODE END PV */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 261:Core/Src/main.c **** void SystemClock_Config(void);
 262:Core/Src/main.c **** static void MX_GPIO_Init(void);
 263:Core/Src/main.c **** static void MX_DMA_Init(void);
 264:Core/Src/main.c **** static void MX_ADC1_Init(void);
 265:Core/Src/main.c **** static void MX_I2C1_Init(void);
 266:Core/Src/main.c **** static void MX_I2C2_Init(void);
 267:Core/Src/main.c **** static void MX_IWDG_Init(void);
 268:Core/Src/main.c **** static void MX_RNG_Init(void);
 269:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 270:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 271:Core/Src/main.c **** static void MX_TIM3_Init(void);
 272:Core/Src/main.c **** static void MX_TIM4_Init(void);
 273:Core/Src/main.c **** static void MX_RTC_Init(void);
 274:Core/Src/main.c **** static void MX_TIM2_Init(void);
 275:Core/Src/main.c **** static void MX_TIM5_Init(void);
 276:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** static void MotorStop(void);
 279:Core/Src/main.c **** static void MotorBrake(void);
 280:Core/Src/main.c **** static void MotorHardBrake(void);
 281:Core/Src/main.c **** static void Undock_MotorBackward(uint16_t minSpeed, uint16_t maxSpeed);
 282:Core/Src/main.c **** static void MotorForward(uint16_t minSpeed, uint16_t maxSpeed);
 283:Core/Src/main.c **** static void MotorBackward(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms);
 284:Core/Src/main.c **** static void MotorLeft(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms);
 285:Core/Src/main.c **** static void MotorRight(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms);
 286:Core/Src/main.c **** static void Serial_Console(char *msg);
 287:Core/Src/main.c **** static void Serial_RPi(char *msg);
 288:Core/Src/main.c **** static void CheckState(void);
 289:Core/Src/main.c **** static uint8_t CheckSecurity(void);
 290:Core/Src/main.c **** static void CheckBWF(void);
 291:Core/Src/main.c **** static void cutterON(void);
 292:Core/Src/main.c **** static void cutterOFF(void);
 293:Core/Src/main.c **** static void cutterHardBreak(void);
 294:Core/Src/main.c **** static void parseCommand_RPI(void);
 295:Core/Src/main.c **** static void parseCommand_Console(void);
 296:Core/Src/main.c **** static void perimeterTracker(void);
 297:Core/Src/main.c **** static void ChargerConnected(void);
 298:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART1(UART_HandleTypeDef *huart);
 299:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART2(UART_HandleTypeDef *huart);
 300:Core/Src/main.c **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);
 301:Core/Src/main.c **** static void delay_us(uint16_t us);
 302:Core/Src/main.c **** static void ADC_Send(uint8_t channel);
 303:Core/Src/main.c **** static int ADC_Receive();
 304:Core/Src/main.c **** static void CollectADC(void);
 305:Core/Src/main.c **** static void SendInfo(void);
 306:Core/Src/main.c **** static void CheckVoltage(void);
 307:Core/Src/main.c **** static void CheckMotorCurrent(int RAW);
 308:Core/Src/main.c **** static void ProcessIMUData();
 309:Core/Src/main.c **** static void UpdateMotorSpeed();
 310:Core/Src/main.c **** static void Init6050(void);
 311:Core/Src/main.c **** static void MPU6050_Read_Accel(void);
 312:Core/Src/main.c **** static void MPU6050_Read_Gyro(void);
 313:Core/Src/main.c **** static void unDock(void);
 314:Core/Src/main.c **** static void reInitIMU(void);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 7


 315:Core/Src/main.c **** static uint32_t rnd(uint32_t maxValue);
 316:Core/Src/main.c **** static void InitFIR(void);
 317:Core/Src/main.c **** static void FIR_LEFT(void);
 318:Core/Src/main.c **** static void FIR_RIGHT(void);
 319:Core/Src/main.c **** static void WatchdogRefresh(void);
 320:Core/Src/main.c **** static void WatchdogInit(void);
 321:Core/Src/main.c **** static void (*SysMemBootJump) (void);
 322:Core/Src/main.c **** static void BootLoaderInit(unsigned long BootLoaderStatus);
 323:Core/Src/main.c **** static void setTime(uint8_t hour, uint8_t minute, uint8_t second);
 324:Core/Src/main.c **** static void setDate(uint8_t year, uint8_t month, uint8_t day, uint8_t weekday);
 325:Core/Src/main.c **** static void TimeToGoHome(void);
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /* USER CODE END PFP */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 330:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** void TimeToGoHome(void) {
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** 	// Get Time and check if we should go home
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** 	RTC_TimeTypeDef currTime = {0};
 337:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 340:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 	if (currTime.Hours >= WorkingHourEnd) {
 343:Core/Src/main.c **** 		perimeterTracking = 1;
 344:Core/Src/main.c **** 	}
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** void setTime(uint8_t hour, uint8_t minute, uint8_t second) {
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** 	RTC_TimeTypeDef sTime = {0};
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 	sTime.Hours = RTC_ByteToBcd2(hour);
 353:Core/Src/main.c **** 	sTime.Minutes = RTC_ByteToBcd2(minute);
 354:Core/Src/main.c **** 	sTime.Seconds = RTC_ByteToBcd2(second);
 355:Core/Src/main.c **** 	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 356:Core/Src/main.c **** 	sTime.StoreOperation = RTC_STOREOPERATION_SET;
 357:Core/Src/main.c **** 	HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD);
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** void setDate(uint8_t year, uint8_t month, uint8_t day, uint8_t weekday) {
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** 	RTC_DateTypeDef sDate = {0};
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** 	sDate.WeekDay = RTC_ByteToBcd2(weekday);
 365:Core/Src/main.c **** 	sDate.Month = RTC_ByteToBcd2(month);
 366:Core/Src/main.c **** 	sDate.Date = RTC_ByteToBcd2(day);
 367:Core/Src/main.c **** 	sDate.Year = RTC_ByteToBcd2(year);
 368:Core/Src/main.c **** 	HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD);
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** }
 371:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 8


 372:Core/Src/main.c **** void BootLoaderInit(unsigned long BootLoaderStatus)
 373:Core/Src/main.c **** 
 374:Core/Src/main.c **** // Inside the debug menu you can type "upgrade", this will force the STM into the bootloader, so no
 375:Core/Src/main.c **** {
 376:Core/Src/main.c ****   SysMemBootJump = (void (*)(void)) (*((unsigned long *) 0x1fff0004));
 377:Core/Src/main.c ****   if (BootLoaderStatus == 1)
 378:Core/Src/main.c ****   {
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****     HAL_DeInit();
 381:Core/Src/main.c ****     SysTick->CTRL = 0;
 382:Core/Src/main.c ****     SysTick->LOAD = 0;
 383:Core/Src/main.c ****     SysTick->VAL = 0;
 384:Core/Src/main.c ****     __set_PRIMASK(1);
 385:Core/Src/main.c ****     __set_MSP(0x20001000);
 386:Core/Src/main.c ****     SysMemBootJump();
 387:Core/Src/main.c ****     while(1);
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c **** }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** void WatchdogInit(void) {
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****     /*
 394:Core/Src/main.c ****         Watchdog freq: 32.768 kHz
 395:Core/Src/main.c ****         Prescaler: 16
 396:Core/Src/main.c ****         Reload: 4095
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****         Our Watchdog:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****         16 * 4095 = 64
 401:Core/Src/main.c ****         64 / 32 = 2 seconds
 402:Core/Src/main.c ****         if the watchdog is not fed within 2 seconds, the Razorboard will simply reboot.
 403:Core/Src/main.c ****     */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****     hiwdg.Instance = IWDG;
 406:Core/Src/main.c ****     hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 407:Core/Src/main.c ****     hiwdg.Init.Reload = 4095;
 408:Core/Src/main.c ****     HAL_IWDG_Init(&hiwdg);
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** void WatchdogRefresh(void) {
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 	// refresh the watchdog
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 417:Core/Src/main.c **** }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** void InitFIR(void) {
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** 	// Initiate the FIR functions
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** 	uint32_t blocksize = BLOCK_SIZE;
 424:Core/Src/main.c **** 	arm_fir_init_f32(&S, NUM_TAPS, (float32_t *)&firCoeffs32[0], &firStateF32[0], blocksize);
 425:Core/Src/main.c **** }
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** void FIR_LEFT(void) {
 428:Core/Src/main.c **** 	  uint32_t i;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 9


 429:Core/Src/main.c **** 	  uint32_t blockSize = BLOCK_SIZE;
 430:Core/Src/main.c **** 	  uint32_t numBlocks = LENGTH_SAMPLES/BLOCK_SIZE;
 431:Core/Src/main.c **** 	  float32_t  *inputF32, *outputF32;
 432:Core/Src/main.c **** 	  inputF32 = &BWF1[0];
 433:Core/Src/main.c **** 	  outputF32 = &Output[0];
 434:Core/Src/main.c **** 	  for(i=0; i < numBlocks; i++)
 435:Core/Src/main.c **** 	  {
 436:Core/Src/main.c **** 	    arm_fir_f32(&S, inputF32 + (i * blockSize), outputF32 + (i * blockSize), blockSize);
 437:Core/Src/main.c **** 	  }
 438:Core/Src/main.c **** 	  for (int x = 0; x < 256; x++) {
 439:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 440:Core/Src/main.c **** 	  }
 441:Core/Src/main.c **** }
 442:Core/Src/main.c **** void FIR_RIGHT(void) {
 443:Core/Src/main.c **** 	  uint32_t i;
 444:Core/Src/main.c **** 	  uint32_t blockSize = BLOCK_SIZE;
 445:Core/Src/main.c **** 	  uint32_t numBlocks = LENGTH_SAMPLES/BLOCK_SIZE;
 446:Core/Src/main.c **** 	  float32_t  *inputF32, *outputF32;
 447:Core/Src/main.c **** 	  inputF32 = &BWF2[0];
 448:Core/Src/main.c **** 	  outputF32 = &Output[0];
 449:Core/Src/main.c **** 	  for(i=0; i < numBlocks; i++)
 450:Core/Src/main.c **** 	  {
 451:Core/Src/main.c **** 	    arm_fir_f32(&S, inputF32 + (i * blockSize), outputF32 + (i * blockSize), blockSize);
 452:Core/Src/main.c **** 	  }
 453:Core/Src/main.c **** 	  for (int x = 0; x < 256; x++) {
 454:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 455:Core/Src/main.c **** 	  }
 456:Core/Src/main.c **** }
 457:Core/Src/main.c **** 
 458:Core/Src/main.c **** uint32_t rnd(uint32_t maxValue) {
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** 	// Our random number generator
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** 	uint32_t rndnum;
 463:Core/Src/main.c **** 	rndnum = HAL_RNG_GetRandomNumber(&hrng) % maxValue;
 464:Core/Src/main.c **** 	return rndnum;
 465:Core/Src/main.c **** }
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** void reInitIMU(void) {
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** 	// If the I2C bus hangs, this will clear the deadlock and re-init the MPU
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 	Serial_Console("reInit IMU\r\n");
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** 	GPIO_InitTypeDef GPIO_InitStruct = {0};
 474:Core/Src/main.c **** 	HAL_I2C_DeInit(&hi2c2);
 475:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 476:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_RESET);
 477:Core/Src/main.c **** 	GPIO_InitStruct.Pin = GPIO_PIN_10;
 478:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 479:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 480:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 481:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 482:Core/Src/main.c **** 	GPIO_InitStruct.Pin = GPIO_PIN_11;
 483:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 484:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 485:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 10


 486:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 487:Core/Src/main.c **** 	HAL_Delay(1);
 488:Core/Src/main.c **** 	MX_I2C2_Init();
 489:Core/Src/main.c **** 	Init6050();
 490:Core/Src/main.c **** }
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** void MPU6050_Read_Gyro(void) {
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** 	uint8_t Rec_Data[6];
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 	// Read 6 BYTES of data starting from GYRO_XOUT_H register
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** 	if (HAL_I2C_Mem_Read (&hi2c2, MPU6050_ADDR, GYRO_XOUT_H_REG, 1, Rec_Data, 6, 50) != HAL_OK) {
 501:Core/Src/main.c **** 		reInitIMU();	// if the MPU-6050 does not respond within 50ms, re-init
 502:Core/Src/main.c **** 		return;
 503:Core/Src/main.c **** 	}
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 	Gyro_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data [1]);
 506:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 507:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** 	Gx = Gyro_X_RAW/131.0;
 510:Core/Src/main.c **** 	Gy = Gyro_Y_RAW/131.0;
 511:Core/Src/main.c **** 	Gz = Gyro_Z_RAW/131.0;
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** 	if (Initial_Start == 0) {
 514:Core/Src/main.c **** 		if (fabs(Gz) < 1.0) {
 515:Core/Src/main.c **** 			yaw_error = fabs(Gz);		// Auto calibrate the Gyro error at startup
 516:Core/Src/main.c **** 		}
 517:Core/Src/main.c **** 	}
 518:Core/Src/main.c **** 	Gz += yaw_error;					//Cancel out error
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** 	if (Gz < -1.00 || Gz > 1.00) {		//if not moving, do not change
 521:Core/Src/main.c **** 	yaw = yaw - (Gz * 0.02);
 522:Core/Src/main.c **** 	}
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** }
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** void MPU6050_Read_Accel(void) {
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** 	uint8_t Rec_Data[6];
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** 	// Read 6 BYTES of data starting from ACCEL_XOUT_H register
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** 	if (HAL_I2C_Mem_Read (&hi2c2, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 6, 50) != HAL_OK) {
 533:Core/Src/main.c **** 		reInitIMU();		// if the MPU-6050 does not respond within 50ms, re-init
 534:Core/Src/main.c **** 		return;
 535:Core/Src/main.c **** 	}
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 	Accel_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data [1]);
 538:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 539:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** 	Ax = Accel_X_RAW/16384.0;
 542:Core/Src/main.c **** 	Ay = Accel_Y_RAW/16384.0;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 11


 543:Core/Src/main.c **** 	Az = Accel_Z_RAW/16384.0;
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** 	float r, p;
 546:Core/Src/main.c **** 	r = atan2(Ay , Az) * 57.3;
 547:Core/Src/main.c **** 	p = atan2((- Ax) , sqrtf(Ay * Ay + Az * Az)) * 57.3;
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	raw_roll = r + roll_error;
 550:Core/Src/main.c **** 	raw_pitch = p + pitch_error;
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** void Init6050() {
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** 	uint8_t check;
 557:Core/Src/main.c **** 	uint8_t Data;
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c2, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, 50);
 560:Core/Src/main.c **** 	HAL_Delay(20);
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** 	Data = 0;
 563:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, PWR_MGMT_1_REG, 1,&Data, 1, 50);
 564:Core/Src/main.c **** 	HAL_Delay(20);
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** 	Data = 0x07;
 567:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 50);
 568:Core/Src/main.c **** 	HAL_Delay(20);
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** 	Data = 0;
 571:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 50);
 572:Core/Src/main.c **** 	HAL_Delay(20);
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** void ProcessIMUData() {
  30              		.loc 1 576 23 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** 	pitch_limit[pitch_limit_idx] = raw_pitch;
  41              		.loc 1 578 2 view .LVU1
  42              		.loc 1 578 13 is_stmt 0 view .LVU2
  43 0002 414C     		ldr	r4, .L16+8
  44 0004 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
  45              		.loc 1 578 31 view .LVU3
  46 0006 414B     		ldr	r3, .L16+12
  47 0008 03EB8203 		add	r3, r3, r2, lsl #2
  48 000c 4049     		ldr	r1, .L16+16
  49 000e 0968     		ldr	r1, [r1]	@ float
  50 0010 1960     		str	r1, [r3]	@ float
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 12


 579:Core/Src/main.c **** 	roll_limit[roll_limit_idx] = raw_roll;
  51              		.loc 1 579 2 is_stmt 1 view .LVU4
  52              		.loc 1 579 12 is_stmt 0 view .LVU5
  53 0012 4048     		ldr	r0, .L16+20
  54 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  55              		.loc 1 579 29 view .LVU6
  56 0016 4049     		ldr	r1, .L16+24
  57 0018 01EB8301 		add	r1, r1, r3, lsl #2
  58 001c 3F4D     		ldr	r5, .L16+28
  59 001e 2D68     		ldr	r5, [r5]	@ float
  60 0020 0D60     		str	r5, [r1]	@ float
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** 	pitch_limit_idx++;
  61              		.loc 1 581 2 is_stmt 1 view .LVU7
  62              		.loc 1 581 17 is_stmt 0 view .LVU8
  63 0022 0132     		adds	r2, r2, #1
  64 0024 D2B2     		uxtb	r2, r2
  65 0026 2270     		strb	r2, [r4]
 582:Core/Src/main.c **** 	roll_limit_idx++;
  66              		.loc 1 582 2 is_stmt 1 view .LVU9
  67              		.loc 1 582 16 is_stmt 0 view .LVU10
  68 0028 0133     		adds	r3, r3, #1
  69 002a DBB2     		uxtb	r3, r3
  70 002c 0370     		strb	r3, [r0]
 583:Core/Src/main.c **** 
 584:Core/Src/main.c **** 	if (pitch_limit_idx == 20) pitch_limit_idx = 0;
  71              		.loc 1 584 2 is_stmt 1 view .LVU11
  72              		.loc 1 584 5 is_stmt 0 view .LVU12
  73 002e 142A     		cmp	r2, #20
  74 0030 07D0     		beq	.L13
  75              	.L2:
 585:Core/Src/main.c **** 	if (roll_limit_idx == 20) roll_limit_idx = 0;
  76              		.loc 1 585 2 is_stmt 1 view .LVU13
  77              		.loc 1 585 5 is_stmt 0 view .LVU14
  78 0032 142B     		cmp	r3, #20
  79 0034 08D0     		beq	.L14
  80              	.L3:
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** 	int p = 0;
  81              		.loc 1 587 2 is_stmt 1 view .LVU15
  82              	.LVL0:
 588:Core/Src/main.c **** 	int r = 0;
  83              		.loc 1 588 2 view .LVU16
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** 	for (int x = 0; x < 20; x++) {
  84              		.loc 1 590 2 view .LVU17
  85              	.LBB12:
  86              		.loc 1 590 7 view .LVU18
  87              		.loc 1 590 11 is_stmt 0 view .LVU19
  88 0036 0023     		movs	r3, #0
  89              	.LBE12:
 588:Core/Src/main.c **** 	int r = 0;
  90              		.loc 1 588 6 view .LVU20
  91 0038 07EE103A 		vmov	s14, r3	@ int
 587:Core/Src/main.c **** 	int r = 0;
  92              		.loc 1 587 6 view .LVU21
  93 003c 07EE903A 		vmov	s15, r3	@ int
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 13


  94              	.LBB13:
  95              		.loc 1 590 2 view .LVU22
  96 0040 1DE0     		b	.L4
  97              	.LVL1:
  98              	.L13:
  99              		.loc 1 590 2 view .LVU23
 100              	.LBE13:
 584:Core/Src/main.c **** 	if (roll_limit_idx == 20) roll_limit_idx = 0;
 101              		.loc 1 584 29 is_stmt 1 discriminator 1 view .LVU24
 584:Core/Src/main.c **** 	if (roll_limit_idx == 20) roll_limit_idx = 0;
 102              		.loc 1 584 45 is_stmt 0 discriminator 1 view .LVU25
 103 0042 0021     		movs	r1, #0
 104 0044 2170     		strb	r1, [r4]
 105 0046 F4E7     		b	.L2
 106              	.L14:
 585:Core/Src/main.c **** 
 107              		.loc 1 585 28 is_stmt 1 discriminator 1 view .LVU26
 585:Core/Src/main.c **** 
 108              		.loc 1 585 43 is_stmt 0 discriminator 1 view .LVU27
 109 0048 324B     		ldr	r3, .L16+20
 110 004a 0022     		movs	r2, #0
 111 004c 1A70     		strb	r2, [r3]
 112 004e F2E7     		b	.L3
 113              	.LVL2:
 114              	.L5:
 115              	.LBB14:
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** 		p += pitch_limit[x];
 116              		.loc 1 592 3 is_stmt 1 discriminator 3 view .LVU28
 117              		.loc 1 592 19 is_stmt 0 discriminator 3 view .LVU29
 118 0050 2E4A     		ldr	r2, .L16+12
 119 0052 02EB8302 		add	r2, r2, r3, lsl #2
 120 0056 D2ED006A 		vldr.32	s13, [r2]
 121              		.loc 1 592 5 discriminator 3 view .LVU30
 122 005a F8EEE77A 		vcvt.f32.s32	s15, s15
 123              	.LVL3:
 124              		.loc 1 592 5 discriminator 3 view .LVU31
 125 005e 77EEA67A 		vadd.f32	s15, s15, s13
 126 0062 FDEEE77A 		vcvt.s32.f32	s15, s15
 127              	.LVL4:
 593:Core/Src/main.c **** 		r += roll_limit[x];
 128              		.loc 1 593 3 is_stmt 1 discriminator 3 view .LVU32
 129              		.loc 1 593 18 is_stmt 0 discriminator 3 view .LVU33
 130 0066 2C4A     		ldr	r2, .L16+24
 131 0068 02EB8302 		add	r2, r2, r3, lsl #2
 132 006c D2ED006A 		vldr.32	s13, [r2]
 133              		.loc 1 593 5 discriminator 3 view .LVU34
 134 0070 B8EEC77A 		vcvt.f32.s32	s14, s14
 135              	.LVL5:
 136              		.loc 1 593 5 discriminator 3 view .LVU35
 137 0074 37EE267A 		vadd.f32	s14, s14, s13
 138 0078 BDEEC77A 		vcvt.s32.f32	s14, s14
 139              	.LVL6:
 590:Core/Src/main.c **** 
 140              		.loc 1 590 26 is_stmt 1 discriminator 3 view .LVU36
 590:Core/Src/main.c **** 
 141              		.loc 1 590 27 is_stmt 0 discriminator 3 view .LVU37
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 14


 142 007c 0133     		adds	r3, r3, #1
 143              	.LVL7:
 144              	.L4:
 590:Core/Src/main.c **** 
 145              		.loc 1 590 18 is_stmt 1 discriminator 1 view .LVU38
 590:Core/Src/main.c **** 
 146              		.loc 1 590 2 is_stmt 0 discriminator 1 view .LVU39
 147 007e 132B     		cmp	r3, #19
 148 0080 E6DD     		ble	.L5
 149              	.LBE14:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** 	}
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** 	roll = r / 20;
 150              		.loc 1 597 2 is_stmt 1 view .LVU40
 151              		.loc 1 597 11 is_stmt 0 view .LVU41
 152 0082 274B     		ldr	r3, .L16+32
 153              	.LVL8:
 154              		.loc 1 597 11 view .LVU42
 155 0084 17EE102A 		vmov	r2, s14	@ int
 156 0088 83FB0221 		smull	r2, r1, r3, r2
 157 008c 17EE102A 		vmov	r2, s14	@ int
 158 0090 D217     		asrs	r2, r2, #31
 159 0092 C2EBE102 		rsb	r2, r2, r1, asr #3
 160              		.loc 1 597 7 view .LVU43
 161 0096 07EE102A 		vmov	s14, r2	@ int
 162              	.LVL9:
 163              		.loc 1 597 7 view .LVU44
 164 009a B8EEC77A 		vcvt.f32.s32	s14, s14
 165 009e 214A     		ldr	r2, .L16+36
 166 00a0 82ED007A 		vstr.32	s14, [r2]
 598:Core/Src/main.c **** 	pitch = p / 20;
 167              		.loc 1 598 2 is_stmt 1 view .LVU45
 168              		.loc 1 598 12 is_stmt 0 view .LVU46
 169 00a4 17EE902A 		vmov	r2, s15	@ int
 170 00a8 83FB0232 		smull	r3, r2, r3, r2
 171 00ac 17EE903A 		vmov	r3, s15	@ int
 172 00b0 DB17     		asrs	r3, r3, #31
 173 00b2 C3EBE203 		rsb	r3, r3, r2, asr #3
 174              		.loc 1 598 8 view .LVU47
 175 00b6 07EE903A 		vmov	s15, r3	@ int
 176              	.LVL10:
 177              		.loc 1 598 8 view .LVU48
 178 00ba F8EEE77A 		vcvt.f32.s32	s15, s15
 179 00be 1A4B     		ldr	r3, .L16+40
 180 00c0 C3ED007A 		vstr.32	s15, [r3]
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** 	if (yaw > 359.9) yaw = 0;
 181              		.loc 1 600 2 is_stmt 1 view .LVU49
 182              		.loc 1 600 10 is_stmt 0 view .LVU50
 183 00c4 194B     		ldr	r3, .L16+44
 184 00c6 1868     		ldr	r0, [r3]	@ float
 185 00c8 FFF7FEFF 		bl	__aeabi_f2d
 186              	.LVL11:
 187              		.loc 1 600 5 view .LVU51
 188 00cc 0CA3     		adr	r3, .L16
 189 00ce D3E90023 		ldrd	r2, [r3]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 15


 190 00d2 FFF7FEFF 		bl	__aeabi_dcmpgt
 191              	.LVL12:
 192 00d6 10B1     		cbz	r0, .L6
 193              		.loc 1 600 19 is_stmt 1 discriminator 1 view .LVU52
 194              		.loc 1 600 23 is_stmt 0 discriminator 1 view .LVU53
 195 00d8 144B     		ldr	r3, .L16+44
 196 00da 0022     		movs	r2, #0
 197 00dc 1A60     		str	r2, [r3]	@ float
 198              	.L6:
 601:Core/Src/main.c **** 	if (yaw < 0) yaw = 359.9;
 199              		.loc 1 601 2 is_stmt 1 view .LVU54
 200              		.loc 1 601 10 is_stmt 0 view .LVU55
 201 00de 134B     		ldr	r3, .L16+44
 202 00e0 D3ED007A 		vldr.32	s15, [r3]
 203              		.loc 1 601 5 view .LVU56
 204 00e4 F5EEC07A 		vcmpe.f32	s15, #0
 205 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 206 00ec 04D4     		bmi	.L15
 207              	.L8:
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** 	heading = yaw;
 208              		.loc 1 603 2 is_stmt 1 view .LVU57
 209              		.loc 1 603 10 is_stmt 0 view .LVU58
 210 00ee 0F4B     		ldr	r3, .L16+44
 211 00f0 1A68     		ldr	r2, [r3]	@ float
 212 00f2 0F4B     		ldr	r3, .L16+48
 213 00f4 1A60     		str	r2, [r3]	@ float
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** }
 214              		.loc 1 605 1 view .LVU59
 215 00f6 38BD     		pop	{r3, r4, r5, pc}
 216              	.L15:
 601:Core/Src/main.c **** 
 217              		.loc 1 601 15 is_stmt 1 discriminator 1 view .LVU60
 601:Core/Src/main.c **** 
 218              		.loc 1 601 19 is_stmt 0 discriminator 1 view .LVU61
 219 00f8 0E4A     		ldr	r2, .L16+52
 220 00fa 1A60     		str	r2, [r3]	@ float
 221 00fc F7E7     		b	.L8
 222              	.L17:
 223 00fe 00BF     		.align	3
 224              	.L16:
 225 0100 66666666 		.word	1717986918
 226 0104 667E7640 		.word	1081507430
 227 0108 00000000 		.word	.LANCHOR0
 228 010c 00000000 		.word	.LANCHOR1
 229 0110 00000000 		.word	raw_pitch
 230 0114 00000000 		.word	.LANCHOR2
 231 0118 00000000 		.word	.LANCHOR3
 232 011c 00000000 		.word	raw_roll
 233 0120 67666666 		.word	1717986919
 234 0124 00000000 		.word	.LANCHOR4
 235 0128 00000000 		.word	.LANCHOR5
 236 012c 00000000 		.word	.LANCHOR6
 237 0130 00000000 		.word	.LANCHOR7
 238 0134 33F3B343 		.word	1135866675
 239              		.cfi_endproc
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 16


 240              	.LFE285:
 242              		.section	.text.delay_us,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	delay_us:
 250              	.LVL13:
 251              	.LFB290:
 606:Core/Src/main.c **** 
 607:Core/Src/main.c **** void CheckMotorCurrent(int RAW) {
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** 			// Check if any motor is experiencing a spike in power, then we probably hit something.
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** 			float M1, M2;
 612:Core/Src/main.c **** 	        if (M1_idx == 10 || M2_idx == 10 || C1_idx == 10) Force_Active = 1;
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** 			if (Channel == M1_addr) {
 615:Core/Src/main.c **** 				M1_Value = RAW;
 616:Core/Src/main.c **** 	            M1 = fabs(((M1_Value * 0.1875) - 2500) / 100);
 617:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 618:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
 619:Core/Src/main.c **** 	            M1_force[M1_idx] = M1_amp;
 620:Core/Src/main.c **** 	            M1_idx++;
 621:Core/Src/main.c **** 	            if (M1_idx == 20) M1_idx = 0;
 622:Core/Src/main.c **** 	            float ForceM1 = 0;
 623:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 624:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 625:Core/Src/main.c **** 	            }
 626:Core/Src/main.c **** 	            M1_F = ForceM1 / 20;
 627:Core/Src/main.c **** 	            if (M1_F < 0.1) M1_F = 0.1;
 628:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** 	            	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8 ) == GPIO_PIN_SET) {
 631:Core/Src/main.c **** 	            		return;
 632:Core/Src/main.c **** 	            	}
 633:Core/Src/main.c **** 	            	MotorBrake();
 634:Core/Src/main.c **** 	            	HAL_Delay(500);
 635:Core/Src/main.c **** 	            	MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 636:Core/Src/main.c **** 	            	HAL_Delay(500);
 637:Core/Src/main.c **** 	            	MotorRight(MotorMinSpeed, MotorMaxSpeed, 300);
 638:Core/Src/main.c **** 	            	Force_Active = 0;
 639:Core/Src/main.c **** 
 640:Core/Src/main.c **** 	            }
 641:Core/Src/main.c **** 			}
 642:Core/Src/main.c **** 			else if (Channel == M2_addr) {
 643:Core/Src/main.c **** 				M2_Value = RAW;
 644:Core/Src/main.c **** 	            M2 = fabs(((M2_Value * 0.1875) - 2500) / 100);
 645:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 646:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 647:Core/Src/main.c **** 	            M2_force[M2_idx] = M2_amp;
 648:Core/Src/main.c **** 	            M2_idx++;
 649:Core/Src/main.c **** 	            if (M2_idx == 20) M2_idx = 0;
 650:Core/Src/main.c **** 	            float ForceM2 = 0;
 651:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 652:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 17


 653:Core/Src/main.c **** 	            }
 654:Core/Src/main.c **** 	            M2_F = ForceM2 / 20;
 655:Core/Src/main.c **** 	            if (M2_F < 0.1) M2_F = 0.1;
 656:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 657:Core/Src/main.c **** 
 658:Core/Src/main.c **** 	            	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8 ) == GPIO_PIN_SET) {
 659:Core/Src/main.c **** 	            		return;
 660:Core/Src/main.c **** 	            	}
 661:Core/Src/main.c **** 	            	MotorBrake();
 662:Core/Src/main.c **** 	            	HAL_Delay(500);
 663:Core/Src/main.c **** 	            	MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 664:Core/Src/main.c **** 	            	HAL_Delay(500);
 665:Core/Src/main.c **** 	            	MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300);
 666:Core/Src/main.c **** 	            	Force_Active = 0;
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** 	            }
 669:Core/Src/main.c **** 			}
 670:Core/Src/main.c **** }
 671:Core/Src/main.c **** 
 672:Core/Src/main.c **** void CheckVoltage() {
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** 	//Simple Voltage check
 675:Core/Src/main.c **** 
 676:Core/Src/main.c **** 	if ( Voltage < Voltage_Limit_LOW) {
 677:Core/Src/main.c **** 		if (perimeterTracking == 1) return;
 678:Core/Src/main.c **** 		sprintf(msg, "Low Voltage - Searching for perimeter wire...\r\n");
 679:Core/Src/main.c **** 		Serial_RPi(msg);
 680:Core/Src/main.c **** 		Serial_Console(msg);
 681:Core/Src/main.c **** 		perimeterTracking = 1;
 682:Core/Src/main.c **** 		cutterOFF();
 683:Core/Src/main.c **** 	}
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** }
 686:Core/Src/main.c **** 
 687:Core/Src/main.c **** void SendInfo() {
 688:Core/Src/main.c **** 
 689:Core/Src/main.c **** 		SendInfoStatus = 0;
 690:Core/Src/main.c **** 
 691:Core/Src/main.c **** 		if (DEBUG_RAZORBOARD == 0) {
 692:Core/Src/main.c **** 			bwf1_inside = 0;
 693:Core/Src/main.c **** 			bwf1_outside = 0;
 694:Core/Src/main.c **** 			bwf2_inside = 0;
 695:Core/Src/main.c **** 			bwf2_outside = 0;
 696:Core/Src/main.c **** 			return;
 697:Core/Src/main.c **** 		}
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** 		// Send info to the Console & Raspberry PI - Update frequency is ~1 Hz
 700:Core/Src/main.c ****     	RTC_TimeTypeDef currTime = {0};
 701:Core/Src/main.c ****     	RTC_DateTypeDef currDate = {0};
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 704:Core/Src/main.c **** 		HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 705:Core/Src/main.c **** 
 706:Core/Src/main.c **** 		sprintf(msg, "M1: %.2f\r\n", M1_amp);
 707:Core/Src/main.c **** 		Serial_Console(msg);
 708:Core/Src/main.c **** 		sprintf(msg, "M2: %.2f\r\n", M2_amp);
 709:Core/Src/main.c **** 		Serial_Console(msg);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 18


 710:Core/Src/main.c **** 		sprintf(msg, "C1: %.2f\r\n", C1_amp);
 711:Core/Src/main.c **** 		Serial_Console(msg);
 712:Core/Src/main.c **** 		sprintf(msg, "V1: %.2f\r\n", (Voltage / 1000));
 713:Core/Src/main.c **** 		Serial_Console(msg);
 714:Core/Src/main.c **** 		sprintf(msg,"Charger Connected: %d\r\n", ChargerConnect);
 715:Core/Src/main.c **** 		Serial_Console(msg);
 716:Core/Src/main.c **** 		sprintf(msg,"IN-> BWF1: %d BWF2: %d\r\nOUT-> BWF1: %d BWF2: %d\r\n", bwf1_inside, bwf2_inside, bw
 717:Core/Src/main.c **** 		Serial_Console(msg);
 718:Core/Src/main.c **** 		sprintf(msg, "Battery Fully Charged: %d\r\n", Battery_Ready);
 719:Core/Src/main.c **** 		Serial_Console(msg);
 720:Core/Src/main.c **** 		sprintf(msg, "Roll: %.2f Pitch: %2.f Yaw: %2.f\r\n", roll, pitch, yaw);
 721:Core/Src/main.c **** 		Serial_Console(msg);
 722:Core/Src/main.c **** 		sprintf(msg, "Time: %d:%d:%d\r\n", currTime.Hours, currTime.Minutes, currTime.Seconds);
 723:Core/Src/main.c **** 		Serial_Console(msg);
 724:Core/Src/main.c **** 		sprintf(msg, "Date: 20%d-%d-%d\r\n", currDate.Year, currDate.Month, currDate.Date);
 725:Core/Src/main.c **** 		Serial_Console(msg);
 726:Core/Src/main.c **** 
 727:Core/Src/main.c **** 		char Data[128];
 728:Core/Src/main.c **** 
 729:Core/Src/main.c **** 		sprintf(Data, "Battery Voltage,%.2f\r\n"
 730:Core/Src/main.c **** 				      "M1 Current,%.2f\r\n"
 731:Core/Src/main.c **** 				      "M2 Current,%.2f\r\n"
 732:Core/Src/main.c **** 				      "C1 Current,%.2f\r\n"
 733:Core/Src/main.c **** 				      "Security,%d\r\n"
 734:Core/Src/main.c **** 				      "Mower State,%d\r\n", Voltage, M1_amp,M2_amp,C1_amp, Security, State);
 735:Core/Src/main.c **** 
 736:Core/Src/main.c **** 		bwf1_inside = 0;
 737:Core/Src/main.c **** 		bwf1_outside = 0;
 738:Core/Src/main.c **** 		bwf2_inside = 0;
 739:Core/Src/main.c **** 		bwf2_outside = 0;
 740:Core/Src/main.c **** 
 741:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, (uint8_t *)&Data, strlen(Data), 100);
 742:Core/Src/main.c **** 
 743:Core/Src/main.c **** }
 744:Core/Src/main.c **** 
 745:Core/Src/main.c **** void CollectADC() {
 746:Core/Src/main.c **** 
 747:Core/Src/main.c **** 	// Collect IC2 data from the external ADC, in a non-blocking way.
 748:Core/Src/main.c **** 
 749:Core/Src/main.c **** 	if (Channel == M1_addr && Channel_Status == 0) {
 750:Core/Src/main.c **** 		ADC_Send(Channel);
 751:Core/Src/main.c **** 		Channel_Status = 1;
 752:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 753:Core/Src/main.c **** 	}
 754:Core/Src/main.c **** 	else if (Channel == M2_addr && Channel_Status == 0) {
 755:Core/Src/main.c **** 		ADC_Send(Channel);
 756:Core/Src/main.c **** 		Channel_Status = 1;
 757:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 758:Core/Src/main.c **** 	}
 759:Core/Src/main.c **** 	else if (Channel == C1_addr && Channel_Status == 0) {
 760:Core/Src/main.c **** 		ADC_Send(Channel);
 761:Core/Src/main.c **** 		Channel_Status = 1;
 762:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 763:Core/Src/main.c **** 	}
 764:Core/Src/main.c **** 	else if (Channel == V1_addr && Channel_Status == 0) {
 765:Core/Src/main.c **** 		ADC_Send(Channel);
 766:Core/Src/main.c **** 		Channel_Status = 1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 19


 767:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 768:Core/Src/main.c **** 	}
 769:Core/Src/main.c **** 
 770:Core/Src/main.c **** 	if ((HAL_GetTick() - ADC_timer) >= 20 && Channel_Status == 1) {
 771:Core/Src/main.c **** 		int RAW = 0;
 772:Core/Src/main.c **** 		RAW = ADC_Receive();
 773:Core/Src/main.c **** 
 774:Core/Src/main.c **** 		CheckMotorCurrent(RAW);
 775:Core/Src/main.c **** 
 776:Core/Src/main.c **** 	    if (Channel == C1_addr) {
 777:Core/Src/main.c **** 			C1_Value = RAW;
 778:Core/Src/main.c **** 			float C1;
 779:Core/Src/main.c ****             C1 = fabs(((C1_Value * 0.1875) - 2500) / 100);
 780:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 781:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 782:Core/Src/main.c ****             if (C1_amp >= Cutter_Limit) {
 783:Core/Src/main.c ****             	MasterSwitch =  0;
 784:Core/Src/main.c ****             	return;
 785:Core/Src/main.c ****             }
 786:Core/Src/main.c **** 
 787:Core/Src/main.c **** 		}
 788:Core/Src/main.c **** 		else if (Channel == V1_addr) {
 789:Core/Src/main.c **** 			V1_Value = RAW;
 790:Core/Src/main.c ****             Voltage = (V1_Value * 0.1875) * 5.0;
 791:Core/Src/main.c **** 		}
 792:Core/Src/main.c **** 
 793:Core/Src/main.c **** 		if (Channel == M1_addr) Channel = M2_addr;
 794:Core/Src/main.c **** 		else if (Channel == M2_addr) Channel = C1_addr;
 795:Core/Src/main.c **** 		else if (Channel == C1_addr) Channel = V1_addr;
 796:Core/Src/main.c **** 		else if (Channel == V1_addr) Channel = M1_addr;
 797:Core/Src/main.c **** 		Channel_Status = 0;
 798:Core/Src/main.c **** 
 799:Core/Src/main.c **** 	}
 800:Core/Src/main.c **** }
 801:Core/Src/main.c **** 
 802:Core/Src/main.c **** void delay_us (uint16_t us)
 803:Core/Src/main.c **** {
 252              		.loc 1 803 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 804:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim5,0);  // set the counter value a 0
 257              		.loc 1 804 2 view .LVU63
 258 0000 034B     		ldr	r3, .L20
 259 0002 1A68     		ldr	r2, [r3]
 260 0004 0023     		movs	r3, #0
 261 0006 5362     		str	r3, [r2, #36]
 805:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim5) < us);  // wait for the counter to reach the us input in the 
 262              		.loc 1 805 2 view .LVU64
 263              	.L19:
 264              		.loc 1 805 44 discriminator 1 view .LVU65
 265              		.loc 1 805 8 discriminator 1 view .LVU66
 266              		.loc 1 805 9 is_stmt 0 discriminator 1 view .LVU67
 267 0008 536A     		ldr	r3, [r2, #36]
 268              		.loc 1 805 8 discriminator 1 view .LVU68
 269 000a 8342     		cmp	r3, r0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 20


 270 000c FCD3     		bcc	.L19
 806:Core/Src/main.c **** }
 271              		.loc 1 806 1 view .LVU69
 272 000e 7047     		bx	lr
 273              	.L21:
 274              		.align	2
 275              	.L20:
 276 0010 00000000 		.word	htim5
 277              		.cfi_endproc
 278              	.LFE290:
 280              		.section	.text.cutterOFF,"ax",%progbits
 281              		.align	1
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	cutterOFF:
 288              	.LFB301:
 807:Core/Src/main.c **** 
 808:Core/Src/main.c **** void unDock(void) {
 809:Core/Src/main.c **** 
 810:Core/Src/main.c **** 	// Simple undock sequence,  check if Battery is ready (fully charged) and if we are within working
 811:Core/Src/main.c **** 
 812:Core/Src/main.c **** 	RTC_TimeTypeDef currTime = {0};
 813:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 814:Core/Src/main.c **** 
 815:Core/Src/main.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 816:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 817:Core/Src/main.c **** 
 818:Core/Src/main.c **** 	if (currTime.Hours >= WorkingHourStart && currTime.Hours < WorkingHourEnd && Battery_Ready == 1 &&
 819:Core/Src/main.c **** 
 820:Core/Src/main.c **** 		Serial_Console("Switching to Main Battery\r\n");
 821:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_RESET);
 822:Core/Src/main.c **** 		HAL_Delay(5000);
 823:Core/Src/main.c **** 
 824:Core/Src/main.c **** 		Undock_MotorBackward(MotorMinSpeed, MotorMaxSpeed);
 825:Core/Src/main.c **** 
 826:Core/Src/main.c **** 		MotorLeft(MotorMinSpeed, MotorMaxSpeed, 500);			// This needs to be changed if your docking is on
 827:Core/Src/main.c **** 
 828:Core/Src/main.c **** 		Docked = 0;
 829:Core/Src/main.c **** 		Initial_Start = 0;
 830:Core/Src/main.c **** 		Start_Threshold = 0;
 831:Core/Src/main.c **** 		Battery_Ready = 0;
 832:Core/Src/main.c **** 		lastError = 0;
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** 	}
 835:Core/Src/main.c **** 
 836:Core/Src/main.c **** }
 837:Core/Src/main.c **** 
 838:Core/Src/main.c **** void ChargerConnected(void) {
 839:Core/Src/main.c **** 
 840:Core/Src/main.c **** 	// Is the charger connected?
 841:Core/Src/main.c **** 
 842:Core/Src/main.c **** 	if (ChargerConnect == 1 || Docked == 1) {
 843:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 844:Core/Src/main.c **** 			Battery_Ready = 1;
 845:Core/Src/main.c **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 21


 846:Core/Src/main.c **** 			Serial_Console("Charger disconnected.\r\n");
 847:Core/Src/main.c **** 			ChargerConnect = 0;
 848:Core/Src/main.c **** 		}
 849:Core/Src/main.c **** 		return;
 850:Core/Src/main.c **** 	}
 851:Core/Src/main.c **** 
 852:Core/Src/main.c **** 	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8 ) == GPIO_PIN_SET) {			// Read Volt sense pin
 853:Core/Src/main.c **** 		HAL_Delay(HoldChargeDetection);									// Wait for a while so a proper connection is made
 854:Core/Src/main.c **** 		Force_Active = 0;
 855:Core/Src/main.c **** 		MotorBrake();
 856:Core/Src/main.c **** 		cutterHardBreak();
 857:Core/Src/main.c **** 		Serial_Console("Charger Connected\r\n");
 858:Core/Src/main.c **** 		HAL_Delay(10000);
 859:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_SET);				// Main Power switch
 860:Core/Src/main.c **** 		Serial_Console("Changing Main Power\r\n");
 861:Core/Src/main.c **** 		ChargerConnect = 1;
 862:Core/Src/main.c **** 		Docked = 1;
 863:Core/Src/main.c **** 		HAL_Delay(5000);
 864:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);			// Charger Switch
 865:Core/Src/main.c **** 		Serial_Console("Charging activated\r\n");
 866:Core/Src/main.c **** 		perimeterTracking = 0;
 867:Core/Src/main.c **** 		perimeterTrackingActive = 0;
 868:Core/Src/main.c **** 		return;
 869:Core/Src/main.c **** 		}
 870:Core/Src/main.c **** }
 871:Core/Src/main.c **** 
 872:Core/Src/main.c **** void perimeterTracker() {
 873:Core/Src/main.c **** 
 874:Core/Src/main.c **** 	CheckSecurity();
 875:Core/Src/main.c **** 
 876:Core/Src/main.c **** 	elapsedTime = HAL_GetTick() - previousTime;
 877:Core/Src/main.c **** 
 878:Core/Src/main.c ****     if (BWF2_Status == OUTSIDE) {
 879:Core/Src/main.c ****     	Tick1 -= elapsedTime;
 880:Core/Src/main.c ****     	Tick2 = 0;
 881:Core/Src/main.c ****     }
 882:Core/Src/main.c **** 
 883:Core/Src/main.c ****     if (BWF2_Status == INSIDE) {
 884:Core/Src/main.c ****     	Tick2 -= elapsedTime;
 885:Core/Src/main.c ****     	Tick1 = 0;
 886:Core/Src/main.c ****     }
 887:Core/Src/main.c **** 
 888:Core/Src/main.c ****     error = 2800 - (Tick1 + Tick2);                // determine error
 889:Core/Src/main.c ****     cumError += error * elapsedTime;               // compute integral
 890:Core/Src/main.c ****     rateError = (error - lastError)/elapsedTime;   // compute derivative
 891:Core/Src/main.c **** 
 892:Core/Src/main.c ****     double out = kp*error + ki*cumError + kd*rateError;                //PID output
 893:Core/Src/main.c **** 
 894:Core/Src/main.c ****     lastError = error;                             //remember current error
 895:Core/Src/main.c ****     previousTime = HAL_GetTick();                  //remember current time
 896:Core/Src/main.c **** 
 897:Core/Src/main.c ****     int speedA = (2800 + round(out));
 898:Core/Src/main.c ****     int speedB = (2800 - round(out));
 899:Core/Src/main.c **** 
 900:Core/Src/main.c ****     if (speedA > 3200) speedA = 3200;				// limit upper and lower speed
 901:Core/Src/main.c ****     if (speedB > 3200) speedB = 3200;
 902:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 22


 903:Core/Src/main.c ****     if (speedA < 1000) speedA = 1000;
 904:Core/Src/main.c ****     if (speedB < 1000) speedB = 1000;
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****     if (BWF2_Status == OUTSIDE) {
 907:Core/Src/main.c **** 
 908:Core/Src/main.c **** 		  if (BWF1_Status == OUTSIDE) {
 909:Core/Src/main.c **** 			  TIM4->CCR1 = 2300;			// if both boundary sensors are OUTSIDE, reverse M1 motor, this logic nee
 910:Core/Src/main.c **** 			  TIM4->CCR2 = 0;
 911:Core/Src/main.c **** 		  }
 912:Core/Src/main.c **** 		  else if (BWF1_Status == INSIDE) {
 913:Core/Src/main.c **** 			  TIM4->CCR1 = 0;
 914:Core/Src/main.c **** 			  TIM4->CCR2 = speedB;
 915:Core/Src/main.c **** 		  }
 916:Core/Src/main.c **** 
 917:Core/Src/main.c **** 		  TIM4->CCR3 = speedA;
 918:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 919:Core/Src/main.c **** 
 920:Core/Src/main.c ****     }
 921:Core/Src/main.c **** 
 922:Core/Src/main.c ****     if (BWF2_Status == INSIDE) {
 923:Core/Src/main.c **** 		  TIM4->CCR1 = 0;
 924:Core/Src/main.c **** 		  TIM4->CCR2 = speedA;
 925:Core/Src/main.c **** 
 926:Core/Src/main.c **** 		  TIM4->CCR3 = round(speedB * 0.95);
 927:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 928:Core/Src/main.c ****     }
 929:Core/Src/main.c **** 
 930:Core/Src/main.c **** }
 931:Core/Src/main.c **** void parseCommand_Console(void) {
 932:Core/Src/main.c **** 
 933:Core/Src/main.c **** 	// Parse commands from the Console
 934:Core/Src/main.c **** 
 935:Core/Src/main.c **** 	char Command[64] = {"\0"};
 936:Core/Src/main.c **** 
 937:Core/Src/main.c **** 	for (uint8_t x = 0; x < sizeof(ConsoleBuffer); x++) {
 938:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 939:Core/Src/main.c **** 			if (ConsoleBuffer[0] == 13) memcpy(Command, "DISABLE", 7);
 940:Core/Src/main.c **** 			else {
 941:Core/Src/main.c **** 				memcpy(Command,ConsoleBuffer,x);
 942:Core/Src/main.c **** 			}
 943:Core/Src/main.c **** 			sprintf(msg,"%s\r\n", Command);
 944:Core/Src/main.c **** 			Serial_Console(msg);
 945:Core/Src/main.c **** 			for (uint8_t i = 0; i < CONSOLE_BFR_SIZE; i++) {
 946:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 947:Core/Src/main.c **** 			}
 948:Core/Src/main.c **** 
 949:Core/Src/main.c **** 			if (strcmp(Command, "HELLO") == 0) {
 950:Core/Src/main.c **** 				Serial_Console("Hello fellow user! Welcome to RazorBoard!\r\n");
 951:Core/Src/main.c **** 				}
 952:Core/Src/main.c **** 			if (strcmp(Command, "VERSION") == 0) {
 953:Core/Src/main.c **** 				sprintf(msg, "%s\r\n", VERSION);
 954:Core/Src/main.c **** 				Serial_Console(msg);
 955:Core/Src/main.c **** 				}
 956:Core/Src/main.c **** 			if (strcmp(Command, "DEBUG ON") == 0) {
 957:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 1;
 958:Core/Src/main.c **** 				Serial_Console("DEBUG is now ON\r\n");
 959:Core/Src/main.c **** 				}
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 23


 960:Core/Src/main.c **** 			if (strcmp(Command, "DEBUG OFF") == 0) {
 961:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 0;
 962:Core/Src/main.c **** 				Serial_Console("DEBUG is now OFF\r\n");
 963:Core/Src/main.c **** 				}
 964:Core/Src/main.c **** 			if (strcmp(Command, "VOLTAGE") == 0) {
 965:Core/Src/main.c **** 				float volt = Voltage / 1000;
 966:Core/Src/main.c **** 				sprintf(msg, "%.2f\r\n", volt);
 967:Core/Src/main.c **** 				Serial_Console(msg);
 968:Core/Src/main.c **** 				}
 969:Core/Src/main.c **** 			if (strcmp(Command, "UPGRADE") == 0) {
 970:Core/Src/main.c **** 				Serial_Console("Entering Bootloader...\r\n");
 971:Core/Src/main.c **** 				HAL_Delay(500);
 972:Core/Src/main.c **** 				BootLoaderInit(1);
 973:Core/Src/main.c **** 			}
 974:Core/Src/main.c **** 			if (strcmp(Command, "SHOW SIG") == 0) {
 975:Core/Src/main.c **** 				Serial_Console("Signature will be printed in 8 seconds, please start your plotter before.\r\n")
 976:Core/Src/main.c **** 				HAL_Delay(8000);
 977:Core/Src/main.c **** 				for (int x = 0; x < SIGNATURE_LEN; x++) {
 978:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 979:Core/Src/main.c **** 					Serial_Console(msg);
 980:Core/Src/main.c **** 				}
 981:Core/Src/main.c **** 			}
 982:Core/Src/main.c **** 			if (strcmp(Command, "EXPORT SIG") == 0) {
 983:Core/Src/main.c **** 				Serial_Console("Signature exported as an array\r\n");
 984:Core/Src/main.c **** 				Serial_Console("{ ");
 985:Core/Src/main.c **** 				for (int x = 0; x < SIGNATURE_LEN; x++) {
 986:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 987:Core/Src/main.c **** 					Serial_Console(msg);
 988:Core/Src/main.c **** 				}
 989:Core/Src/main.c **** 				Serial_Console(" };\r\n");
 990:Core/Src/main.c **** 			}
 991:Core/Src/main.c **** 			if (strcmp(Command, "RECORD SIG") == 0) {
 992:Core/Src/main.c **** 				Signature_Record = TRUE;
 993:Core/Src/main.c **** 				Serial_Console("Done!\r\n");
 994:Core/Src/main.c **** 			}
 995:Core/Src/main.c **** 			if (strcmp(Command, "TEST LEFT MOTOR") == 0) {
 996:Core/Src/main.c **** 				  TIM4->CCR1 = 0;
 997:Core/Src/main.c **** 				  TIM4->CCR2 = 2000;
 998:Core/Src/main.c **** 				  HAL_Delay(3000);
 999:Core/Src/main.c **** 				  MotorStop();
1000:Core/Src/main.c **** 				  Serial_Console("Done.\r\n");
1001:Core/Src/main.c **** 			}
1002:Core/Src/main.c **** 			if (strcmp(Command, "TEST RIGHT MOTOR") == 0) {
1003:Core/Src/main.c **** 				  TIM4->CCR3 = 2000;
1004:Core/Src/main.c **** 				  TIM4->CCR4 = 0;
1005:Core/Src/main.c **** 				  HAL_Delay(3000);
1006:Core/Src/main.c **** 				  MotorStop();
1007:Core/Src/main.c **** 				  Serial_Console("Done.\r\n");
1008:Core/Src/main.c **** 			}
1009:Core/Src/main.c **** 			if (strcmp(Command, "REBOOT") == 0) {
1010:Core/Src/main.c **** 				Serial_Console("Rebooting...\r\n");
1011:Core/Src/main.c **** 				HAL_Delay(500);
1012:Core/Src/main.c **** 				NVIC_SystemReset();
1013:Core/Src/main.c **** 
1014:Core/Src/main.c **** 			}
1015:Core/Src/main.c **** 			if (strcmp(Command, "SHOW CURRENT") == 0) {
1016:Core/Src/main.c **** 				sprintf(msg, "M1: %.2f\r\nM2: %.2f\r\nC1: %.2f\r\n", M1_amp, M2_amp, C1_amp);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 24


1017:Core/Src/main.c **** 				Serial_Console(msg);
1018:Core/Src/main.c **** 			}
1019:Core/Src/main.c **** 			if (strcmp(Command, "STOP MOTORS") == 0) {
1020:Core/Src/main.c **** 				MotorStop();
1021:Core/Src/main.c **** 			}
1022:Core/Src/main.c **** 			if (strcmp(Command, "RUN MOTORS FORWARD") == 0) {
1023:Core/Src/main.c **** 				TIM4->CCR1 = 0;
1024:Core/Src/main.c **** 				TIM4->CCR2 = 2000;
1025:Core/Src/main.c **** 				TIM4->CCR3 = 2000;
1026:Core/Src/main.c **** 				TIM4->CCR4 = 0;
1027:Core/Src/main.c **** 			}
1028:Core/Src/main.c **** 			if (strcmp(Command, "RUN MOTORS REVERSE") == 0) {
1029:Core/Src/main.c **** 				TIM4->CCR1 = 2000;
1030:Core/Src/main.c **** 				TIM4->CCR2 = 0;
1031:Core/Src/main.c **** 				TIM4->CCR3 = 0;
1032:Core/Src/main.c **** 				TIM4->CCR4 = 2000;
1033:Core/Src/main.c **** 			}
1034:Core/Src/main.c **** 			if (strncmp(Command, "SET DATE", 8) == 0) {
1035:Core/Src/main.c **** 				int year = 0, month = 0, day = 0, weekday = 0;
1036:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
1037:Core/Src/main.c **** 				sscanf(Command, "%s %s %d %d %d %d", cmd1, cmd2, &year, &month, &day, &weekday);
1038:Core/Src/main.c **** 				setDate(year, month, day, weekday);
1039:Core/Src/main.c **** 
1040:Core/Src/main.c **** 			}
1041:Core/Src/main.c **** 			if (strncmp(Command, "SET TIME", 8) == 0) {
1042:Core/Src/main.c **** 				int hour = 0, minute = 0, second = 0;
1043:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
1044:Core/Src/main.c **** 				sscanf(Command, "%s %s %d %d %d", cmd1, cmd2, &hour, &minute, &second);
1045:Core/Src/main.c **** 				setTime(hour, minute, second);
1046:Core/Src/main.c **** 			}
1047:Core/Src/main.c **** 			if (strncmp(Command, "SET KP", 6) == 0) {
1048:Core/Src/main.c **** 				float pid_kp;
1049:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
1050:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_kp);
1051:Core/Src/main.c **** 				kp = pid_kp;
1052:Core/Src/main.c **** 			}
1053:Core/Src/main.c **** 			if (strncmp(Command, "SET KI", 6) == 0) {
1054:Core/Src/main.c **** 				float pid_ki;
1055:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
1056:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_ki);
1057:Core/Src/main.c **** 				ki = pid_ki;
1058:Core/Src/main.c **** 			}
1059:Core/Src/main.c **** 			if (strncmp(Command, "SET KD", 6) == 0) {
1060:Core/Src/main.c **** 				float pid_kd;
1061:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
1062:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_kd);
1063:Core/Src/main.c **** 				kd = pid_kd;
1064:Core/Src/main.c **** 			}
1065:Core/Src/main.c **** 
1066:Core/Src/main.c **** 			if (strcmp(Command, "DISABLE") == 0) {
1067:Core/Src/main.c **** 				MasterSwitch = 0;
1068:Core/Src/main.c **** 				Serial_Console("RazorBoard DISABLED.\r\n");
1069:Core/Src/main.c **** 				Serial_Console("Please type <help> to see available commands\r\n");
1070:Core/Src/main.c **** 			}
1071:Core/Src/main.c **** 
1072:Core/Src/main.c **** 			if (strcmp(Command, "ENABLE") == 0) {
1073:Core/Src/main.c **** 				MasterSwitch = 1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 25


1074:Core/Src/main.c **** 				Serial_Console("RazorBoard ENABLED. STEP AWAY FROM THE VEHICLE!\r\n");
1075:Core/Src/main.c **** 				Initial_Start = 0;
1076:Core/Src/main.c **** 				Initial_Start = 0;
1077:Core/Src/main.c **** 			}
1078:Core/Src/main.c **** 			if (strcmp(Command, "TRACK PERIMETER") == 0) {
1079:Core/Src/main.c **** 				perimeterTracking = 1;
1080:Core/Src/main.c **** 				cutterOFF();
1081:Core/Src/main.c **** 				Serial_Console("Perimeter tracking ENABLED\r\n");
1082:Core/Src/main.c **** 			}
1083:Core/Src/main.c **** 			if (strcmp(Command, "SHOW PID TRACKING") == 0) {
1084:Core/Src/main.c **** 				sprintf(msg, "KP: %f KI: %f KD: %f\r\n", kp, ki, kd);
1085:Core/Src/main.c **** 				Serial_Console(msg);
1086:Core/Src/main.c **** 			}
1087:Core/Src/main.c **** 			if (strncmp(Command, "SET WORKING START", 17) == 0) {
1088:Core/Src/main.c **** 				int start;
1089:Core/Src/main.c **** 				char cmd1[3], cmd2[7], cmd3[5];
1090:Core/Src/main.c **** 				sscanf(Command, "%s %s %s %d", cmd1, cmd2, cmd3, &start);
1091:Core/Src/main.c **** 				WorkingHourStart = start;
1092:Core/Src/main.c **** 			}
1093:Core/Src/main.c **** 			if (strncmp(Command, "SET WORKING END", 15) == 0) {
1094:Core/Src/main.c **** 				int end;
1095:Core/Src/main.c **** 				char cmd1[3], cmd2[7], cmd3[3];
1096:Core/Src/main.c **** 				sscanf(Command, "%s %s %s %d", cmd1, cmd2, cmd3, &end);
1097:Core/Src/main.c **** 				WorkingHourEnd = end;
1098:Core/Src/main.c **** 			}
1099:Core/Src/main.c **** 			if (strcmp(Command, "SHOW WORKINGHOURS") == 0) {
1100:Core/Src/main.c **** 				sprintf(msg, "START: %d END: %d\r\n", WorkingHourStart, WorkingHourEnd);
1101:Core/Src/main.c **** 				Serial_Console(msg);
1102:Core/Src/main.c **** 			}
1103:Core/Src/main.c **** 			if (strcmp(Command, "HELP") == 0) {
1104:Core/Src/main.c **** 				sprintf(msg, "Available commands:\r\n\r\n");
1105:Core/Src/main.c **** 				Serial_Console(msg);
1106:Core/Src/main.c **** 				sprintf(msg, "HELLO             	- Welcome message\r\n");
1107:Core/Src/main.c **** 				Serial_Console(msg);
1108:Core/Src/main.c **** 				sprintf(msg, "REBOOT                  - Reboot Razorboard\r\n");
1109:Core/Src/main.c **** 				Serial_Console(msg);
1110:Core/Src/main.c **** 				sprintf(msg, "DISABLE                 - Disable Razorboard\r\n");
1111:Core/Src/main.c **** 				Serial_Console(msg);
1112:Core/Src/main.c **** 				sprintf(msg, "ENABLE                  - Enable Razorboard\r\n");
1113:Core/Src/main.c **** 				Serial_Console(msg);
1114:Core/Src/main.c **** 				sprintf(msg, "VERSION           	- Show version of board\r\n");
1115:Core/Src/main.c **** 				Serial_Console(msg);
1116:Core/Src/main.c **** 				sprintf(msg, "DEBUG ON          	- Enable debug messages\r\n");
1117:Core/Src/main.c **** 				Serial_Console(msg);
1118:Core/Src/main.c **** 				sprintf(msg, "DEBUG OFF         	- Disable debug messages\r\n");
1119:Core/Src/main.c **** 				Serial_Console(msg);
1120:Core/Src/main.c **** 				sprintf(msg, "VOLTAGE           	- Show current voltage\r\n");
1121:Core/Src/main.c **** 				Serial_Console(msg);
1122:Core/Src/main.c **** 				sprintf(msg, "UPGRADE           	- Enter bootloader\r\n");
1123:Core/Src/main.c **** 				Serial_Console(msg);
1124:Core/Src/main.c **** 				sprintf(msg, "SHOW SIG          	- Show reference BWF signature\r\n");
1125:Core/Src/main.c **** 				Serial_Console(msg);
1126:Core/Src/main.c **** 				sprintf(msg, "EXPORT SIG          	- Export reference BWF signature as an array\r\n");
1127:Core/Src/main.c **** 				Serial_Console(msg);
1128:Core/Src/main.c **** 				sprintf(msg, "RECORD SIG              - Record a new signature\r\n");
1129:Core/Src/main.c **** 				Serial_Console(msg);
1130:Core/Src/main.c **** 				sprintf(msg, "TEST LEFT MOTOR   	- Test left motor (M1)\r\n");
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 26


1131:Core/Src/main.c **** 				Serial_Console(msg);
1132:Core/Src/main.c **** 				sprintf(msg, "TEST RIGHT MOTOR  	- Test right motor (M2)\r\n");
1133:Core/Src/main.c **** 				Serial_Console(msg);
1134:Core/Src/main.c **** 				sprintf(msg, "SHOW CURRENT      	- Show current sensors M1, M2, C1\r\n");
1135:Core/Src/main.c **** 				Serial_Console(msg);
1136:Core/Src/main.c **** 				sprintf(msg, "STOP MOTORS       	- Stop motors\r\n");
1137:Core/Src/main.c **** 				Serial_Console(msg);
1138:Core/Src/main.c **** 				sprintf(msg, "RUN MOTORS FORWARD	- Run motors forward\r\n");
1139:Core/Src/main.c **** 				Serial_Console(msg);
1140:Core/Src/main.c **** 				sprintf(msg, "RUN MOTORS REVERSE	- Run motors backward\r\n");
1141:Core/Src/main.c **** 				Serial_Console(msg);
1142:Core/Src/main.c **** 				sprintf(msg, "SET TIME		- Set current time for RTC\r\n");
1143:Core/Src/main.c **** 				Serial_Console(msg);
1144:Core/Src/main.c **** 				sprintf(msg, "SET DATE		- Set current date for RTC\r\n");
1145:Core/Src/main.c **** 				Serial_Console(msg);
1146:Core/Src/main.c **** 				sprintf(msg, "			Date must be set in a special order:\r\n");
1147:Core/Src/main.c **** 				Serial_Console(msg);
1148:Core/Src/main.c **** 				sprintf(msg, "			Year Month Day Weekday -> 21 3 31 2 (2 = Wednesday)\r\n");
1149:Core/Src/main.c **** 				Serial_Console(msg);
1150:Core/Src/main.c **** 				sprintf(msg, "TRACK PERIMETER 	- Track perimeter next time it crosses\r\n");
1151:Core/Src/main.c **** 				Serial_Console(msg);
1152:Core/Src/main.c **** 				sprintf(msg, "SET KP			- PID Controller KP for Perimeter Tracking\r\n");
1153:Core/Src/main.c **** 				Serial_Console(msg);
1154:Core/Src/main.c **** 				sprintf(msg, "SET KI			- PID Controller KI for Perimeter Tracking\r\n");
1155:Core/Src/main.c **** 				Serial_Console(msg);
1156:Core/Src/main.c **** 				sprintf(msg, "SET KD			- PID Controller KD for Perimeter Tracking\r\n");
1157:Core/Src/main.c **** 				Serial_Console(msg);
1158:Core/Src/main.c **** 				sprintf(msg, "SHOW PID TRACKING	- Export current settings for tracking PID\r\n");
1159:Core/Src/main.c **** 				Serial_Console(msg);
1160:Core/Src/main.c **** 				sprintf(msg, "SET WORKING START	- Set Working Hour START\r\n");
1161:Core/Src/main.c **** 				Serial_Console(msg);
1162:Core/Src/main.c **** 				sprintf(msg, "SET WORKING END   - Set Working Hour END\r\n");
1163:Core/Src/main.c **** 				Serial_Console(msg);
1164:Core/Src/main.c **** 				sprintf(msg, "SHOW WORKINGHOURS	- Show current set working hours\r\n");
1165:Core/Src/main.c **** 				Serial_Console(msg);
1166:Core/Src/main.c **** 			}
1167:Core/Src/main.c **** 
1168:Core/Src/main.c **** 			memset(ConsoleBuffer, 0, sizeof(CONSOLE_BFR_SIZE));
1169:Core/Src/main.c **** 
1170:Core/Src/main.c **** 			UART1_ready = 0;
1171:Core/Src/main.c **** 			break;
1172:Core/Src/main.c **** 			}
1173:Core/Src/main.c **** 	}
1174:Core/Src/main.c **** 	UART1_ready = 0;
1175:Core/Src/main.c **** }
1176:Core/Src/main.c **** void parseCommand_RPI() {
1177:Core/Src/main.c **** 
1178:Core/Src/main.c **** 	// Parse commands from the Raspberry PI
1179:Core/Src/main.c **** 
1180:Core/Src/main.c **** 	char Command[64] = {"\0"};
1181:Core/Src/main.c **** 
1182:Core/Src/main.c **** 	for (uint8_t x = 0; x < sizeof(PIBuffer); x++) {
1183:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
1184:Core/Src/main.c **** 			memcpy(Command,PIBuffer,x);
1185:Core/Src/main.c **** 			sprintf(msg,"%s\r\n", Command);
1186:Core/Src/main.c **** 			if (strcmp(Command, "RUN") == 0) {
1187:Core/Src/main.c **** 				MasterSwitch = 1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 27


1188:Core/Src/main.c **** 				Serial_RPi("Status: RUN\r\n");
1189:Core/Src/main.c **** 				Serial_Console("Status: RUN\r\n");
1190:Core/Src/main.c **** 			}
1191:Core/Src/main.c **** 			if (strcmp(Command, "AVOID_LEFT") == 0 && State == FORWARD) {
1192:Core/Src/main.c **** 				AVOID_LEFT = 1;
1193:Core/Src/main.c **** 			}
1194:Core/Src/main.c **** 			if (strcmp(Command, "AVOID_RIGHT") == 0 && State == FORWARD) {
1195:Core/Src/main.c **** 				AVOID_RIGHT = 1;
1196:Core/Src/main.c **** 			}
1197:Core/Src/main.c **** 			if (strcmp(Command, "AVOID_FRONT") == 0 && State == FORWARD) {
1198:Core/Src/main.c **** 				AVOID_FRONT = 1;
1199:Core/Src/main.c **** 			}
1200:Core/Src/main.c **** 			if (strcmp(Command, "GOHOME") == 0) {
1201:Core/Src/main.c **** 				perimeterTracking = 1;
1202:Core/Src/main.c **** 			}
1203:Core/Src/main.c **** 			if (strcmp(Command, "STOP") == 0) {
1204:Core/Src/main.c **** 				MasterSwitch = 0;
1205:Core/Src/main.c **** 
1206:Core/Src/main.c **** 				Serial_RPi("Status: STOP\r\n");
1207:Core/Src/main.c **** 				Serial_Console("Status: STOP\r\n");
1208:Core/Src/main.c **** 			}
1209:Core/Src/main.c **** 			Serial_Console(msg);
1210:Core/Src/main.c **** 			UART2_ready = 0;
1211:Core/Src/main.c **** 
1212:Core/Src/main.c **** 			break;
1213:Core/Src/main.c **** 		}
1214:Core/Src/main.c **** 	}
1215:Core/Src/main.c **** }
1216:Core/Src/main.c **** 
1217:Core/Src/main.c **** void Serial_Console(char *msg) {
1218:Core/Src/main.c **** 
1219:Core/Src/main.c **** 	// Write to USB/Serial
1220:Core/Src/main.c **** 
1221:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t *)msg, strlen(msg), 100);
1222:Core/Src/main.c **** }
1223:Core/Src/main.c **** void Serial_RPi(char *msg) {
1224:Core/Src/main.c **** 
1225:Core/Src/main.c **** 	// Write to Raspberry PI
1226:Core/Src/main.c **** 
1227:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), 100);
1228:Core/Src/main.c **** }
1229:Core/Src/main.c **** uint8_t CheckSecurity(void) {
1230:Core/Src/main.c **** 
1231:Core/Src/main.c **** 	// Check security, what is our status with the boundary signals
1232:Core/Src/main.c **** 
1233:Core/Src/main.c ****     CheckBWF();
1234:Core/Src/main.c **** 
1235:Core/Src/main.c **** 
1236:Core/Src/main.c ****     if (HAL_GetTick() - Boundary_Timer >= (Boundary_Timeout * 1000)) {
1237:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
1238:Core/Src/main.c ****     	BWF2_Status = NOSIGNAL;
1239:Core/Src/main.c ****     	State = FAIL;
1240:Core/Src/main.c ****     	Security = NOSIGNAL;
1241:Core/Src/main.c ****     	return SECURITY_NOSIGNAL;
1242:Core/Src/main.c ****     }
1243:Core/Src/main.c **** 
1244:Core/Src/main.c ****     if (BWF1_Status == INSIDE && BWF2_Status == INSIDE) {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 28


1245:Core/Src/main.c ****     	Security = INSIDE;
1246:Core/Src/main.c ****     	OUTSIDE_timer = HAL_GetTick();		// We are inside, reset OUTSIDE_timer
1247:Core/Src/main.c **** 		return SECURITY_OK;
1248:Core/Src/main.c **** 	}
1249:Core/Src/main.c **** 	else if (BWF1_Status == OUTSIDE || BWF2_Status == OUTSIDE) {
1250:Core/Src/main.c **** 		Security = OUTSIDE;
1251:Core/Src/main.c **** 		return SECURITY_FAIL;
1252:Core/Src/main.c **** 	}
1253:Core/Src/main.c **** 
1254:Core/Src/main.c **** 	return SECURITY_FAIL;
1255:Core/Src/main.c **** 
1256:Core/Src/main.c **** }
1257:Core/Src/main.c **** 
1258:Core/Src/main.c **** void cutterHardBreak() {
1259:Core/Src/main.c **** 
1260:Core/Src/main.c **** 	// Cutter disc hard brake
1261:Core/Src/main.c **** 
1262:Core/Src/main.c **** 	TIM3->CCR1 = MotorMaxSpeed;		// Motor will hard brake when both "pins" go HIGH
1263:Core/Src/main.c **** 	TIM3->CCR2 = MotorMaxSpeed;
1264:Core/Src/main.c **** 	HAL_Delay(3000);
1265:Core/Src/main.c **** 	cutterOFF();
1266:Core/Src/main.c **** 
1267:Core/Src/main.c **** }
1268:Core/Src/main.c **** 
1269:Core/Src/main.c **** void cutterON(void) {
1270:Core/Src/main.c **** 
1271:Core/Src/main.c **** 	cutterStatus = 1;
1272:Core/Src/main.c **** 
1273:Core/Src/main.c **** 	Serial_Console("Cutter Motor ON\r\n");
1274:Core/Src/main.c **** 
1275:Core/Src/main.c **** 	if (rnd(1000) < 500 ) {			// Randomly select CW or CCW
1276:Core/Src/main.c **** 
1277:Core/Src/main.c **** 		for (uint16_t cutterSpeed = 1000; cutterSpeed < CUTTER_MAX_SPEED; cutterSpeed++) {
1278:Core/Src/main.c **** 
1279:Core/Src/main.c **** 			Boundary_Timer = HAL_GetTick();
1280:Core/Src/main.c **** 			TIM3->CCR1 = cutterSpeed;
1281:Core/Src/main.c **** 			TIM3->CCR2 = 0;
1282:Core/Src/main.c **** 			HAL_Delay(2);
1283:Core/Src/main.c **** 
1284:Core/Src/main.c **** 		}
1285:Core/Src/main.c **** 	}
1286:Core/Src/main.c **** 	else {
1287:Core/Src/main.c **** 		for (uint16_t cutterSpeed = 1000; cutterSpeed < CUTTER_MAX_SPEED; cutterSpeed++) {
1288:Core/Src/main.c **** 
1289:Core/Src/main.c **** 			Boundary_Timer = HAL_GetTick();
1290:Core/Src/main.c **** 			TIM3->CCR1 = 0;
1291:Core/Src/main.c **** 			TIM3->CCR2 = cutterSpeed;
1292:Core/Src/main.c **** 			HAL_Delay(2);
1293:Core/Src/main.c **** 
1294:Core/Src/main.c **** 		}
1295:Core/Src/main.c **** 	}
1296:Core/Src/main.c **** 
1297:Core/Src/main.c **** }
1298:Core/Src/main.c **** 
1299:Core/Src/main.c **** void cutterOFF(void) {
 289              		.loc 1 1299 22 is_stmt 1 view -0
 290              		.cfi_startproc
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 29


 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
1300:Core/Src/main.c **** 
1301:Core/Src/main.c **** 	cutterStatus = 0;
 294              		.loc 1 1301 2 view .LVU71
 295              		.loc 1 1301 15 is_stmt 0 view .LVU72
 296 0000 0023     		movs	r3, #0
 297 0002 034A     		ldr	r2, .L23
 298 0004 1370     		strb	r3, [r2]
1302:Core/Src/main.c **** 
1303:Core/Src/main.c **** 	TIM3->CCR1 = 0;
 299              		.loc 1 1303 2 is_stmt 1 view .LVU73
 300              		.loc 1 1303 13 is_stmt 0 view .LVU74
 301 0006 034A     		ldr	r2, .L23+4
 302 0008 5363     		str	r3, [r2, #52]
1304:Core/Src/main.c **** 	TIM3->CCR2 = 0;
 303              		.loc 1 1304 2 is_stmt 1 view .LVU75
 304              		.loc 1 1304 13 is_stmt 0 view .LVU76
 305 000a 9363     		str	r3, [r2, #56]
1305:Core/Src/main.c **** 
1306:Core/Src/main.c **** }
 306              		.loc 1 1306 1 view .LVU77
 307 000c 7047     		bx	lr
 308              	.L24:
 309 000e 00BF     		.align	2
 310              	.L23:
 311 0010 00000000 		.word	.LANCHOR8
 312 0014 00040040 		.word	1073742848
 313              		.cfi_endproc
 314              	.LFE301:
 316              		.global	__aeabi_i2d
 317              		.global	__aeabi_dmul
 318              		.global	__aeabi_d2iz
 319              		.section	.text.UpdateMotorSpeed,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	UpdateMotorSpeed:
 327              	.LFB305:
1307:Core/Src/main.c **** 
1308:Core/Src/main.c **** void CheckBWF() {
1309:Core/Src/main.c **** 
1310:Core/Src/main.c **** 	/*
1311:Core/Src/main.c **** 	 * From the 512 samples, break out 256 for each sensor
1312:Core/Src/main.c **** 	 * Run FIR filter
1313:Core/Src/main.c **** 	 * Run Cross-Correlation to find a signal match.
1314:Core/Src/main.c **** 	 * 1.0 = 100% match for INSIDE
1315:Core/Src/main.c **** 	 * 0.85 = 85% match for INSIDE
1316:Core/Src/main.c **** 	 * -0.75 = 75% match for OUTSIDE
1317:Core/Src/main.c **** 	 * -1.0 = 100% match for OUTSIDE
1318:Core/Src/main.c **** 	 */
1319:Core/Src/main.c **** 
1320:Core/Src/main.c **** 	float BWF1_Mixed_Signal = 0;
1321:Core/Src/main.c **** 	float BWF1_Received_Signal = 0;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 30


1322:Core/Src/main.c **** 	float BWF2_Mixed_Signal = 0;
1323:Core/Src/main.c **** 	float BWF2_Received_Signal = 0;
1324:Core/Src/main.c **** 	uint16_t myID = 0;
1325:Core/Src/main.c **** 	uint8_t BWF1_reply, BWF2_reply = 0;
1326:Core/Src/main.c **** 	float Match_Signal = 0;
1327:Core/Src/main.c **** 	float Result_Signal = 0;
1328:Core/Src/main.c **** 	float BWF1_Verdict_Signal = 0.0;
1329:Core/Src/main.c **** 	float BWF2_Verdict_Signal = 0.0;
1330:Core/Src/main.c **** 	int count = 0;
1331:Core/Src/main.c **** 
1332:Core/Src/main.c **** 	for (int x = 0; x < ADC_SAMPLE_LEN; x++) {
1333:Core/Src/main.c **** 		if (x%2) {
1334:Core/Src/main.c **** 			BWF2[count] = ADC_BUFFER[x] - 1267;		// Normalize the ADC signal
1335:Core/Src/main.c **** 			count++;
1336:Core/Src/main.c **** 		}
1337:Core/Src/main.c **** 		else {
1338:Core/Src/main.c **** 			BWF1[count] = ADC_BUFFER[x] - 1267;		// Normalize the ADC signal
1339:Core/Src/main.c **** 		}
1340:Core/Src/main.c **** 	}
1341:Core/Src/main.c **** 
1342:Core/Src/main.c **** 	FIR_LEFT();		// Run FIR on left BWF	(BWF1)
1343:Core/Src/main.c **** 	FIR_RIGHT();	// Run FIR on right BWF	(BWF2)
1344:Core/Src/main.c **** 
1345:Core/Src/main.c **** 	if (Signature_Record == TRUE) {
1346:Core/Src/main.c **** 		for (uint8_t x = 0; x < SIGNATURE_LEN; x++) {
1347:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
1348:Core/Src/main.c **** 		}
1349:Core/Src/main.c **** 		Signature_Record = FALSE;
1350:Core/Src/main.c **** 	}
1351:Core/Src/main.c **** 
1352:Core/Src/main.c **** 	for (uint16_t idx = 0; idx < 96; idx++) {
1353:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
1354:Core/Src/main.c ****         	break;
1355:Core/Src/main.c ****         }
1356:Core/Src/main.c **** 		myID = 0;
1357:Core/Src/main.c **** 		BWF1_Mixed_Signal = 0;
1358:Core/Src/main.c **** 		BWF1_Received_Signal = 0;
1359:Core/Src/main.c **** 		BWF2_Mixed_Signal = 0;
1360:Core/Src/main.c **** 		BWF2_Received_Signal = 0;
1361:Core/Src/main.c **** 		Match_Signal = 0;
1362:Core/Src/main.c **** 
1363:Core/Src/main.c **** 
1364:Core/Src/main.c **** 		for (int x = idx; x < (idx+SIGNATURE_LEN - 1); x++) {
1365:Core/Src/main.c **** 
1366:Core/Src/main.c **** 			BWF1_Mixed_Signal += (BWF1[x] * validSignature[myID]);
1367:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
1368:Core/Src/main.c **** 
1369:Core/Src/main.c **** 			BWF2_Mixed_Signal += (BWF2[x] * validSignature[myID]);
1370:Core/Src/main.c **** 			BWF2_Received_Signal += BWF2[x] * BWF2[x];
1371:Core/Src/main.c **** 
1372:Core/Src/main.c **** 			Match_Signal += validSignature[myID] * validSignature[myID];
1373:Core/Src/main.c **** 			myID++;
1374:Core/Src/main.c **** 		}
1375:Core/Src/main.c **** 
1376:Core/Src/main.c **** 	Result_Signal = sqrtf(BWF1_Received_Signal * Match_Signal);
1377:Core/Src/main.c **** 	BWF1_Verdict_Signal = (BWF1_Mixed_Signal / Result_Signal);
1378:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 31


1379:Core/Src/main.c **** 	Result_Signal = sqrtf(BWF2_Received_Signal * Match_Signal);
1380:Core/Src/main.c **** 	BWF2_Verdict_Signal = (BWF2_Mixed_Signal / Result_Signal);
1381:Core/Src/main.c **** 
1382:Core/Src/main.c ****     if (BWF1_Verdict_Signal >= Signal_Integrity_IN) {
1383:Core/Src/main.c ****     	BWF1_Status = INSIDE;
1384:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
1385:Core/Src/main.c ****     	BWF1_reply = 1;
1386:Core/Src/main.c ****     	if (Initial_Start == 0) {
1387:Core/Src/main.c ****     		Start_Threshold++;
1388:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
1389:Core/Src/main.c ****     			Initial_Start = 1;
1390:Core/Src/main.c ****     		}
1391:Core/Src/main.c ****     	}
1392:Core/Src/main.c ****     	bwf1_inside++;
1393:Core/Src/main.c **** 
1394:Core/Src/main.c ****     }
1395:Core/Src/main.c **** 
1396:Core/Src/main.c ****     else if (BWF1_Verdict_Signal <= Signal_Integrity_OUT) {
1397:Core/Src/main.c ****     	BWF1_Status = OUTSIDE;
1398:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
1399:Core/Src/main.c ****     	BWF1_reply = 1;
1400:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
1401:Core/Src/main.c ****     	bwf1_outside++;
1402:Core/Src/main.c **** 
1403:Core/Src/main.c ****     }
1404:Core/Src/main.c **** 
1405:Core/Src/main.c ****     if (BWF2_Verdict_Signal >= Signal_Integrity_IN) {
1406:Core/Src/main.c ****     	BWF2_Status = INSIDE;
1407:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
1408:Core/Src/main.c ****     	BWF2_reply = 1;
1409:Core/Src/main.c ****     	if (Initial_Start == 0) {
1410:Core/Src/main.c ****     		Start_Threshold++;
1411:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
1412:Core/Src/main.c ****     			Initial_Start = 1;
1413:Core/Src/main.c ****     		}
1414:Core/Src/main.c ****     	}
1415:Core/Src/main.c ****     	bwf2_inside++;
1416:Core/Src/main.c **** 
1417:Core/Src/main.c ****     }
1418:Core/Src/main.c ****     else if (BWF2_Verdict_Signal <= Signal_Integrity_OUT) {
1419:Core/Src/main.c ****     	BWF2_Status = OUTSIDE;
1420:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
1421:Core/Src/main.c ****     	BWF2_reply = 1;
1422:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
1423:Core/Src/main.c ****     	bwf2_outside++;
1424:Core/Src/main.c **** 
1425:Core/Src/main.c ****     }
1426:Core/Src/main.c **** 	}
1427:Core/Src/main.c **** }
1428:Core/Src/main.c **** 
1429:Core/Src/main.c **** void ADC_Send(uint8_t channel) {
1430:Core/Src/main.c **** 
1431:Core/Src/main.c **** 	// Send ADC data
1432:Core/Src/main.c **** 
1433:Core/Src/main.c **** unsigned char ADSwrite[6];
1434:Core/Src/main.c **** 
1435:Core/Src/main.c **** ADSwrite[0] = 0x01;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 32


1436:Core/Src/main.c **** ADSwrite[1] = channel;
1437:Core/Src/main.c **** ADSwrite[2] = 0x83;
1438:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 3, 100);
1439:Core/Src/main.c **** ADSwrite[0] = 0x00;
1440:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 1, 100);
1441:Core/Src/main.c **** 
1442:Core/Src/main.c **** }
1443:Core/Src/main.c **** 
1444:Core/Src/main.c **** int ADC_Receive() {
1445:Core/Src/main.c **** 
1446:Core/Src/main.c **** 	// Receive ADC data
1447:Core/Src/main.c **** 
1448:Core/Src/main.c **** unsigned char ADSwrite[6];
1449:Core/Src/main.c **** int reading;
1450:Core/Src/main.c **** 
1451:Core/Src/main.c **** 				HAL_I2C_Master_Receive(&hi2c1, ADS1115_ADDRESS <<1, ADSwrite, 2, 100);
1452:Core/Src/main.c **** 
1453:Core/Src/main.c **** 				reading = (ADSwrite[0] << 8 | ADSwrite[1] );
1454:Core/Src/main.c **** 
1455:Core/Src/main.c **** 				if(reading < 0 || reading > 32768) {
1456:Core/Src/main.c **** 					reading = 0;
1457:Core/Src/main.c **** 				}
1458:Core/Src/main.c **** 
1459:Core/Src/main.c **** 		return reading;
1460:Core/Src/main.c **** 
1461:Core/Src/main.c **** }
1462:Core/Src/main.c **** 
1463:Core/Src/main.c **** void UpdateMotorSpeed() {
 328              		.loc 1 1463 25 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI1:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
1464:Core/Src/main.c **** 
1465:Core/Src/main.c **** 	/* With the use of the MPU6050, we calculate the angle we are traveling in by using the gyro
1466:Core/Src/main.c **** 	 * A simple motor speed controller, for each degree off, we simply decrease the speed with 120.
1467:Core/Src/main.c **** 	 * TODO - a proper PID controller
1468:Core/Src/main.c **** 	 */
1469:Core/Src/main.c **** 
1470:Core/Src/main.c **** 	int16_t diff;
 337              		.loc 1 1470 2 view .LVU79
1471:Core/Src/main.c **** 	int8_t dir = 0;
 338              		.loc 1 1471 2 view .LVU80
 339              	.LVL14:
1472:Core/Src/main.c **** 
1473:Core/Src/main.c **** 	// Calculate the difference in bearing, 0-360 accounted for. (Circular heading)
1474:Core/Src/main.c **** 	diff = (((((int)heading - (int)hold_heading) % 360) + 540 ) % 360) - 180;
 340              		.loc 1 1474 2 view .LVU81
 341              		.loc 1 1474 13 is_stmt 0 view .LVU82
 342 0002 324B     		ldr	r3, .L37
 343 0004 D3ED007A 		vldr.32	s15, [r3]
 344 0008 FDEEE77A 		vcvt.s32.f32	s15, s15
 345              		.loc 1 1474 28 view .LVU83
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 33


 346 000c 304B     		ldr	r3, .L37+4
 347 000e 93ED007A 		vldr.32	s14, [r3]
 348 0012 BDEEC77A 		vcvt.s32.f32	s14, s14
 349 0016 17EE102A 		vmov	r2, s14	@ int
 350              		.loc 1 1474 26 view .LVU84
 351 001a 17EE903A 		vmov	r3, s15	@ int
 352 001e 9A1A     		subs	r2, r3, r2
 353              		.loc 1 1474 47 view .LVU85
 354 0020 2C48     		ldr	r0, .L37+8
 355 0022 80FB0213 		smull	r1, r3, r0, r2
 356 0026 9918     		adds	r1, r3, r2
 357 0028 D317     		asrs	r3, r2, #31
 358 002a C3EB2123 		rsb	r3, r3, r1, asr #8
 359 002e 4FF4B471 		mov	r1, #360
 360 0032 01FB1323 		mls	r3, r1, r3, r2
 361              		.loc 1 1474 54 view .LVU86
 362 0036 03F50773 		add	r3, r3, #540
 363              		.loc 1 1474 62 view .LVU87
 364 003a 80FB0320 		smull	r2, r0, r0, r3
 365 003e C218     		adds	r2, r0, r3
 366 0040 D817     		asrs	r0, r3, #31
 367 0042 C0EB2220 		rsb	r0, r0, r2, asr #8
 368 0046 01FB1030 		mls	r0, r1, r0, r3
 369              		.loc 1 1474 69 view .LVU88
 370 004a B438     		subs	r0, r0, #180
 371              	.LVL15:
1475:Core/Src/main.c **** 	diff *= 120.0;
 372              		.loc 1 1475 2 is_stmt 1 view .LVU89
 373              		.loc 1 1475 7 is_stmt 0 view .LVU90
 374 004c 00B2     		sxth	r0, r0
 375              		.loc 1 1475 7 view .LVU91
 376 004e FFF7FEFF 		bl	__aeabi_i2d
 377              	.LVL16:
 378              		.loc 1 1475 7 view .LVU92
 379 0052 0022     		movs	r2, #0
 380 0054 204B     		ldr	r3, .L37+12
 381 0056 FFF7FEFF 		bl	__aeabi_dmul
 382              	.LVL17:
 383 005a FFF7FEFF 		bl	__aeabi_d2iz
 384              	.LVL18:
 385 005e 00B2     		sxth	r0, r0
 386              	.LVL19:
1476:Core/Src/main.c **** 
1477:Core/Src/main.c **** 	if (diff < 0) dir = -1;
 387              		.loc 1 1477 2 is_stmt 1 view .LVU93
 388              		.loc 1 1477 5 is_stmt 0 view .LVU94
 389 0060 0028     		cmp	r0, #0
 390 0062 02DB     		blt	.L31
1478:Core/Src/main.c **** 	else if (diff > 0) dir = 1;
 391              		.loc 1 1478 7 is_stmt 1 view .LVU95
 392              		.loc 1 1478 10 is_stmt 0 view .LVU96
 393 0064 0BDD     		ble	.L32
 394              		.loc 1 1478 25 view .LVU97
 395 0066 0123     		movs	r3, #1
 396 0068 01E0     		b	.L26
 397              	.L31:
1477:Core/Src/main.c **** 	else if (diff > 0) dir = 1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 34


 398              		.loc 1 1477 20 view .LVU98
 399 006a 4FF0FF33 		mov	r3, #-1
 400              	.L26:
 401              	.LVL20:
1479:Core/Src/main.c **** 	else if (diff == 0) dir = 0;
1480:Core/Src/main.c **** 
1481:Core/Src/main.c **** 		// Do not change speed more than 1000
1482:Core/Src/main.c **** 	if (diff > 1000) diff = 1000;
 402              		.loc 1 1482 2 is_stmt 1 view .LVU99
 403              		.loc 1 1482 5 is_stmt 0 view .LVU100
 404 006e B0F57A7F 		cmp	r0, #1000
 405 0072 06DC     		bgt	.L33
1483:Core/Src/main.c **** 	if (diff < -1000) diff = -1000;
 406              		.loc 1 1483 2 is_stmt 1 view .LVU101
 407              		.loc 1 1483 5 is_stmt 0 view .LVU102
 408 0074 10F57A7F 		cmn	r0, #1000
 409 0078 05DA     		bge	.L27
 410              		.loc 1 1483 25 view .LVU103
 411 007a 1848     		ldr	r0, .L37+16
 412              	.LVL21:
 413              		.loc 1 1483 25 view .LVU104
 414 007c 03E0     		b	.L27
 415              	.LVL22:
 416              	.L32:
1471:Core/Src/main.c **** 
 417              		.loc 1 1471 9 view .LVU105
 418 007e 0023     		movs	r3, #0
 419 0080 F5E7     		b	.L26
 420              	.LVL23:
 421              	.L33:
1482:Core/Src/main.c **** 	if (diff < -1000) diff = -1000;
 422              		.loc 1 1482 24 view .LVU106
 423 0082 4FF47A70 		mov	r0, #1000
 424              	.LVL24:
 425              	.L27:
1484:Core/Src/main.c **** 
1485:Core/Src/main.c **** 		// Target is on the Left side
1486:Core/Src/main.c **** 		if (dir > 0) {
 426              		.loc 1 1486 3 is_stmt 1 view .LVU107
 427              		.loc 1 1486 6 is_stmt 0 view .LVU108
 428 0086 002B     		cmp	r3, #0
 429 0088 0ADD     		ble	.L28
 430              	.LBB15:
1487:Core/Src/main.c **** 			int CorrectedSpeed = MotorMaxSpeed - abs(diff);
 431              		.loc 1 1487 4 is_stmt 1 view .LVU109
 432              		.loc 1 1487 41 is_stmt 0 view .LVU110
 433 008a 0028     		cmp	r0, #0
 434 008c B8BF     		it	lt
 435 008e 4042     		rsblt	r0, r0, #0
 436              	.LVL25:
 437              		.loc 1 1487 41 view .LVU111
 438 0090 80B2     		uxth	r0, r0
 439              		.loc 1 1487 8 view .LVU112
 440 0092 40F61F52 		movw	r2, #3359
 441 0096 101A     		subs	r0, r2, r0
 442              	.LVL26:
1488:Core/Src/main.c **** 			TIM4->CCR2 = CorrectedSpeed;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 35


 443              		.loc 1 1488 4 is_stmt 1 view .LVU113
 444              		.loc 1 1488 15 is_stmt 0 view .LVU114
 445 0098 114B     		ldr	r3, .L37+20
 446              	.LVL27:
 447              		.loc 1 1488 15 view .LVU115
 448 009a 9863     		str	r0, [r3, #56]
1489:Core/Src/main.c **** 			TIM4->CCR3 = MotorMaxSpeed;
 449              		.loc 1 1489 4 is_stmt 1 view .LVU116
 450              		.loc 1 1489 15 is_stmt 0 view .LVU117
 451 009c DA63     		str	r2, [r3, #60]
 452              	.LVL28:
 453              	.L25:
 454              		.loc 1 1489 15 view .LVU118
 455              	.LBE15:
1490:Core/Src/main.c **** 		}
1491:Core/Src/main.c **** 		// Target is on the Right side
1492:Core/Src/main.c **** 		else if (dir < 0){
1493:Core/Src/main.c **** 			int CorrectedSpeed = MotorMaxSpeed - abs(diff);
1494:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
1495:Core/Src/main.c **** 			TIM4->CCR3 = CorrectedSpeed;
1496:Core/Src/main.c **** 
1497:Core/Src/main.c **** 		}
1498:Core/Src/main.c **** 		// Spot on! Full speed ahead Captain!
1499:Core/Src/main.c **** 		else if (dir == 0) {
1500:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
1501:Core/Src/main.c **** 			TIM4->CCR3 = MotorMaxSpeed;
1502:Core/Src/main.c **** 		}
1503:Core/Src/main.c **** 
1504:Core/Src/main.c **** }
 456              		.loc 1 1504 1 view .LVU119
 457 009e 08BD     		pop	{r3, pc}
 458              	.LVL29:
 459              	.L28:
1492:Core/Src/main.c **** 			int CorrectedSpeed = MotorMaxSpeed - abs(diff);
 460              		.loc 1 1492 8 is_stmt 1 view .LVU120
1492:Core/Src/main.c **** 			int CorrectedSpeed = MotorMaxSpeed - abs(diff);
 461              		.loc 1 1492 11 is_stmt 0 view .LVU121
 462 00a0 002B     		cmp	r3, #0
 463 00a2 07DB     		blt	.L36
1499:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 464              		.loc 1 1499 8 is_stmt 1 view .LVU122
1499:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 465              		.loc 1 1499 11 is_stmt 0 view .LVU123
 466 00a4 002B     		cmp	r3, #0
 467 00a6 FAD1     		bne	.L25
1500:Core/Src/main.c **** 			TIM4->CCR3 = MotorMaxSpeed;
 468              		.loc 1 1500 4 is_stmt 1 view .LVU124
1500:Core/Src/main.c **** 			TIM4->CCR3 = MotorMaxSpeed;
 469              		.loc 1 1500 15 is_stmt 0 view .LVU125
 470 00a8 0D4B     		ldr	r3, .L37+20
 471              	.LVL30:
1500:Core/Src/main.c **** 			TIM4->CCR3 = MotorMaxSpeed;
 472              		.loc 1 1500 15 view .LVU126
 473 00aa 40F61F52 		movw	r2, #3359
 474 00ae 9A63     		str	r2, [r3, #56]
1501:Core/Src/main.c **** 		}
 475              		.loc 1 1501 4 is_stmt 1 view .LVU127
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 36


1501:Core/Src/main.c **** 		}
 476              		.loc 1 1501 15 is_stmt 0 view .LVU128
 477 00b0 DA63     		str	r2, [r3, #60]
 478              		.loc 1 1504 1 view .LVU129
 479 00b2 F4E7     		b	.L25
 480              	.LVL31:
 481              	.L36:
 482              	.LBB16:
1493:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 483              		.loc 1 1493 4 is_stmt 1 view .LVU130
1493:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 484              		.loc 1 1493 41 is_stmt 0 view .LVU131
 485 00b4 0028     		cmp	r0, #0
 486 00b6 B8BF     		it	lt
 487 00b8 4042     		rsblt	r0, r0, #0
 488              	.LVL32:
1493:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 489              		.loc 1 1493 41 view .LVU132
 490 00ba 80B2     		uxth	r0, r0
1493:Core/Src/main.c **** 			TIM4->CCR2 = MotorMaxSpeed;
 491              		.loc 1 1493 8 view .LVU133
 492 00bc 40F61F52 		movw	r2, #3359
 493 00c0 101A     		subs	r0, r2, r0
 494              	.LVL33:
1494:Core/Src/main.c **** 			TIM4->CCR3 = CorrectedSpeed;
 495              		.loc 1 1494 4 is_stmt 1 view .LVU134
1494:Core/Src/main.c **** 			TIM4->CCR3 = CorrectedSpeed;
 496              		.loc 1 1494 15 is_stmt 0 view .LVU135
 497 00c2 074B     		ldr	r3, .L37+20
 498              	.LVL34:
1494:Core/Src/main.c **** 			TIM4->CCR3 = CorrectedSpeed;
 499              		.loc 1 1494 15 view .LVU136
 500 00c4 9A63     		str	r2, [r3, #56]
1495:Core/Src/main.c **** 
 501              		.loc 1 1495 4 is_stmt 1 view .LVU137
1495:Core/Src/main.c **** 
 502              		.loc 1 1495 15 is_stmt 0 view .LVU138
 503 00c6 D863     		str	r0, [r3, #60]
 504              	.LBE16:
 505 00c8 E9E7     		b	.L25
 506              	.L38:
 507 00ca 00BF     		.align	2
 508              	.L37:
 509 00cc 00000000 		.word	.LANCHOR7
 510 00d0 00000000 		.word	.LANCHOR9
 511 00d4 B7600BB6 		.word	-1240768329
 512 00d8 00005E40 		.word	1079902208
 513 00dc 18FCFFFF 		.word	-1000
 514 00e0 00080040 		.word	1073743872
 515              		.cfi_endproc
 516              	.LFE305:
 518              		.section	.text.MotorBrake,"ax",%progbits
 519              		.align	1
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 37


 525              	MotorBrake:
 526              	.LFB312:
1505:Core/Src/main.c **** void Undock_MotorBackward(uint16_t minSpeed, uint16_t maxSpeed) {
1506:Core/Src/main.c **** 
1507:Core/Src/main.c **** 	State = BACKWARD;
1508:Core/Src/main.c **** 
1509:Core/Src/main.c **** for (uint16_t currentSpeed = minSpeed; currentSpeed < maxSpeed; currentSpeed++) {
1510:Core/Src/main.c **** 
1511:Core/Src/main.c **** 	  currentSpeed += 1;
1512:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
1513:Core/Src/main.c **** 		  break;
1514:Core/Src/main.c **** 	  }
1515:Core/Src/main.c **** 
1516:Core/Src/main.c **** 	  TIM4->CCR1 = currentSpeed;
1517:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
1518:Core/Src/main.c **** 
1519:Core/Src/main.c **** 	  TIM4->CCR3 = 0;
1520:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
1521:Core/Src/main.c **** 
1522:Core/Src/main.c **** 	  HAL_Delay(1);
1523:Core/Src/main.c **** 
1524:Core/Src/main.c ****  }
1525:Core/Src/main.c **** HAL_Delay(2000);
1526:Core/Src/main.c **** MotorStop();
1527:Core/Src/main.c **** }
1528:Core/Src/main.c **** 
1529:Core/Src/main.c **** void MotorForward(uint16_t minSpeed, uint16_t maxSpeed) {
1530:Core/Src/main.c **** 
1531:Core/Src/main.c **** 	State = FORWARD;
1532:Core/Src/main.c **** 
1533:Core/Src/main.c **** 	MPU6050_Read_Gyro();		// Get fresh data for Pitch/Roll
1534:Core/Src/main.c **** 	ProcessIMUData();			// Compute Pitch/Roll
1535:Core/Src/main.c **** 
1536:Core/Src/main.c **** for (uint16_t currentSpeed = minSpeed; currentSpeed < maxSpeed; currentSpeed++) {
1537:Core/Src/main.c **** 
1538:Core/Src/main.c **** 	  currentSpeed += 3;
1539:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
1540:Core/Src/main.c **** 		  break;
1541:Core/Src/main.c **** 	  }
1542:Core/Src/main.c **** 
1543:Core/Src/main.c **** 	  uint16_t leftTilt = 0;
1544:Core/Src/main.c **** 	  uint16_t rightTilt = 0;
1545:Core/Src/main.c **** 
1546:Core/Src/main.c **** 	  if (roll > 0) {
1547:Core/Src/main.c **** 		  leftTilt = fabs(roll * 50);
1548:Core/Src/main.c **** 	  }
1549:Core/Src/main.c **** 	  if (roll < 0) {
1550:Core/Src/main.c **** 		  rightTilt = fabs(roll * 50);
1551:Core/Src/main.c **** 	  }
1552:Core/Src/main.c **** 
1553:Core/Src/main.c **** 	  TIM4->CCR1 = 0;
1554:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed - round(leftTilt);
1555:Core/Src/main.c **** 
1556:Core/Src/main.c **** 	  TIM4->CCR3 = currentSpeed - round(rightTilt);
1557:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
1558:Core/Src/main.c **** 
1559:Core/Src/main.c **** 	  HAL_Delay(1);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 38


1560:Core/Src/main.c **** 
1561:Core/Src/main.c **** 	  if (CheckSecurity() == SECURITY_FAIL) {
1562:Core/Src/main.c **** 		  MotorStop();
1563:Core/Src/main.c **** 		  break;
1564:Core/Src/main.c **** 	  }
1565:Core/Src/main.c **** 
1566:Core/Src/main.c ****  }
1567:Core/Src/main.c **** }
1568:Core/Src/main.c **** void MotorBackward(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
1569:Core/Src/main.c **** 
1570:Core/Src/main.c **** 	State = BACKWARD;
1571:Core/Src/main.c **** 	uint16_t timeCount = 0;
1572:Core/Src/main.c **** 
1573:Core/Src/main.c **** for (uint16_t currentSpeed = minSpeed; currentSpeed < maxSpeed; currentSpeed++) {
1574:Core/Src/main.c **** 
1575:Core/Src/main.c **** 	  currentSpeed += 3;
1576:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
1577:Core/Src/main.c **** 		  break;
1578:Core/Src/main.c **** 	  }
1579:Core/Src/main.c **** 
1580:Core/Src/main.c **** 	  TIM4->CCR1 = currentSpeed;
1581:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
1582:Core/Src/main.c **** 
1583:Core/Src/main.c **** 	  TIM4->CCR3 = 0;
1584:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
1585:Core/Src/main.c **** 
1586:Core/Src/main.c **** 	  HAL_Delay(1);
1587:Core/Src/main.c **** 	  timeCount++;
1588:Core/Src/main.c **** 
1589:Core/Src/main.c **** 	  CheckSecurity();
1590:Core/Src/main.c **** 
1591:Core/Src/main.c **** 	  if (timeCount >= time_ms) {
1592:Core/Src/main.c **** 		  break;
1593:Core/Src/main.c **** 	  }
1594:Core/Src/main.c ****  }
1595:Core/Src/main.c **** MotorStop();
1596:Core/Src/main.c **** }
1597:Core/Src/main.c **** void MotorRight(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
1598:Core/Src/main.c **** 
1599:Core/Src/main.c **** 	State = RIGHT;
1600:Core/Src/main.c **** 	uint16_t timeCount = 0;
1601:Core/Src/main.c **** 
1602:Core/Src/main.c **** for (uint16_t currentSpeed = minSpeed; currentSpeed < maxSpeed; currentSpeed++) {
1603:Core/Src/main.c **** 
1604:Core/Src/main.c **** 	  currentSpeed += 3;
1605:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
1606:Core/Src/main.c **** 		  break;
1607:Core/Src/main.c **** 	  }
1608:Core/Src/main.c **** 	  TIM4->CCR1 = 0;
1609:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed;
1610:Core/Src/main.c **** 
1611:Core/Src/main.c **** 	  TIM4->CCR3 = 0;
1612:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
1613:Core/Src/main.c **** 
1614:Core/Src/main.c **** 	  HAL_Delay(1);
1615:Core/Src/main.c **** 	  timeCount++;
1616:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 39


1617:Core/Src/main.c **** 	  CheckSecurity();
1618:Core/Src/main.c **** 
1619:Core/Src/main.c **** 	  if (timeCount >= time_ms) {
1620:Core/Src/main.c **** 		  break;
1621:Core/Src/main.c **** 	  }
1622:Core/Src/main.c ****  }
1623:Core/Src/main.c **** MotorStop();
1624:Core/Src/main.c **** }
1625:Core/Src/main.c **** void MotorLeft(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
1626:Core/Src/main.c **** 
1627:Core/Src/main.c **** 	State = LEFT;
1628:Core/Src/main.c **** 	uint16_t timeCount = 0;
1629:Core/Src/main.c **** 
1630:Core/Src/main.c **** for (uint16_t currentSpeed = minSpeed; currentSpeed < maxSpeed; currentSpeed++) {
1631:Core/Src/main.c **** 
1632:Core/Src/main.c **** 	  currentSpeed += 3;
1633:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
1634:Core/Src/main.c **** 		  break;
1635:Core/Src/main.c **** 	  }
1636:Core/Src/main.c **** 	  TIM4->CCR1 = currentSpeed;
1637:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
1638:Core/Src/main.c **** 
1639:Core/Src/main.c **** 	  TIM4->CCR3 = currentSpeed;
1640:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
1641:Core/Src/main.c **** 
1642:Core/Src/main.c **** 	  HAL_Delay(1);
1643:Core/Src/main.c **** 	  timeCount++;
1644:Core/Src/main.c **** 
1645:Core/Src/main.c **** 	  CheckSecurity();
1646:Core/Src/main.c **** 
1647:Core/Src/main.c **** 	  if (timeCount >= time_ms) {
1648:Core/Src/main.c **** 		  break;
1649:Core/Src/main.c **** 	  }
1650:Core/Src/main.c ****  }
1651:Core/Src/main.c **** MotorStop();
1652:Core/Src/main.c **** }
1653:Core/Src/main.c **** void MotorStop(void) {
1654:Core/Src/main.c **** 
1655:Core/Src/main.c **** 	LastState = State;
1656:Core/Src/main.c **** 	State = STOP;
1657:Core/Src/main.c **** 	int speed = 0;
1658:Core/Src/main.c **** 
1659:Core/Src/main.c **** 	speed = (TIM4->CCR1 + TIM4->CCR2 + TIM4->CCR3 + TIM4->CCR4) / 2;
1660:Core/Src/main.c **** 	speed *= 0.90;
1661:Core/Src/main.c **** 
1662:Core/Src/main.c **** 	if (speed == 0) return;
1663:Core/Src/main.c **** 
1664:Core/Src/main.c **** 	for (int x = speed; x > 1000; x--) {
1665:Core/Src/main.c **** 
1666:Core/Src/main.c **** 		x -= 4;
1667:Core/Src/main.c **** 
1668:Core/Src/main.c **** 		if (x < 1000) break;
1669:Core/Src/main.c **** 
1670:Core/Src/main.c **** 		if (TIM4->CCR1 != 0) TIM4->CCR1 = x;
1671:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
1672:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
1673:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 40


1674:Core/Src/main.c **** 
1675:Core/Src/main.c **** 		HAL_Delay(1);
1676:Core/Src/main.c **** 	}
1677:Core/Src/main.c **** 
1678:Core/Src/main.c **** 	TIM4->CCR1 = 0;
1679:Core/Src/main.c **** 	TIM4->CCR2 = 0;
1680:Core/Src/main.c **** 	TIM4->CCR3 = 0;
1681:Core/Src/main.c **** 	TIM4->CCR4 = 0;
1682:Core/Src/main.c **** 
1683:Core/Src/main.c **** }
1684:Core/Src/main.c **** 
1685:Core/Src/main.c **** void MotorBrake(void) {
 527              		.loc 1 1685 23 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
1686:Core/Src/main.c **** 
1687:Core/Src/main.c **** 	LastState = State;
 532              		.loc 1 1687 2 view .LVU140
 533              		.loc 1 1687 12 is_stmt 0 view .LVU141
 534 0000 064B     		ldr	r3, .L40
 535 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 536 0004 064A     		ldr	r2, .L40+4
 537 0006 1170     		strb	r1, [r2]
1688:Core/Src/main.c **** 	State = BRAKE;
 538              		.loc 1 1688 2 is_stmt 1 view .LVU142
 539              		.loc 1 1688 8 is_stmt 0 view .LVU143
 540 0008 0722     		movs	r2, #7
 541 000a 1A70     		strb	r2, [r3]
1689:Core/Src/main.c **** 
1690:Core/Src/main.c **** 	// Brake - free wheeling
1691:Core/Src/main.c **** 	TIM4->CCR1 = 0;
 542              		.loc 1 1691 2 is_stmt 1 view .LVU144
 543              		.loc 1 1691 13 is_stmt 0 view .LVU145
 544 000c 054B     		ldr	r3, .L40+8
 545 000e 0022     		movs	r2, #0
 546 0010 5A63     		str	r2, [r3, #52]
1692:Core/Src/main.c **** 	TIM4->CCR2 = 0;
 547              		.loc 1 1692 2 is_stmt 1 view .LVU146
 548              		.loc 1 1692 13 is_stmt 0 view .LVU147
 549 0012 9A63     		str	r2, [r3, #56]
1693:Core/Src/main.c **** 	TIM4->CCR3 = 0;
 550              		.loc 1 1693 2 is_stmt 1 view .LVU148
 551              		.loc 1 1693 13 is_stmt 0 view .LVU149
 552 0014 DA63     		str	r2, [r3, #60]
1694:Core/Src/main.c **** 	TIM4->CCR4 = 0;
 553              		.loc 1 1694 2 is_stmt 1 view .LVU150
 554              		.loc 1 1694 13 is_stmt 0 view .LVU151
 555 0016 1A64     		str	r2, [r3, #64]
1695:Core/Src/main.c **** 
1696:Core/Src/main.c **** }
 556              		.loc 1 1696 1 view .LVU152
 557 0018 7047     		bx	lr
 558              	.L41:
 559 001a 00BF     		.align	2
 560              	.L40:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 41


 561 001c 00000000 		.word	.LANCHOR11
 562 0020 00000000 		.word	.LANCHOR10
 563 0024 00080040 		.word	1073743872
 564              		.cfi_endproc
 565              	.LFE312:
 567              		.section	.text.MX_GPIO_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	MX_GPIO_Init:
 575              	.LFB330:
1697:Core/Src/main.c **** void MotorHardBrake(void) {
1698:Core/Src/main.c **** 
1699:Core/Src/main.c **** 	LastState = State;
1700:Core/Src/main.c **** 
1701:Core/Src/main.c **** 	State = HARDBRAKE;
1702:Core/Src/main.c **** 
1703:Core/Src/main.c **** 	// Wheels will do a hard brake when both pins go HIGH.
1704:Core/Src/main.c **** 	TIM4->CCR1 = 3360 -1;
1705:Core/Src/main.c **** 	TIM4->CCR2 = 3360 -1;
1706:Core/Src/main.c **** 	TIM4->CCR3 = 3360 -1;
1707:Core/Src/main.c **** 	TIM4->CCR4 = 3360 -1;
1708:Core/Src/main.c **** 
1709:Core/Src/main.c **** 	HAL_Delay(250);
1710:Core/Src/main.c **** 
1711:Core/Src/main.c **** 	MotorBrake();	//Release motors
1712:Core/Src/main.c **** 
1713:Core/Src/main.c **** }
1714:Core/Src/main.c **** void CheckState(void) {
1715:Core/Src/main.c **** 
1716:Core/Src/main.c **** 	/* This is our main function, this is where all the states are
1717:Core/Src/main.c **** 	 * What state is the mower in? and what to do next.
1718:Core/Src/main.c **** 	 */
1719:Core/Src/main.c **** 	if (Initial_Start == 0) return;
1720:Core/Src/main.c **** 
1721:Core/Src/main.c **** 	if (MasterSwitch == 0) {
1722:Core/Src/main.c **** 		cutterOFF();
1723:Core/Src/main.c **** 		MotorStop();
1724:Core/Src/main.c **** 		return;
1725:Core/Src/main.c **** 	}
1726:Core/Src/main.c **** 
1727:Core/Src/main.c **** 	if (Security == NOSIGNAL) {
1728:Core/Src/main.c **** 		MotorStop();
1729:Core/Src/main.c **** 		cutterOFF();
1730:Core/Src/main.c **** 		return;
1731:Core/Src/main.c **** 	}
1732:Core/Src/main.c **** 	if (HAL_GetTick() - OUTSIDE_timer >= (Outside_Threshold * 1000) && Docked == 0) {
1733:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
1734:Core/Src/main.c **** 		MotorStop();
1735:Core/Src/main.c **** 		cutterOFF();
1736:Core/Src/main.c **** 		return;
1737:Core/Src/main.c **** 	}
1738:Core/Src/main.c **** 	if (Docked == 1) {
1739:Core/Src/main.c **** 		unDock();
1740:Core/Src/main.c **** 		return;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 42


1741:Core/Src/main.c **** 		}
1742:Core/Src/main.c **** 
1743:Core/Src/main.c **** 	if (State == FAIL) {
1744:Core/Src/main.c **** 		MotorStop();
1745:Core/Src/main.c **** 		cutterOFF();
1746:Core/Src/main.c **** 		while (CheckSecurity() != SECURITY_OK) {
1747:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
1748:Core/Src/main.c **** 		}
1749:Core/Src/main.c **** 		State = STOP;
1750:Core/Src/main.c **** 		return;
1751:Core/Src/main.c **** 	}
1752:Core/Src/main.c **** 
1753:Core/Src/main.c **** 	if (abs(pitch) >= Overturn_Limit || abs(roll) >= Overturn_Limit) {
1754:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
1755:Core/Src/main.c **** 		MotorHardBrake();
1756:Core/Src/main.c **** 		cutterHardBreak();
1757:Core/Src/main.c **** 		return;
1758:Core/Src/main.c **** 	}
1759:Core/Src/main.c **** 
1760:Core/Src/main.c **** 	else if (AVOID_LEFT == 1 || AVOID_RIGHT == 1 || AVOID_FRONT == 1) {
1761:Core/Src/main.c **** 		MotorStop();
1762:Core/Src/main.c **** 		Serial_Console("Obstacle\r\n");
1763:Core/Src/main.c **** 		HAL_Delay(500);
1764:Core/Src/main.c **** 		if (AVOID_LEFT == 1) {
1765:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
1766:Core/Src/main.c **** 		}
1767:Core/Src/main.c **** 		if (AVOID_RIGHT == 1) {
1768:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 1000);
1769:Core/Src/main.c **** 		}
1770:Core/Src/main.c **** 		if (AVOID_FRONT == 1) {
1771:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
1772:Core/Src/main.c **** 		}
1773:Core/Src/main.c **** 		AVOID_LEFT = 0;
1774:Core/Src/main.c **** 		AVOID_RIGHT = 0;
1775:Core/Src/main.c **** 		AVOID_FRONT = 0;
1776:Core/Src/main.c **** 	}
1777:Core/Src/main.c **** 
1778:Core/Src/main.c **** 	else if (State == FORWARD && CheckSecurity() == SECURITY_FAIL) {
1779:Core/Src/main.c **** 		MotorStop();
1780:Core/Src/main.c **** 		TimeToGoHome();			// Check if within working hours, if not, go home
1781:Core/Src/main.c **** 		if (perimeterTracking == 1) {
1782:Core/Src/main.c **** 			cutterOFF();
1783:Core/Src/main.c **** 			perimeterTrackingActive = 1;
1784:Core/Src/main.c **** 			HAL_Delay(500);
1785:Core/Src/main.c **** 			return;
1786:Core/Src/main.c **** 		}
1787:Core/Src/main.c **** 		HAL_Delay(500);
1788:Core/Src/main.c **** 
1789:Core/Src/main.c **** 		CheckSecurity();				// Double check status of the sensors when we are standing still
1790:Core/Src/main.c **** 
1791:Core/Src/main.c **** 		if (BWF1_Status == OUTSIDE && BWF2_Status == INSIDE) {
1792:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
1793:Core/Src/main.c **** 			HAL_Delay(500);
1794:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1795:Core/Src/main.c **** 		}
1796:Core/Src/main.c **** 		else if (BWF1_Status == INSIDE && BWF2_Status == OUTSIDE) {
1797:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 43


1798:Core/Src/main.c **** 			HAL_Delay(500);
1799:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1800:Core/Src/main.c **** 		}
1801:Core/Src/main.c **** 		else if (BWF1_Status == OUTSIDE && BWF2_Status == OUTSIDE) {
1802:Core/Src/main.c **** 
1803:Core/Src/main.c **** 			Serial_Console("Going Backward\r\n");
1804:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 3000);
1805:Core/Src/main.c **** 			HAL_Delay(500);
1806:Core/Src/main.c **** 			if (rnd(1000) < 500 ) {
1807:Core/Src/main.c **** 				MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1808:Core/Src/main.c **** 			}
1809:Core/Src/main.c **** 			else {
1810:Core/Src/main.c **** 				MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1811:Core/Src/main.c **** 				}
1812:Core/Src/main.c **** 		}
1813:Core/Src/main.c **** 
1814:Core/Src/main.c **** 		HAL_Delay(500);
1815:Core/Src/main.c **** 	}
1816:Core/Src/main.c **** 	else if (State == FORWARD) {
1817:Core/Src/main.c **** 
1818:Core/Src/main.c **** 		if (TIM4->CCR2 == 0 && TIM4->CCR3  == 0) {
1819:Core/Src/main.c **** 			State = STOP;
1820:Core/Src/main.c **** 		}
1821:Core/Src/main.c **** 	}
1822:Core/Src/main.c **** 	else if (State == STOP && CheckSecurity() == SECURITY_OK) {
1823:Core/Src/main.c **** 		HAL_Delay(500);
1824:Core/Src/main.c **** 		hold_heading = heading;
1825:Core/Src/main.c **** 		if (cutterStatus == 0 && perimeterTracking == 0) {
1826:Core/Src/main.c **** 			cutterON();
1827:Core/Src/main.c **** 		}
1828:Core/Src/main.c **** 		Serial_Console("Going Forward\r\n");
1829:Core/Src/main.c **** 		MotorForward(MotorMinSpeed, MotorMaxSpeed);
1830:Core/Src/main.c **** 
1831:Core/Src/main.c **** 	}
1832:Core/Src/main.c **** 	else if (State == STOP && CheckSecurity() == SECURITY_FAIL) {
1833:Core/Src/main.c **** 		HAL_Delay(500);
1834:Core/Src/main.c **** 		Serial_Console("STOP + Security Fail\r\n");
1835:Core/Src/main.c **** 
1836:Core/Src/main.c **** 		CheckSecurity();
1837:Core/Src/main.c **** 
1838:Core/Src/main.c **** 		if (BWF1_Status == INSIDE && (BWF2_Status == OUTSIDE || BWF2_Status == NOSIGNAL)) {
1839:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1840:Core/Src/main.c **** 		}
1841:Core/Src/main.c **** 		else if (BWF2_Status == INSIDE && (BWF1_Status == OUTSIDE || BWF1_Status == NOSIGNAL)) {
1842:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1843:Core/Src/main.c **** 		}
1844:Core/Src/main.c **** 		else if (BWF1_Status == OUTSIDE && BWF2_Status == OUTSIDE) {
1845:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed,MotorMaxSpeed, 3000);
1846:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
1847:Core/Src/main.c **** 		}
1848:Core/Src/main.c **** 	}
1849:Core/Src/main.c **** 
1850:Core/Src/main.c **** }
1851:Core/Src/main.c **** 
1852:Core/Src/main.c **** /* USER CODE END 0 */
1853:Core/Src/main.c **** 
1854:Core/Src/main.c **** /**
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 44


1855:Core/Src/main.c ****   * @brief  The application entry point.
1856:Core/Src/main.c ****   * @retval int
1857:Core/Src/main.c ****   */
1858:Core/Src/main.c **** int main(void)
1859:Core/Src/main.c **** {
1860:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
1861:Core/Src/main.c **** 
1862:Core/Src/main.c ****   /* USER CODE END 1 */
1863:Core/Src/main.c **** 
1864:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
1865:Core/Src/main.c **** 
1866:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
1867:Core/Src/main.c ****   HAL_Init();
1868:Core/Src/main.c **** 
1869:Core/Src/main.c ****   /* USER CODE BEGIN Init */
1870:Core/Src/main.c **** 
1871:Core/Src/main.c ****   /* USER CODE END Init */
1872:Core/Src/main.c **** 
1873:Core/Src/main.c ****   /* Configure the system clock */
1874:Core/Src/main.c ****   SystemClock_Config();
1875:Core/Src/main.c **** 
1876:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
1877:Core/Src/main.c **** 
1878:Core/Src/main.c ****   /* USER CODE END SysInit */
1879:Core/Src/main.c **** 
1880:Core/Src/main.c ****   /* Initialize all configured peripherals */
1881:Core/Src/main.c ****   MX_GPIO_Init();
1882:Core/Src/main.c ****   MX_DMA_Init();
1883:Core/Src/main.c ****   MX_ADC1_Init();
1884:Core/Src/main.c ****   MX_I2C1_Init();
1885:Core/Src/main.c ****   MX_I2C2_Init();
1886:Core/Src/main.c ****   MX_IWDG_Init();
1887:Core/Src/main.c ****   MX_RNG_Init();
1888:Core/Src/main.c ****   MX_USART1_UART_Init();
1889:Core/Src/main.c ****   MX_USART2_UART_Init();
1890:Core/Src/main.c ****   MX_TIM3_Init();
1891:Core/Src/main.c ****   MX_TIM4_Init();
1892:Core/Src/main.c ****   MX_RTC_Init();
1893:Core/Src/main.c ****   MX_TIM2_Init();
1894:Core/Src/main.c ****   MX_TIM5_Init();
1895:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
1896:Core/Src/main.c **** 
1897:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);					// Start TIM4 on wheel motors
1898:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim3);					// Start TIM3 on cutter motor
1899:Core/Src/main.c **** 
1900:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_1);		//M1 Motor PWM
1901:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_2);		//M1 Motor PWM
1902:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_3);		//M2 Motor PWM
1903:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_4);		//M2 Motor PWM
1904:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);		//C1 Motor PWM
1905:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);		//C1 Motor PWM
1906:Core/Src/main.c **** 
1907:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);					//Start Timer5 for MicroSeconds delay
1908:Core/Src/main.c **** 
1909:Core/Src/main.c ****   TIM4->CCR1 = 0;								//M1 Motor - Make sure PWM is 0
1910:Core/Src/main.c ****   TIM4->CCR2 = 0;								//M1 Motor - Make sure PWM is 0
1911:Core/Src/main.c ****   TIM4->CCR3 = 0;								//M2 Motor - Make sure PWM is 0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 45


1912:Core/Src/main.c ****   TIM4->CCR4 = 0;								//M2 Motor - Make sure PWM is 0
1913:Core/Src/main.c ****   TIM3->CCR1 = 0;								//C1 Motor - Make sure PWM is 0
1914:Core/Src/main.c ****   TIM3->CCR2 = 0;								//C1 Motor - Make sure PWM is 0
1915:Core/Src/main.c **** 
1916:Core/Src/main.c ****   /* USER CODE END 2 */
1917:Core/Src/main.c **** 
1918:Core/Src/main.c ****   /* Infinite loop */
1919:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
1920:Core/Src/main.c **** 
1921:Core/Src/main.c ****   WatchdogInit();								// STM32 Watchdog - NEVER DISABLE THIS (for safety!)
1922:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);				// 1 second interrupt, will update the watchdog and send info t
1923:Core/Src/main.c **** 
1924:Core/Src/main.c ****   Serial_RPi("RazorBoard booting...please wait!\r\n");
1925:Core/Src/main.c ****   Serial_Console("RazorBoard booting...please wait!\r\n");
1926:Core/Src/main.c **** 
1927:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)ADC_BUFFER, ADC_SAMPLE_LEN);		// Start the DMA for continues
1928:Core/Src/main.c **** 
1929:Core/Src/main.c ****   InitFIR();									// Initiate the FIR functions in hardware
1930:Core/Src/main.c **** 
1931:Core/Src/main.c ****   HAL_RNG_Init(&hrng);							// Initiate the True Random Number generator
1932:Core/Src/main.c **** 
1933:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_IDLE);	// Enable interrupt for Serial Console
1934:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart2, UART_IT_IDLE);	// Enable interrupt for the Raspberry Pi
1935:Core/Src/main.c **** 
1936:Core/Src/main.c ****   ADC_timer = HAL_GetTick();					// Initial load of the ADC timer
1937:Core/Src/main.c ****   IMU_timer = HAL_GetTick();					// Initial load of the IMU timer
1938:Core/Src/main.c ****   MotorSpeedUpdateFreq_timer =  HAL_GetTick();	// Initial load of the MotorSpeedUpdateFreq
1939:Core/Src/main.c **** 
1940:Core/Src/main.c ****   Init6050();									// Start the MPU-6050
1941:Core/Src/main.c **** 
1942:Core/Src/main.c ****   Boundary_Timer = HAL_GetTick();				// Initiate timer for the Boundary Wire
1943:Core/Src/main.c **** 
1944:Core/Src/main.c ****   delay_us(100);
1945:Core/Src/main.c **** 
1946:Core/Src/main.c ****   Serial_RPi("Booting done!\r\n");
1947:Core/Src/main.c ****   Serial_Console("Booting done!\r\n");
1948:Core/Src/main.c **** 
1949:Core/Src/main.c ****   while (1)
1950:Core/Src/main.c ****     {
1951:Core/Src/main.c **** 
1952:Core/Src/main.c ****     	// Collect IMU data every 20 ms, non-blocking.
1953:Core/Src/main.c ****   	if (HAL_GetTick() - IMU_timer >= 20) {
1954:Core/Src/main.c ****    	  MPU6050_Read_Accel();
1955:Core/Src/main.c ****   	  MPU6050_Read_Gyro();
1956:Core/Src/main.c ****   	  ProcessIMUData();
1957:Core/Src/main.c ****   	  IMU_timer = HAL_GetTick();
1958:Core/Src/main.c ****   	  }
1959:Core/Src/main.c **** 
1960:Core/Src/main.c **** 
1961:Core/Src/main.c ****   	if (perimeterTrackingActive == 0) {
1962:Core/Src/main.c **** 
1963:Core/Src/main.c ****   		CheckSecurity();
1964:Core/Src/main.c **** 
1965:Core/Src/main.c ****   		CheckState();
1966:Core/Src/main.c **** 
1967:Core/Src/main.c ****   		if (State == FORWARD && Force_Active == 1) {
1968:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 46


1969:Core/Src/main.c **** 
1970:Core/Src/main.c ****   			 UpdateMotorSpeed();
1971:Core/Src/main.c ****   			 MotorSpeedUpdateFreq_timer =  HAL_GetTick();
1972:Core/Src/main.c **** 
1973:Core/Src/main.c ****   			}
1974:Core/Src/main.c ****   		}
1975:Core/Src/main.c ****   		CollectADC();
1976:Core/Src/main.c ****   		CheckVoltage();
1977:Core/Src/main.c ****   	}
1978:Core/Src/main.c ****   	else {
1979:Core/Src/main.c ****   		perimeterTracker();
1980:Core/Src/main.c ****   	}
1981:Core/Src/main.c **** 
1982:Core/Src/main.c ****     if (SendInfoStatus == 1) SendInfo();
1983:Core/Src/main.c **** 
1984:Core/Src/main.c ****   	ChargerConnected();
1985:Core/Src/main.c **** 
1986:Core/Src/main.c ****   	HAL_UART_Receive_DMA(&huart1, ConsoleBuffer, CONSOLE_BFR_SIZE);
1987:Core/Src/main.c ****     HAL_UART_Receive_DMA(&huart2, PIBuffer, PI_BFR_SIZE);
1988:Core/Src/main.c **** 
1989:Core/Src/main.c ****     if (UART1_ready == 1) {
1990:Core/Src/main.c ****     	parseCommand_Console();
1991:Core/Src/main.c ****     }
1992:Core/Src/main.c ****   	if (UART2_ready == 1) {
1993:Core/Src/main.c ****   		parseCommand_RPI();
1994:Core/Src/main.c ****   	}
1995:Core/Src/main.c **** 
1996:Core/Src/main.c ****     /* USER CODE END WHILE */
1997:Core/Src/main.c **** 
1998:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
1999:Core/Src/main.c ****     }
2000:Core/Src/main.c ****   /* USER CODE END 3 */
2001:Core/Src/main.c **** }
2002:Core/Src/main.c **** 
2003:Core/Src/main.c **** /**
2004:Core/Src/main.c ****   * @brief System Clock Configuration
2005:Core/Src/main.c ****   * @retval None
2006:Core/Src/main.c ****   */
2007:Core/Src/main.c **** void SystemClock_Config(void)
2008:Core/Src/main.c **** {
2009:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
2010:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
2011:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
2012:Core/Src/main.c **** 
2013:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
2014:Core/Src/main.c ****   */
2015:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
2016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
2017:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
2018:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
2019:Core/Src/main.c ****   */
2020:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE
2021:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
2022:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
2023:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
2024:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
2025:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 47


2026:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
2027:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
2028:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
2029:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
2030:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
2031:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
2032:Core/Src/main.c ****   {
2033:Core/Src/main.c ****     Error_Handler();
2034:Core/Src/main.c ****   }
2035:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
2036:Core/Src/main.c ****   */
2037:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
2038:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
2039:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
2040:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
2041:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
2042:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
2043:Core/Src/main.c **** 
2044:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
2045:Core/Src/main.c ****   {
2046:Core/Src/main.c ****     Error_Handler();
2047:Core/Src/main.c ****   }
2048:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
2049:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
2050:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
2051:Core/Src/main.c ****   {
2052:Core/Src/main.c ****     Error_Handler();
2053:Core/Src/main.c ****   }
2054:Core/Src/main.c **** }
2055:Core/Src/main.c **** 
2056:Core/Src/main.c **** /**
2057:Core/Src/main.c ****   * @brief ADC1 Initialization Function
2058:Core/Src/main.c ****   * @param None
2059:Core/Src/main.c ****   * @retval None
2060:Core/Src/main.c ****   */
2061:Core/Src/main.c **** static void MX_ADC1_Init(void)
2062:Core/Src/main.c **** {
2063:Core/Src/main.c **** 
2064:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
2065:Core/Src/main.c **** 
2066:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
2067:Core/Src/main.c **** 
2068:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
2069:Core/Src/main.c **** 
2070:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
2071:Core/Src/main.c **** 
2072:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
2073:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
2074:Core/Src/main.c ****   */
2075:Core/Src/main.c ****   hadc1.Instance = ADC1;
2076:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
2077:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
2078:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
2079:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
2080:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
2081:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
2082:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 48


2083:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
2084:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 2;
2085:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
2086:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
2087:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
2088:Core/Src/main.c ****   {
2089:Core/Src/main.c ****     Error_Handler();
2090:Core/Src/main.c ****   }
2091:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
2092:Core/Src/main.c ****   */
2093:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_12;
2094:Core/Src/main.c ****   sConfig.Rank = 1;
2095:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
2096:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
2097:Core/Src/main.c ****   {
2098:Core/Src/main.c ****     Error_Handler();
2099:Core/Src/main.c ****   }
2100:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
2101:Core/Src/main.c ****   */
2102:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_13;
2103:Core/Src/main.c ****   sConfig.Rank = 2;
2104:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
2105:Core/Src/main.c ****   {
2106:Core/Src/main.c ****     Error_Handler();
2107:Core/Src/main.c ****   }
2108:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
2109:Core/Src/main.c **** 
2110:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
2111:Core/Src/main.c **** 
2112:Core/Src/main.c **** }
2113:Core/Src/main.c **** 
2114:Core/Src/main.c **** /**
2115:Core/Src/main.c ****   * @brief I2C1 Initialization Function
2116:Core/Src/main.c ****   * @param None
2117:Core/Src/main.c ****   * @retval None
2118:Core/Src/main.c ****   */
2119:Core/Src/main.c **** static void MX_I2C1_Init(void)
2120:Core/Src/main.c **** {
2121:Core/Src/main.c **** 
2122:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
2123:Core/Src/main.c **** 
2124:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
2125:Core/Src/main.c **** 
2126:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
2127:Core/Src/main.c **** 
2128:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
2129:Core/Src/main.c ****   hi2c1.Instance = I2C1;
2130:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
2131:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
2132:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
2133:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
2134:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
2135:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
2136:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
2137:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
2138:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
2139:Core/Src/main.c ****   {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 49


2140:Core/Src/main.c ****     Error_Handler();
2141:Core/Src/main.c ****   }
2142:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
2143:Core/Src/main.c **** 
2144:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
2145:Core/Src/main.c **** 
2146:Core/Src/main.c **** }
2147:Core/Src/main.c **** 
2148:Core/Src/main.c **** /**
2149:Core/Src/main.c ****   * @brief I2C2 Initialization Function
2150:Core/Src/main.c ****   * @param None
2151:Core/Src/main.c ****   * @retval None
2152:Core/Src/main.c ****   */
2153:Core/Src/main.c **** static void MX_I2C2_Init(void)
2154:Core/Src/main.c **** {
2155:Core/Src/main.c **** 
2156:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
2157:Core/Src/main.c **** 
2158:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
2159:Core/Src/main.c **** 
2160:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
2161:Core/Src/main.c **** 
2162:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
2163:Core/Src/main.c ****   hi2c2.Instance = I2C2;
2164:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
2165:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
2166:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
2167:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
2168:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
2169:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
2170:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
2171:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
2172:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
2173:Core/Src/main.c ****   {
2174:Core/Src/main.c ****     Error_Handler();
2175:Core/Src/main.c ****   }
2176:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
2177:Core/Src/main.c **** 
2178:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
2179:Core/Src/main.c **** 
2180:Core/Src/main.c **** }
2181:Core/Src/main.c **** 
2182:Core/Src/main.c **** /**
2183:Core/Src/main.c ****   * @brief IWDG Initialization Function
2184:Core/Src/main.c ****   * @param None
2185:Core/Src/main.c ****   * @retval None
2186:Core/Src/main.c ****   */
2187:Core/Src/main.c **** static void MX_IWDG_Init(void)
2188:Core/Src/main.c **** {
2189:Core/Src/main.c **** 
2190:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
2191:Core/Src/main.c **** 
2192:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
2193:Core/Src/main.c **** 
2194:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
2195:Core/Src/main.c **** 
2196:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 50


2197:Core/Src/main.c ****   hiwdg.Instance = IWDG;
2198:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
2199:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
2200:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
2201:Core/Src/main.c ****   {
2202:Core/Src/main.c ****     Error_Handler();
2203:Core/Src/main.c ****   }
2204:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
2205:Core/Src/main.c **** 
2206:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
2207:Core/Src/main.c **** 
2208:Core/Src/main.c **** }
2209:Core/Src/main.c **** 
2210:Core/Src/main.c **** /**
2211:Core/Src/main.c ****   * @brief RNG Initialization Function
2212:Core/Src/main.c ****   * @param None
2213:Core/Src/main.c ****   * @retval None
2214:Core/Src/main.c ****   */
2215:Core/Src/main.c **** static void MX_RNG_Init(void)
2216:Core/Src/main.c **** {
2217:Core/Src/main.c **** 
2218:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 0 */
2219:Core/Src/main.c **** 
2220:Core/Src/main.c ****   /* USER CODE END RNG_Init 0 */
2221:Core/Src/main.c **** 
2222:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 1 */
2223:Core/Src/main.c **** 
2224:Core/Src/main.c ****   /* USER CODE END RNG_Init 1 */
2225:Core/Src/main.c ****   hrng.Instance = RNG;
2226:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
2227:Core/Src/main.c ****   {
2228:Core/Src/main.c ****     Error_Handler();
2229:Core/Src/main.c ****   }
2230:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 2 */
2231:Core/Src/main.c **** 
2232:Core/Src/main.c ****   /* USER CODE END RNG_Init 2 */
2233:Core/Src/main.c **** 
2234:Core/Src/main.c **** }
2235:Core/Src/main.c **** 
2236:Core/Src/main.c **** /**
2237:Core/Src/main.c ****   * @brief RTC Initialization Function
2238:Core/Src/main.c ****   * @param None
2239:Core/Src/main.c ****   * @retval None
2240:Core/Src/main.c ****   */
2241:Core/Src/main.c **** static void MX_RTC_Init(void)
2242:Core/Src/main.c **** {
2243:Core/Src/main.c **** 
2244:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
2245:Core/Src/main.c **** 
2246:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
2247:Core/Src/main.c **** 
2248:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
2249:Core/Src/main.c **** 
2250:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
2251:Core/Src/main.c ****   /** Initialize RTC Only
2252:Core/Src/main.c ****   */
2253:Core/Src/main.c ****   hrtc.Instance = RTC;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 51


2254:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
2255:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
2256:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
2257:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
2258:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
2259:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
2260:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
2261:Core/Src/main.c ****   {
2262:Core/Src/main.c ****     Error_Handler();
2263:Core/Src/main.c ****   }
2264:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
2265:Core/Src/main.c **** 
2266:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
2267:Core/Src/main.c **** 
2268:Core/Src/main.c **** }
2269:Core/Src/main.c **** 
2270:Core/Src/main.c **** /**
2271:Core/Src/main.c ****   * @brief TIM2 Initialization Function
2272:Core/Src/main.c ****   * @param None
2273:Core/Src/main.c ****   * @retval None
2274:Core/Src/main.c ****   */
2275:Core/Src/main.c **** static void MX_TIM2_Init(void)
2276:Core/Src/main.c **** {
2277:Core/Src/main.c **** 
2278:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
2279:Core/Src/main.c **** 
2280:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
2281:Core/Src/main.c **** 
2282:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
2283:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
2284:Core/Src/main.c **** 
2285:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
2286:Core/Src/main.c **** 
2287:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
2288:Core/Src/main.c ****   htim2.Instance = TIM2;
2289:Core/Src/main.c ****   htim2.Init.Prescaler = 10000-1;
2290:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
2291:Core/Src/main.c ****   htim2.Init.Period = 8400-1;
2292:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
2293:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
2294:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
2295:Core/Src/main.c ****   {
2296:Core/Src/main.c ****     Error_Handler();
2297:Core/Src/main.c ****   }
2298:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
2299:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
2300:Core/Src/main.c ****   {
2301:Core/Src/main.c ****     Error_Handler();
2302:Core/Src/main.c ****   }
2303:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
2304:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
2305:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
2306:Core/Src/main.c ****   {
2307:Core/Src/main.c ****     Error_Handler();
2308:Core/Src/main.c ****   }
2309:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
2310:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 52


2311:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
2312:Core/Src/main.c **** 
2313:Core/Src/main.c **** }
2314:Core/Src/main.c **** 
2315:Core/Src/main.c **** /**
2316:Core/Src/main.c ****   * @brief TIM3 Initialization Function
2317:Core/Src/main.c ****   * @param None
2318:Core/Src/main.c ****   * @retval None
2319:Core/Src/main.c ****   */
2320:Core/Src/main.c **** static void MX_TIM3_Init(void)
2321:Core/Src/main.c **** {
2322:Core/Src/main.c **** 
2323:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
2324:Core/Src/main.c **** 
2325:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
2326:Core/Src/main.c **** 
2327:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
2328:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
2329:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
2330:Core/Src/main.c **** 
2331:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
2332:Core/Src/main.c **** 
2333:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
2334:Core/Src/main.c ****   htim3.Instance = TIM3;
2335:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
2336:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
2337:Core/Src/main.c ****   htim3.Init.Period = 3360-1;
2338:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
2339:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
2340:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
2341:Core/Src/main.c ****   {
2342:Core/Src/main.c ****     Error_Handler();
2343:Core/Src/main.c ****   }
2344:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
2345:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
2346:Core/Src/main.c ****   {
2347:Core/Src/main.c ****     Error_Handler();
2348:Core/Src/main.c ****   }
2349:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
2350:Core/Src/main.c ****   {
2351:Core/Src/main.c ****     Error_Handler();
2352:Core/Src/main.c ****   }
2353:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
2354:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
2355:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
2356:Core/Src/main.c ****   {
2357:Core/Src/main.c ****     Error_Handler();
2358:Core/Src/main.c ****   }
2359:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
2360:Core/Src/main.c ****   sConfigOC.Pulse = 0;
2361:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
2362:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
2363:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
2364:Core/Src/main.c ****   {
2365:Core/Src/main.c ****     Error_Handler();
2366:Core/Src/main.c ****   }
2367:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 53


2368:Core/Src/main.c ****   {
2369:Core/Src/main.c ****     Error_Handler();
2370:Core/Src/main.c ****   }
2371:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
2372:Core/Src/main.c **** 
2373:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
2374:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
2375:Core/Src/main.c **** 
2376:Core/Src/main.c **** }
2377:Core/Src/main.c **** 
2378:Core/Src/main.c **** /**
2379:Core/Src/main.c ****   * @brief TIM4 Initialization Function
2380:Core/Src/main.c ****   * @param None
2381:Core/Src/main.c ****   * @retval None
2382:Core/Src/main.c ****   */
2383:Core/Src/main.c **** static void MX_TIM4_Init(void)
2384:Core/Src/main.c **** {
2385:Core/Src/main.c **** 
2386:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
2387:Core/Src/main.c **** 
2388:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
2389:Core/Src/main.c **** 
2390:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
2391:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
2392:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
2393:Core/Src/main.c **** 
2394:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
2395:Core/Src/main.c **** 
2396:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
2397:Core/Src/main.c ****   htim4.Instance = TIM4;
2398:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
2399:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
2400:Core/Src/main.c ****   htim4.Init.Period = 3360-1;
2401:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
2402:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
2403:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
2404:Core/Src/main.c ****   {
2405:Core/Src/main.c ****     Error_Handler();
2406:Core/Src/main.c ****   }
2407:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
2408:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
2409:Core/Src/main.c ****   {
2410:Core/Src/main.c ****     Error_Handler();
2411:Core/Src/main.c ****   }
2412:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
2413:Core/Src/main.c ****   {
2414:Core/Src/main.c ****     Error_Handler();
2415:Core/Src/main.c ****   }
2416:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
2417:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
2418:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
2419:Core/Src/main.c ****   {
2420:Core/Src/main.c ****     Error_Handler();
2421:Core/Src/main.c ****   }
2422:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
2423:Core/Src/main.c ****   sConfigOC.Pulse = 0;
2424:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 54


2425:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
2426:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
2427:Core/Src/main.c ****   {
2428:Core/Src/main.c ****     Error_Handler();
2429:Core/Src/main.c ****   }
2430:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
2431:Core/Src/main.c ****   {
2432:Core/Src/main.c ****     Error_Handler();
2433:Core/Src/main.c ****   }
2434:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
2435:Core/Src/main.c ****   {
2436:Core/Src/main.c ****     Error_Handler();
2437:Core/Src/main.c ****   }
2438:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
2439:Core/Src/main.c ****   {
2440:Core/Src/main.c ****     Error_Handler();
2441:Core/Src/main.c ****   }
2442:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
2443:Core/Src/main.c **** 
2444:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
2445:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
2446:Core/Src/main.c **** 
2447:Core/Src/main.c **** }
2448:Core/Src/main.c **** 
2449:Core/Src/main.c **** /**
2450:Core/Src/main.c ****   * @brief TIM5 Initialization Function
2451:Core/Src/main.c ****   * @param None
2452:Core/Src/main.c ****   * @retval None
2453:Core/Src/main.c ****   */
2454:Core/Src/main.c **** static void MX_TIM5_Init(void)
2455:Core/Src/main.c **** {
2456:Core/Src/main.c **** 
2457:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
2458:Core/Src/main.c **** 
2459:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
2460:Core/Src/main.c **** 
2461:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
2462:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
2463:Core/Src/main.c **** 
2464:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
2465:Core/Src/main.c **** 
2466:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
2467:Core/Src/main.c ****   htim5.Instance = TIM5;
2468:Core/Src/main.c ****   htim5.Init.Prescaler = 84-1;
2469:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
2470:Core/Src/main.c ****   htim5.Init.Period = 65535;
2471:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
2472:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
2473:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
2474:Core/Src/main.c ****   {
2475:Core/Src/main.c ****     Error_Handler();
2476:Core/Src/main.c ****   }
2477:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
2478:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
2479:Core/Src/main.c ****   {
2480:Core/Src/main.c ****     Error_Handler();
2481:Core/Src/main.c ****   }
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 55


2482:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
2483:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
2484:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
2485:Core/Src/main.c ****   {
2486:Core/Src/main.c ****     Error_Handler();
2487:Core/Src/main.c ****   }
2488:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
2489:Core/Src/main.c **** 
2490:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
2491:Core/Src/main.c **** 
2492:Core/Src/main.c **** }
2493:Core/Src/main.c **** 
2494:Core/Src/main.c **** /**
2495:Core/Src/main.c ****   * @brief USART1 Initialization Function
2496:Core/Src/main.c ****   * @param None
2497:Core/Src/main.c ****   * @retval None
2498:Core/Src/main.c ****   */
2499:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
2500:Core/Src/main.c **** {
2501:Core/Src/main.c **** 
2502:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
2503:Core/Src/main.c **** 
2504:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
2505:Core/Src/main.c **** 
2506:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
2507:Core/Src/main.c **** 
2508:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
2509:Core/Src/main.c ****   huart1.Instance = USART1;
2510:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
2511:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
2512:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
2513:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
2514:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
2515:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
2516:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
2517:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
2518:Core/Src/main.c ****   {
2519:Core/Src/main.c ****     Error_Handler();
2520:Core/Src/main.c ****   }
2521:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
2522:Core/Src/main.c **** 
2523:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
2524:Core/Src/main.c **** 
2525:Core/Src/main.c **** }
2526:Core/Src/main.c **** 
2527:Core/Src/main.c **** /**
2528:Core/Src/main.c ****   * @brief USART2 Initialization Function
2529:Core/Src/main.c ****   * @param None
2530:Core/Src/main.c ****   * @retval None
2531:Core/Src/main.c ****   */
2532:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
2533:Core/Src/main.c **** {
2534:Core/Src/main.c **** 
2535:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
2536:Core/Src/main.c **** 
2537:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
2538:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 56


2539:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
2540:Core/Src/main.c **** 
2541:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
2542:Core/Src/main.c ****   huart2.Instance = USART2;
2543:Core/Src/main.c ****   huart2.Init.BaudRate = 1000000;
2544:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
2545:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
2546:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
2547:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
2548:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
2549:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
2550:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
2551:Core/Src/main.c ****   {
2552:Core/Src/main.c ****     Error_Handler();
2553:Core/Src/main.c ****   }
2554:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
2555:Core/Src/main.c **** 
2556:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
2557:Core/Src/main.c **** 
2558:Core/Src/main.c **** }
2559:Core/Src/main.c **** 
2560:Core/Src/main.c **** /**
2561:Core/Src/main.c ****   * Enable DMA controller clock
2562:Core/Src/main.c ****   */
2563:Core/Src/main.c **** static void MX_DMA_Init(void)
2564:Core/Src/main.c **** {
2565:Core/Src/main.c **** 
2566:Core/Src/main.c ****   /* DMA controller clock enable */
2567:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
2568:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
2569:Core/Src/main.c **** 
2570:Core/Src/main.c ****   /* DMA interrupt init */
2571:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
2572:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
2573:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
2574:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
2575:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
2576:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
2577:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
2578:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
2579:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
2580:Core/Src/main.c **** 
2581:Core/Src/main.c **** }
2582:Core/Src/main.c **** 
2583:Core/Src/main.c **** /**
2584:Core/Src/main.c ****   * @brief GPIO Initialization Function
2585:Core/Src/main.c ****   * @param None
2586:Core/Src/main.c ****   * @retval None
2587:Core/Src/main.c ****   */
2588:Core/Src/main.c **** static void MX_GPIO_Init(void)
2589:Core/Src/main.c **** {
 576              		.loc 1 2589 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 40
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 581              	.LCFI2:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 57


 582              		.cfi_def_cfa_offset 20
 583              		.cfi_offset 4, -20
 584              		.cfi_offset 5, -16
 585              		.cfi_offset 6, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 8BB0     		sub	sp, sp, #44
 589              	.LCFI3:
 590              		.cfi_def_cfa_offset 64
2590:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 591              		.loc 1 2590 3 view .LVU154
 592              		.loc 1 2590 20 is_stmt 0 view .LVU155
 593 0004 0024     		movs	r4, #0
 594 0006 0594     		str	r4, [sp, #20]
 595 0008 0694     		str	r4, [sp, #24]
 596 000a 0794     		str	r4, [sp, #28]
 597 000c 0894     		str	r4, [sp, #32]
 598 000e 0994     		str	r4, [sp, #36]
2591:Core/Src/main.c **** 
2592:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
2593:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 599              		.loc 1 2593 3 is_stmt 1 view .LVU156
 600              	.LBB17:
 601              		.loc 1 2593 3 view .LVU157
 602 0010 0094     		str	r4, [sp]
 603              		.loc 1 2593 3 view .LVU158
 604 0012 2E4B     		ldr	r3, .L44
 605 0014 1A6B     		ldr	r2, [r3, #48]
 606 0016 42F00402 		orr	r2, r2, #4
 607 001a 1A63     		str	r2, [r3, #48]
 608              		.loc 1 2593 3 view .LVU159
 609 001c 1A6B     		ldr	r2, [r3, #48]
 610 001e 02F00402 		and	r2, r2, #4
 611 0022 0092     		str	r2, [sp]
 612              		.loc 1 2593 3 view .LVU160
 613 0024 009A     		ldr	r2, [sp]
 614              	.LBE17:
 615              		.loc 1 2593 3 view .LVU161
2594:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 616              		.loc 1 2594 3 view .LVU162
 617              	.LBB18:
 618              		.loc 1 2594 3 view .LVU163
 619 0026 0194     		str	r4, [sp, #4]
 620              		.loc 1 2594 3 view .LVU164
 621 0028 1A6B     		ldr	r2, [r3, #48]
 622 002a 42F08002 		orr	r2, r2, #128
 623 002e 1A63     		str	r2, [r3, #48]
 624              		.loc 1 2594 3 view .LVU165
 625 0030 1A6B     		ldr	r2, [r3, #48]
 626 0032 02F08002 		and	r2, r2, #128
 627 0036 0192     		str	r2, [sp, #4]
 628              		.loc 1 2594 3 view .LVU166
 629 0038 019A     		ldr	r2, [sp, #4]
 630              	.LBE18:
 631              		.loc 1 2594 3 view .LVU167
2595:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 632              		.loc 1 2595 3 view .LVU168
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 58


 633              	.LBB19:
 634              		.loc 1 2595 3 view .LVU169
 635 003a 0294     		str	r4, [sp, #8]
 636              		.loc 1 2595 3 view .LVU170
 637 003c 1A6B     		ldr	r2, [r3, #48]
 638 003e 42F00102 		orr	r2, r2, #1
 639 0042 1A63     		str	r2, [r3, #48]
 640              		.loc 1 2595 3 view .LVU171
 641 0044 1A6B     		ldr	r2, [r3, #48]
 642 0046 02F00102 		and	r2, r2, #1
 643 004a 0292     		str	r2, [sp, #8]
 644              		.loc 1 2595 3 view .LVU172
 645 004c 029A     		ldr	r2, [sp, #8]
 646              	.LBE19:
 647              		.loc 1 2595 3 view .LVU173
2596:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 648              		.loc 1 2596 3 view .LVU174
 649              	.LBB20:
 650              		.loc 1 2596 3 view .LVU175
 651 004e 0394     		str	r4, [sp, #12]
 652              		.loc 1 2596 3 view .LVU176
 653 0050 1A6B     		ldr	r2, [r3, #48]
 654 0052 42F00202 		orr	r2, r2, #2
 655 0056 1A63     		str	r2, [r3, #48]
 656              		.loc 1 2596 3 view .LVU177
 657 0058 1A6B     		ldr	r2, [r3, #48]
 658 005a 02F00202 		and	r2, r2, #2
 659 005e 0392     		str	r2, [sp, #12]
 660              		.loc 1 2596 3 view .LVU178
 661 0060 039A     		ldr	r2, [sp, #12]
 662              	.LBE20:
 663              		.loc 1 2596 3 view .LVU179
2597:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 664              		.loc 1 2597 3 view .LVU180
 665              	.LBB21:
 666              		.loc 1 2597 3 view .LVU181
 667 0062 0494     		str	r4, [sp, #16]
 668              		.loc 1 2597 3 view .LVU182
 669 0064 1A6B     		ldr	r2, [r3, #48]
 670 0066 42F00802 		orr	r2, r2, #8
 671 006a 1A63     		str	r2, [r3, #48]
 672              		.loc 1 2597 3 view .LVU183
 673 006c 1B6B     		ldr	r3, [r3, #48]
 674 006e 03F00803 		and	r3, r3, #8
 675 0072 0493     		str	r3, [sp, #16]
 676              		.loc 1 2597 3 view .LVU184
 677 0074 049B     		ldr	r3, [sp, #16]
 678              	.LBE21:
 679              		.loc 1 2597 3 view .LVU185
2598:Core/Src/main.c **** 
2599:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
2600:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET);
 680              		.loc 1 2600 3 view .LVU186
 681 0076 164F     		ldr	r7, .L44+4
 682 0078 2246     		mov	r2, r4
 683 007a 4FF48061 		mov	r1, #1024
 684 007e 3846     		mov	r0, r7
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 59


 685 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 686              	.LVL35:
2601:Core/Src/main.c **** 
2602:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
2603:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_RESET);
 687              		.loc 1 2603 3 view .LVU187
 688 0084 134E     		ldr	r6, .L44+8
 689 0086 2246     		mov	r2, r4
 690 0088 0121     		movs	r1, #1
 691 008a 3046     		mov	r0, r6
 692 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 693              	.LVL36:
2604:Core/Src/main.c **** 
2605:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
2606:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 694              		.loc 1 2606 3 view .LVU188
 695              		.loc 1 2606 23 is_stmt 0 view .LVU189
 696 0090 4FF48073 		mov	r3, #256
 697 0094 0593     		str	r3, [sp, #20]
2607:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 698              		.loc 1 2607 3 is_stmt 1 view .LVU190
 699              		.loc 1 2607 24 is_stmt 0 view .LVU191
 700 0096 0694     		str	r4, [sp, #24]
2608:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 701              		.loc 1 2608 3 is_stmt 1 view .LVU192
 702              		.loc 1 2608 24 is_stmt 0 view .LVU193
 703 0098 0794     		str	r4, [sp, #28]
2609:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 704              		.loc 1 2609 3 is_stmt 1 view .LVU194
 705 009a 05A9     		add	r1, sp, #20
 706 009c 0E48     		ldr	r0, .L44+12
 707 009e FFF7FEFF 		bl	HAL_GPIO_Init
 708              	.LVL37:
2610:Core/Src/main.c **** 
2611:Core/Src/main.c ****   /*Configure GPIO pin : PC10 */
2612:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 709              		.loc 1 2612 3 view .LVU195
 710              		.loc 1 2612 23 is_stmt 0 view .LVU196
 711 00a2 4FF48063 		mov	r3, #1024
 712 00a6 0593     		str	r3, [sp, #20]
2613:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 713              		.loc 1 2613 3 is_stmt 1 view .LVU197
 714              		.loc 1 2613 24 is_stmt 0 view .LVU198
 715 00a8 0125     		movs	r5, #1
 716 00aa 0695     		str	r5, [sp, #24]
2614:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 717              		.loc 1 2614 3 is_stmt 1 view .LVU199
 718              		.loc 1 2614 24 is_stmt 0 view .LVU200
 719 00ac 0794     		str	r4, [sp, #28]
2615:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 720              		.loc 1 2615 3 is_stmt 1 view .LVU201
 721              		.loc 1 2615 25 is_stmt 0 view .LVU202
 722 00ae 0894     		str	r4, [sp, #32]
2616:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 723              		.loc 1 2616 3 is_stmt 1 view .LVU203
 724 00b0 05A9     		add	r1, sp, #20
 725 00b2 3846     		mov	r0, r7
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 60


 726 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 727              	.LVL38:
2617:Core/Src/main.c **** 
2618:Core/Src/main.c ****   /*Configure GPIO pin : PD0 */
2619:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 728              		.loc 1 2619 3 view .LVU204
 729              		.loc 1 2619 23 is_stmt 0 view .LVU205
 730 00b8 0595     		str	r5, [sp, #20]
2620:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 731              		.loc 1 2620 3 is_stmt 1 view .LVU206
 732              		.loc 1 2620 24 is_stmt 0 view .LVU207
 733 00ba 0695     		str	r5, [sp, #24]
2621:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 734              		.loc 1 2621 3 is_stmt 1 view .LVU208
 735              		.loc 1 2621 24 is_stmt 0 view .LVU209
 736 00bc 0794     		str	r4, [sp, #28]
2622:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 737              		.loc 1 2622 3 is_stmt 1 view .LVU210
 738              		.loc 1 2622 25 is_stmt 0 view .LVU211
 739 00be 0894     		str	r4, [sp, #32]
2623:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 740              		.loc 1 2623 3 is_stmt 1 view .LVU212
 741 00c0 05A9     		add	r1, sp, #20
 742 00c2 3046     		mov	r0, r6
 743 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 744              	.LVL39:
2624:Core/Src/main.c **** 
2625:Core/Src/main.c **** }
 745              		.loc 1 2625 1 is_stmt 0 view .LVU213
 746 00c8 0BB0     		add	sp, sp, #44
 747              	.LCFI4:
 748              		.cfi_def_cfa_offset 20
 749              		@ sp needed
 750 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 751              	.L45:
 752              		.align	2
 753              	.L44:
 754 00cc 00380240 		.word	1073887232
 755 00d0 00080240 		.word	1073874944
 756 00d4 000C0240 		.word	1073875968
 757 00d8 00000240 		.word	1073872896
 758              		.cfi_endproc
 759              	.LFE330:
 761              		.section	.text.MX_DMA_Init,"ax",%progbits
 762              		.align	1
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv4-sp-d16
 768              	MX_DMA_Init:
 769              	.LFB329:
2564:Core/Src/main.c **** 
 770              		.loc 1 2564 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 8
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 61


 775              	.LCFI5:
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 4, -8
 778              		.cfi_offset 14, -4
 779 0002 82B0     		sub	sp, sp, #8
 780              	.LCFI6:
 781              		.cfi_def_cfa_offset 16
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 782              		.loc 1 2567 3 view .LVU215
 783              	.LBB22:
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 784              		.loc 1 2567 3 view .LVU216
 785 0004 0024     		movs	r4, #0
 786 0006 0094     		str	r4, [sp]
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 787              		.loc 1 2567 3 view .LVU217
 788 0008 164B     		ldr	r3, .L48
 789 000a 1A6B     		ldr	r2, [r3, #48]
 790 000c 42F48002 		orr	r2, r2, #4194304
 791 0010 1A63     		str	r2, [r3, #48]
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 792              		.loc 1 2567 3 view .LVU218
 793 0012 1A6B     		ldr	r2, [r3, #48]
 794 0014 02F48002 		and	r2, r2, #4194304
 795 0018 0092     		str	r2, [sp]
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 796              		.loc 1 2567 3 view .LVU219
 797 001a 009A     		ldr	r2, [sp]
 798              	.LBE22:
2567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 799              		.loc 1 2567 3 view .LVU220
2568:Core/Src/main.c **** 
 800              		.loc 1 2568 3 view .LVU221
 801              	.LBB23:
2568:Core/Src/main.c **** 
 802              		.loc 1 2568 3 view .LVU222
 803 001c 0194     		str	r4, [sp, #4]
2568:Core/Src/main.c **** 
 804              		.loc 1 2568 3 view .LVU223
 805 001e 1A6B     		ldr	r2, [r3, #48]
 806 0020 42F40012 		orr	r2, r2, #2097152
 807 0024 1A63     		str	r2, [r3, #48]
2568:Core/Src/main.c **** 
 808              		.loc 1 2568 3 view .LVU224
 809 0026 1B6B     		ldr	r3, [r3, #48]
 810 0028 03F40013 		and	r3, r3, #2097152
 811 002c 0193     		str	r3, [sp, #4]
2568:Core/Src/main.c **** 
 812              		.loc 1 2568 3 view .LVU225
 813 002e 019B     		ldr	r3, [sp, #4]
 814              	.LBE23:
2568:Core/Src/main.c **** 
 815              		.loc 1 2568 3 view .LVU226
2572:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 816              		.loc 1 2572 3 view .LVU227
 817 0030 2246     		mov	r2, r4
 818 0032 2146     		mov	r1, r4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 62


 819 0034 1020     		movs	r0, #16
 820 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 821              	.LVL40:
2573:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 822              		.loc 1 2573 3 view .LVU228
 823 003a 1020     		movs	r0, #16
 824 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 825              	.LVL41:
2575:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 826              		.loc 1 2575 3 view .LVU229
 827 0040 2246     		mov	r2, r4
 828 0042 2146     		mov	r1, r4
 829 0044 3820     		movs	r0, #56
 830 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 831              	.LVL42:
2576:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 832              		.loc 1 2576 3 view .LVU230
 833 004a 3820     		movs	r0, #56
 834 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 835              	.LVL43:
2578:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 836              		.loc 1 2578 3 view .LVU231
 837 0050 2246     		mov	r2, r4
 838 0052 2146     		mov	r1, r4
 839 0054 3A20     		movs	r0, #58
 840 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 841              	.LVL44:
2579:Core/Src/main.c **** 
 842              		.loc 1 2579 3 view .LVU232
 843 005a 3A20     		movs	r0, #58
 844 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 845              	.LVL45:
2581:Core/Src/main.c **** 
 846              		.loc 1 2581 1 is_stmt 0 view .LVU233
 847 0060 02B0     		add	sp, sp, #8
 848              	.LCFI7:
 849              		.cfi_def_cfa_offset 8
 850              		@ sp needed
 851 0062 10BD     		pop	{r4, pc}
 852              	.L49:
 853              		.align	2
 854              	.L48:
 855 0064 00380240 		.word	1073887232
 856              		.cfi_endproc
 857              	.LFE329:
 859              		.section	.text.WatchdogInit,"ax",%progbits
 860              		.align	1
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
 866              	WatchdogInit:
 867              	.LFB275:
 391:Core/Src/main.c **** 
 868              		.loc 1 391 25 is_stmt 1 view -0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 63


 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872 0000 08B5     		push	{r3, lr}
 873              	.LCFI8:
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 3, -8
 876              		.cfi_offset 14, -4
 405:Core/Src/main.c ****     hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 877              		.loc 1 405 5 view .LVU235
 405:Core/Src/main.c ****     hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 878              		.loc 1 405 20 is_stmt 0 view .LVU236
 879 0002 0548     		ldr	r0, .L52
 880 0004 054B     		ldr	r3, .L52+4
 881 0006 0360     		str	r3, [r0]
 406:Core/Src/main.c ****     hiwdg.Init.Reload = 4095;
 882              		.loc 1 406 5 is_stmt 1 view .LVU237
 406:Core/Src/main.c ****     hiwdg.Init.Reload = 4095;
 883              		.loc 1 406 26 is_stmt 0 view .LVU238
 884 0008 0223     		movs	r3, #2
 885 000a 4360     		str	r3, [r0, #4]
 407:Core/Src/main.c ****     HAL_IWDG_Init(&hiwdg);
 886              		.loc 1 407 5 is_stmt 1 view .LVU239
 407:Core/Src/main.c ****     HAL_IWDG_Init(&hiwdg);
 887              		.loc 1 407 23 is_stmt 0 view .LVU240
 888 000c 40F6FF73 		movw	r3, #4095
 889 0010 8360     		str	r3, [r0, #8]
 408:Core/Src/main.c **** 
 890              		.loc 1 408 5 is_stmt 1 view .LVU241
 891 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 892              	.LVL46:
 410:Core/Src/main.c **** 
 893              		.loc 1 410 1 is_stmt 0 view .LVU242
 894 0016 08BD     		pop	{r3, pc}
 895              	.L53:
 896              		.align	2
 897              	.L52:
 898 0018 00000000 		.word	hiwdg
 899 001c 00300040 		.word	1073754112
 900              		.cfi_endproc
 901              	.LFE275:
 903              		.section	.text.InitFIR,"ax",%progbits
 904              		.align	1
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv4-sp-d16
 910              	InitFIR:
 911              	.LFB277:
 419:Core/Src/main.c **** 
 912              		.loc 1 419 20 is_stmt 1 view -0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916 0000 00B5     		push	{lr}
 917              	.LCFI9:
 918              		.cfi_def_cfa_offset 4
 919              		.cfi_offset 14, -4
 920 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 64


 921              	.LCFI10:
 922              		.cfi_def_cfa_offset 16
 423:Core/Src/main.c **** 	arm_fir_init_f32(&S, NUM_TAPS, (float32_t *)&firCoeffs32[0], &firStateF32[0], blocksize);
 923              		.loc 1 423 2 view .LVU244
 924              	.LVL47:
 424:Core/Src/main.c **** }
 925              		.loc 1 424 2 view .LVU245
 926 0004 2023     		movs	r3, #32
 927 0006 0093     		str	r3, [sp]
 928 0008 044B     		ldr	r3, .L56
 929 000a 054A     		ldr	r2, .L56+4
 930 000c 0521     		movs	r1, #5
 931 000e 0548     		ldr	r0, .L56+8
 932 0010 FFF7FEFF 		bl	arm_fir_init_f32
 933              	.LVL48:
 425:Core/Src/main.c **** 
 934              		.loc 1 425 1 is_stmt 0 view .LVU246
 935 0014 03B0     		add	sp, sp, #12
 936              	.LCFI11:
 937              		.cfi_def_cfa_offset 4
 938              		@ sp needed
 939 0016 5DF804FB 		ldr	pc, [sp], #4
 940              	.L57:
 941 001a 00BF     		.align	2
 942              	.L56:
 943 001c 00000000 		.word	.LANCHOR12
 944 0020 00000000 		.word	.LANCHOR13
 945 0024 00000000 		.word	S
 946              		.cfi_endproc
 947              	.LFE277:
 949              		.section	.text.MotorHardBrake,"ax",%progbits
 950              		.align	1
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv4-sp-d16
 956              	MotorHardBrake:
 957              	.LFB313:
1697:Core/Src/main.c **** 
 958              		.loc 1 1697 27 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 08B5     		push	{r3, lr}
 963              	.LCFI12:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 3, -8
 966              		.cfi_offset 14, -4
1699:Core/Src/main.c **** 
 967              		.loc 1 1699 2 view .LVU248
1699:Core/Src/main.c **** 
 968              		.loc 1 1699 12 is_stmt 0 view .LVU249
 969 0002 094B     		ldr	r3, .L60
 970 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 971 0006 094A     		ldr	r2, .L60+4
 972 0008 1170     		strb	r1, [r2]
1701:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 65


 973              		.loc 1 1701 2 is_stmt 1 view .LVU250
1701:Core/Src/main.c **** 
 974              		.loc 1 1701 8 is_stmt 0 view .LVU251
 975 000a 0822     		movs	r2, #8
 976 000c 1A70     		strb	r2, [r3]
1704:Core/Src/main.c **** 	TIM4->CCR2 = 3360 -1;
 977              		.loc 1 1704 2 is_stmt 1 view .LVU252
1704:Core/Src/main.c **** 	TIM4->CCR2 = 3360 -1;
 978              		.loc 1 1704 13 is_stmt 0 view .LVU253
 979 000e 084B     		ldr	r3, .L60+8
 980 0010 40F61F52 		movw	r2, #3359
 981 0014 5A63     		str	r2, [r3, #52]
1705:Core/Src/main.c **** 	TIM4->CCR3 = 3360 -1;
 982              		.loc 1 1705 2 is_stmt 1 view .LVU254
1705:Core/Src/main.c **** 	TIM4->CCR3 = 3360 -1;
 983              		.loc 1 1705 13 is_stmt 0 view .LVU255
 984 0016 9A63     		str	r2, [r3, #56]
1706:Core/Src/main.c **** 	TIM4->CCR4 = 3360 -1;
 985              		.loc 1 1706 2 is_stmt 1 view .LVU256
1706:Core/Src/main.c **** 	TIM4->CCR4 = 3360 -1;
 986              		.loc 1 1706 13 is_stmt 0 view .LVU257
 987 0018 DA63     		str	r2, [r3, #60]
1707:Core/Src/main.c **** 
 988              		.loc 1 1707 2 is_stmt 1 view .LVU258
1707:Core/Src/main.c **** 
 989              		.loc 1 1707 13 is_stmt 0 view .LVU259
 990 001a 1A64     		str	r2, [r3, #64]
1709:Core/Src/main.c **** 
 991              		.loc 1 1709 2 is_stmt 1 view .LVU260
 992 001c FA20     		movs	r0, #250
 993 001e FFF7FEFF 		bl	HAL_Delay
 994              	.LVL49:
1711:Core/Src/main.c **** 
 995              		.loc 1 1711 2 view .LVU261
 996 0022 FFF7FEFF 		bl	MotorBrake
 997              	.LVL50:
1713:Core/Src/main.c **** void CheckState(void) {
 998              		.loc 1 1713 1 is_stmt 0 view .LVU262
 999 0026 08BD     		pop	{r3, pc}
 1000              	.L61:
 1001              		.align	2
 1002              	.L60:
 1003 0028 00000000 		.word	.LANCHOR11
 1004 002c 00000000 		.word	.LANCHOR10
 1005 0030 00080040 		.word	1073743872
 1006              		.cfi_endproc
 1007              	.LFE313:
 1009              		.section	.text.cutterHardBreak,"ax",%progbits
 1010              		.align	1
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	cutterHardBreak:
 1017              	.LFB299:
1258:Core/Src/main.c **** 
 1018              		.loc 1 1258 24 is_stmt 1 view -0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 66


 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022 0000 08B5     		push	{r3, lr}
 1023              	.LCFI13:
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 3, -8
 1026              		.cfi_offset 14, -4
1262:Core/Src/main.c **** 	TIM3->CCR2 = MotorMaxSpeed;
 1027              		.loc 1 1262 2 view .LVU264
1262:Core/Src/main.c **** 	TIM3->CCR2 = MotorMaxSpeed;
 1028              		.loc 1 1262 13 is_stmt 0 view .LVU265
 1029 0002 064B     		ldr	r3, .L64
 1030 0004 40F61F52 		movw	r2, #3359
 1031 0008 5A63     		str	r2, [r3, #52]
1263:Core/Src/main.c **** 	HAL_Delay(3000);
 1032              		.loc 1 1263 2 is_stmt 1 view .LVU266
1263:Core/Src/main.c **** 	HAL_Delay(3000);
 1033              		.loc 1 1263 13 is_stmt 0 view .LVU267
 1034 000a 9A63     		str	r2, [r3, #56]
1264:Core/Src/main.c **** 	cutterOFF();
 1035              		.loc 1 1264 2 is_stmt 1 view .LVU268
 1036 000c 40F6B830 		movw	r0, #3000
 1037 0010 FFF7FEFF 		bl	HAL_Delay
 1038              	.LVL51:
1265:Core/Src/main.c **** 
 1039              		.loc 1 1265 2 view .LVU269
 1040 0014 FFF7FEFF 		bl	cutterOFF
 1041              	.LVL52:
1267:Core/Src/main.c **** 
 1042              		.loc 1 1267 1 is_stmt 0 view .LVU270
 1043 0018 08BD     		pop	{r3, pc}
 1044              	.L65:
 1045 001a 00BF     		.align	2
 1046              	.L64:
 1047 001c 00040040 		.word	1073742848
 1048              		.cfi_endproc
 1049              	.LFE299:
 1051              		.section	.text.MotorStop,"ax",%progbits
 1052              		.align	1
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv4-sp-d16
 1058              	MotorStop:
 1059              	.LFB311:
1653:Core/Src/main.c **** 
 1060              		.loc 1 1653 22 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064 0000 10B5     		push	{r4, lr}
 1065              	.LCFI14:
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
1655:Core/Src/main.c **** 	State = STOP;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 67


 1069              		.loc 1 1655 2 view .LVU272
1655:Core/Src/main.c **** 	State = STOP;
 1070              		.loc 1 1655 12 is_stmt 0 view .LVU273
 1071 0002 234B     		ldr	r3, .L76+8
 1072 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1073 0006 234A     		ldr	r2, .L76+12
 1074 0008 1170     		strb	r1, [r2]
1656:Core/Src/main.c **** 	int speed = 0;
 1075              		.loc 1 1656 2 is_stmt 1 view .LVU274
1656:Core/Src/main.c **** 	int speed = 0;
 1076              		.loc 1 1656 8 is_stmt 0 view .LVU275
 1077 000a 0022     		movs	r2, #0
 1078 000c 1A70     		strb	r2, [r3]
1657:Core/Src/main.c **** 
 1079              		.loc 1 1657 2 is_stmt 1 view .LVU276
 1080              	.LVL53:
1659:Core/Src/main.c **** 	speed *= 0.90;
 1081              		.loc 1 1659 2 view .LVU277
1659:Core/Src/main.c **** 	speed *= 0.90;
 1082              		.loc 1 1659 15 is_stmt 0 view .LVU278
 1083 000e 224B     		ldr	r3, .L76+16
 1084 0010 586B     		ldr	r0, [r3, #52]
1659:Core/Src/main.c **** 	speed *= 0.90;
 1085              		.loc 1 1659 28 view .LVU279
 1086 0012 9A6B     		ldr	r2, [r3, #56]
1659:Core/Src/main.c **** 	speed *= 0.90;
 1087              		.loc 1 1659 22 view .LVU280
 1088 0014 1044     		add	r0, r0, r2
1659:Core/Src/main.c **** 	speed *= 0.90;
 1089              		.loc 1 1659 41 view .LVU281
 1090 0016 DA6B     		ldr	r2, [r3, #60]
1659:Core/Src/main.c **** 	speed *= 0.90;
 1091              		.loc 1 1659 35 view .LVU282
 1092 0018 1044     		add	r0, r0, r2
1659:Core/Src/main.c **** 	speed *= 0.90;
 1093              		.loc 1 1659 54 view .LVU283
 1094 001a 1B6C     		ldr	r3, [r3, #64]
1659:Core/Src/main.c **** 	speed *= 0.90;
 1095              		.loc 1 1659 48 view .LVU284
 1096 001c 1844     		add	r0, r0, r3
 1097              	.LVL54:
1660:Core/Src/main.c **** 
 1098              		.loc 1 1660 2 is_stmt 1 view .LVU285
1660:Core/Src/main.c **** 
 1099              		.loc 1 1660 8 is_stmt 0 view .LVU286
 1100 001e 4008     		lsrs	r0, r0, #1
 1101              	.LVL55:
1660:Core/Src/main.c **** 
 1102              		.loc 1 1660 8 view .LVU287
 1103 0020 FFF7FEFF 		bl	__aeabi_i2d
 1104              	.LVL56:
1660:Core/Src/main.c **** 
 1105              		.loc 1 1660 8 view .LVU288
 1106 0024 18A3     		adr	r3, .L76
 1107 0026 D3E90023 		ldrd	r2, [r3]
 1108 002a FFF7FEFF 		bl	__aeabi_dmul
 1109              	.LVL57:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 68


 1110 002e FFF7FEFF 		bl	__aeabi_d2iz
 1111              	.LVL58:
1662:Core/Src/main.c **** 
 1112              		.loc 1 1662 2 is_stmt 1 view .LVU289
1662:Core/Src/main.c **** 
 1113              		.loc 1 1662 5 is_stmt 0 view .LVU290
 1114 0032 0446     		mov	r4, r0
 1115 0034 20B9     		cbnz	r0, .L68
 1116 0036 26E0     		b	.L66
 1117              	.LVL59:
 1118              	.L73:
 1119              	.LBB24:
1675:Core/Src/main.c **** 	}
 1120              		.loc 1 1675 3 is_stmt 1 discriminator 2 view .LVU291
 1121 0038 0120     		movs	r0, #1
 1122 003a FFF7FEFF 		bl	HAL_Delay
 1123              	.LVL60:
1664:Core/Src/main.c **** 
 1124              		.loc 1 1664 32 discriminator 2 view .LVU292
1664:Core/Src/main.c **** 
 1125              		.loc 1 1664 33 is_stmt 0 discriminator 2 view .LVU293
 1126 003e 053C     		subs	r4, r4, #5
 1127              	.LVL61:
 1128              	.L68:
1664:Core/Src/main.c **** 
 1129              		.loc 1 1664 22 is_stmt 1 discriminator 1 view .LVU294
1664:Core/Src/main.c **** 
 1130              		.loc 1 1664 2 is_stmt 0 discriminator 1 view .LVU295
 1131 0040 B4F57A7F 		cmp	r4, #1000
 1132 0044 19DD     		ble	.L69
1666:Core/Src/main.c **** 
 1133              		.loc 1 1666 3 is_stmt 1 view .LVU296
1666:Core/Src/main.c **** 
 1134              		.loc 1 1666 5 is_stmt 0 view .LVU297
 1135 0046 231F     		subs	r3, r4, #4
 1136              	.LVL62:
1668:Core/Src/main.c **** 
 1137              		.loc 1 1668 3 is_stmt 1 view .LVU298
1668:Core/Src/main.c **** 
 1138              		.loc 1 1668 6 is_stmt 0 view .LVU299
 1139 0048 B3F57A7F 		cmp	r3, #1000
 1140 004c 15DB     		blt	.L69
1670:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
 1141              		.loc 1 1670 3 is_stmt 1 view .LVU300
1670:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
 1142              		.loc 1 1670 11 is_stmt 0 view .LVU301
 1143 004e 124A     		ldr	r2, .L76+16
 1144 0050 526B     		ldr	r2, [r2, #52]
1670:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
 1145              		.loc 1 1670 6 view .LVU302
 1146 0052 0AB1     		cbz	r2, .L70
1670:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
 1147              		.loc 1 1670 24 is_stmt 1 discriminator 1 view .LVU303
1670:Core/Src/main.c **** 		if (TIM4->CCR2 != 0) TIM4->CCR2 = x;
 1148              		.loc 1 1670 35 is_stmt 0 discriminator 1 view .LVU304
 1149 0054 104A     		ldr	r2, .L76+16
 1150 0056 5363     		str	r3, [r2, #52]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 69


 1151              	.L70:
1671:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
 1152              		.loc 1 1671 3 is_stmt 1 view .LVU305
1671:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
 1153              		.loc 1 1671 11 is_stmt 0 view .LVU306
 1154 0058 0F4A     		ldr	r2, .L76+16
 1155 005a 926B     		ldr	r2, [r2, #56]
1671:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
 1156              		.loc 1 1671 6 view .LVU307
 1157 005c 0AB1     		cbz	r2, .L71
1671:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
 1158              		.loc 1 1671 24 is_stmt 1 discriminator 1 view .LVU308
1671:Core/Src/main.c **** 		if (TIM4->CCR3 != 0) TIM4->CCR3 = x;
 1159              		.loc 1 1671 35 is_stmt 0 discriminator 1 view .LVU309
 1160 005e 0E4A     		ldr	r2, .L76+16
 1161 0060 9363     		str	r3, [r2, #56]
 1162              	.L71:
1672:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
 1163              		.loc 1 1672 3 is_stmt 1 view .LVU310
1672:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
 1164              		.loc 1 1672 11 is_stmt 0 view .LVU311
 1165 0062 0D4A     		ldr	r2, .L76+16
 1166 0064 D26B     		ldr	r2, [r2, #60]
1672:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
 1167              		.loc 1 1672 6 view .LVU312
 1168 0066 0AB1     		cbz	r2, .L72
1672:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
 1169              		.loc 1 1672 24 is_stmt 1 discriminator 1 view .LVU313
1672:Core/Src/main.c **** 		if (TIM4->CCR4 != 0) TIM4->CCR4 = x;
 1170              		.loc 1 1672 35 is_stmt 0 discriminator 1 view .LVU314
 1171 0068 0B4A     		ldr	r2, .L76+16
 1172 006a D363     		str	r3, [r2, #60]
 1173              	.L72:
1673:Core/Src/main.c **** 
 1174              		.loc 1 1673 3 is_stmt 1 view .LVU315
1673:Core/Src/main.c **** 
 1175              		.loc 1 1673 11 is_stmt 0 view .LVU316
 1176 006c 0A4A     		ldr	r2, .L76+16
 1177 006e 126C     		ldr	r2, [r2, #64]
1673:Core/Src/main.c **** 
 1178              		.loc 1 1673 6 view .LVU317
 1179 0070 002A     		cmp	r2, #0
 1180 0072 E1D0     		beq	.L73
1673:Core/Src/main.c **** 
 1181              		.loc 1 1673 24 is_stmt 1 discriminator 1 view .LVU318
1673:Core/Src/main.c **** 
 1182              		.loc 1 1673 35 is_stmt 0 discriminator 1 view .LVU319
 1183 0074 084A     		ldr	r2, .L76+16
 1184 0076 1364     		str	r3, [r2, #64]
 1185 0078 DEE7     		b	.L73
 1186              	.LVL63:
 1187              	.L69:
1673:Core/Src/main.c **** 
 1188              		.loc 1 1673 35 discriminator 1 view .LVU320
 1189              	.LBE24:
1678:Core/Src/main.c **** 	TIM4->CCR2 = 0;
 1190              		.loc 1 1678 2 is_stmt 1 view .LVU321
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 70


1678:Core/Src/main.c **** 	TIM4->CCR2 = 0;
 1191              		.loc 1 1678 13 is_stmt 0 view .LVU322
 1192 007a 074B     		ldr	r3, .L76+16
 1193 007c 0022     		movs	r2, #0
 1194 007e 5A63     		str	r2, [r3, #52]
1679:Core/Src/main.c **** 	TIM4->CCR3 = 0;
 1195              		.loc 1 1679 2 is_stmt 1 view .LVU323
1679:Core/Src/main.c **** 	TIM4->CCR3 = 0;
 1196              		.loc 1 1679 13 is_stmt 0 view .LVU324
 1197 0080 9A63     		str	r2, [r3, #56]
1680:Core/Src/main.c **** 	TIM4->CCR4 = 0;
 1198              		.loc 1 1680 2 is_stmt 1 view .LVU325
1680:Core/Src/main.c **** 	TIM4->CCR4 = 0;
 1199              		.loc 1 1680 13 is_stmt 0 view .LVU326
 1200 0082 DA63     		str	r2, [r3, #60]
1681:Core/Src/main.c **** 
 1201              		.loc 1 1681 2 is_stmt 1 view .LVU327
1681:Core/Src/main.c **** 
 1202              		.loc 1 1681 13 is_stmt 0 view .LVU328
 1203 0084 1A64     		str	r2, [r3, #64]
 1204              	.L66:
1683:Core/Src/main.c **** 
 1205              		.loc 1 1683 1 view .LVU329
 1206 0086 10BD     		pop	{r4, pc}
 1207              	.L77:
 1208              		.align	3
 1209              	.L76:
 1210 0088 CDCCCCCC 		.word	3435973837
 1211 008c CCCCEC3F 		.word	1072483532
 1212 0090 00000000 		.word	.LANCHOR11
 1213 0094 00000000 		.word	.LANCHOR10
 1214 0098 00080040 		.word	1073743872
 1215              		.cfi_endproc
 1216              	.LFE311:
 1218              		.section	.text.Undock_MotorBackward,"ax",%progbits
 1219              		.align	1
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu fpv4-sp-d16
 1225              	Undock_MotorBackward:
 1226              	.LVL64:
 1227              	.LFB306:
1505:Core/Src/main.c **** 
 1228              		.loc 1 1505 65 is_stmt 1 view -0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 0, uses_anonymous_args = 0
1505:Core/Src/main.c **** 
 1232              		.loc 1 1505 65 is_stmt 0 view .LVU331
 1233 0000 38B5     		push	{r3, r4, r5, lr}
 1234              	.LCFI15:
 1235              		.cfi_def_cfa_offset 16
 1236              		.cfi_offset 3, -16
 1237              		.cfi_offset 4, -12
 1238              		.cfi_offset 5, -8
 1239              		.cfi_offset 14, -4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 71


 1240 0002 0446     		mov	r4, r0
 1241 0004 0D46     		mov	r5, r1
1507:Core/Src/main.c **** 
 1242              		.loc 1 1507 2 is_stmt 1 view .LVU332
1507:Core/Src/main.c **** 
 1243              		.loc 1 1507 8 is_stmt 0 view .LVU333
 1244 0006 0E4B     		ldr	r3, .L83
 1245 0008 0222     		movs	r2, #2
 1246 000a 1A70     		strb	r2, [r3]
1509:Core/Src/main.c **** 
 1247              		.loc 1 1509 1 is_stmt 1 view .LVU334
 1248              	.LBB25:
1509:Core/Src/main.c **** 
 1249              		.loc 1 1509 6 view .LVU335
 1250              	.LVL65:
 1251              	.L79:
1509:Core/Src/main.c **** 
 1252              		.loc 1 1509 40 discriminator 1 view .LVU336
1509:Core/Src/main.c **** 
 1253              		.loc 1 1509 1 is_stmt 0 discriminator 1 view .LVU337
 1254 000c AC42     		cmp	r4, r5
 1255 000e 0FD2     		bcs	.L80
1511:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 1256              		.loc 1 1511 4 is_stmt 1 view .LVU338
1511:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 1257              		.loc 1 1511 17 is_stmt 0 view .LVU339
 1258 0010 631C     		adds	r3, r4, #1
 1259 0012 9BB2     		uxth	r3, r3
 1260              	.LVL66:
1512:Core/Src/main.c **** 		  break;
 1261              		.loc 1 1512 4 is_stmt 1 view .LVU340
1512:Core/Src/main.c **** 		  break;
 1262              		.loc 1 1512 7 is_stmt 0 view .LVU341
 1263 0014 9D42     		cmp	r5, r3
 1264 0016 0BD9     		bls	.L80
1516:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 1265              		.loc 1 1516 4 is_stmt 1 discriminator 2 view .LVU342
1516:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 1266              		.loc 1 1516 15 is_stmt 0 discriminator 2 view .LVU343
 1267 0018 0A4A     		ldr	r2, .L83+4
 1268 001a 5363     		str	r3, [r2, #52]
1517:Core/Src/main.c **** 
 1269              		.loc 1 1517 4 is_stmt 1 discriminator 2 view .LVU344
1517:Core/Src/main.c **** 
 1270              		.loc 1 1517 15 is_stmt 0 discriminator 2 view .LVU345
 1271 001c 0020     		movs	r0, #0
 1272 001e 9063     		str	r0, [r2, #56]
1519:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
 1273              		.loc 1 1519 4 is_stmt 1 discriminator 2 view .LVU346
1519:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
 1274              		.loc 1 1519 15 is_stmt 0 discriminator 2 view .LVU347
 1275 0020 D063     		str	r0, [r2, #60]
1520:Core/Src/main.c **** 
 1276              		.loc 1 1520 4 is_stmt 1 discriminator 2 view .LVU348
1520:Core/Src/main.c **** 
 1277              		.loc 1 1520 15 is_stmt 0 discriminator 2 view .LVU349
 1278 0022 1364     		str	r3, [r2, #64]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 72


1522:Core/Src/main.c **** 
 1279              		.loc 1 1522 4 is_stmt 1 discriminator 2 view .LVU350
 1280 0024 0120     		movs	r0, #1
 1281 0026 FFF7FEFF 		bl	HAL_Delay
 1282              	.LVL67:
1509:Core/Src/main.c **** 
 1283              		.loc 1 1509 65 discriminator 2 view .LVU351
1509:Core/Src/main.c **** 
 1284              		.loc 1 1509 77 is_stmt 0 discriminator 2 view .LVU352
 1285 002a 0234     		adds	r4, r4, #2
 1286              	.LVL68:
1509:Core/Src/main.c **** 
 1287              		.loc 1 1509 77 discriminator 2 view .LVU353
 1288 002c A4B2     		uxth	r4, r4
 1289              	.LVL69:
1509:Core/Src/main.c **** 
 1290              		.loc 1 1509 77 discriminator 2 view .LVU354
 1291 002e EDE7     		b	.L79
 1292              	.LVL70:
 1293              	.L80:
1509:Core/Src/main.c **** 
 1294              		.loc 1 1509 77 discriminator 2 view .LVU355
 1295              	.LBE25:
1525:Core/Src/main.c **** MotorStop();
 1296              		.loc 1 1525 1 is_stmt 1 view .LVU356
 1297 0030 4FF4FA60 		mov	r0, #2000
 1298 0034 FFF7FEFF 		bl	HAL_Delay
 1299              	.LVL71:
1526:Core/Src/main.c **** }
 1300              		.loc 1 1526 1 view .LVU357
 1301 0038 FFF7FEFF 		bl	MotorStop
 1302              	.LVL72:
1527:Core/Src/main.c **** 
 1303              		.loc 1 1527 1 is_stmt 0 view .LVU358
 1304 003c 38BD     		pop	{r3, r4, r5, pc}
 1305              	.L84:
 1306 003e 00BF     		.align	2
 1307              	.L83:
 1308 0040 00000000 		.word	.LANCHOR11
 1309 0044 00080040 		.word	1073743872
 1310              		.cfi_endproc
 1311              	.LFE306:
 1313              		.section	.text.Init6050,"ax",%progbits
 1314              		.align	1
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	Init6050:
 1321              	.LFB284:
 554:Core/Src/main.c **** 
 1322              		.loc 1 554 17 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 8
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1327              	.LCFI16:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 73


 1328              		.cfi_def_cfa_offset 24
 1329              		.cfi_offset 4, -24
 1330              		.cfi_offset 5, -20
 1331              		.cfi_offset 6, -16
 1332              		.cfi_offset 7, -12
 1333              		.cfi_offset 8, -8
 1334              		.cfi_offset 14, -4
 1335 0004 86B0     		sub	sp, sp, #24
 1336              	.LCFI17:
 1337              		.cfi_def_cfa_offset 48
 556:Core/Src/main.c **** 	uint8_t Data;
 1338              		.loc 1 556 2 view .LVU360
 557:Core/Src/main.c **** 
 1339              		.loc 1 557 2 view .LVU361
 559:Core/Src/main.c **** 	HAL_Delay(20);
 1340              		.loc 1 559 2 view .LVU362
 1341 0006 214D     		ldr	r5, .L87
 1342 0008 3226     		movs	r6, #50
 1343 000a 0296     		str	r6, [sp, #8]
 1344 000c 0124     		movs	r4, #1
 1345 000e 0194     		str	r4, [sp, #4]
 1346 0010 0DF11703 		add	r3, sp, #23
 1347 0014 0093     		str	r3, [sp]
 1348 0016 2346     		mov	r3, r4
 1349 0018 7522     		movs	r2, #117
 1350 001a D021     		movs	r1, #208
 1351 001c 2846     		mov	r0, r5
 1352 001e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1353              	.LVL73:
 560:Core/Src/main.c **** 
 1354              		.loc 1 560 2 view .LVU363
 1355 0022 1420     		movs	r0, #20
 1356 0024 FFF7FEFF 		bl	HAL_Delay
 1357              	.LVL74:
 562:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, PWR_MGMT_1_REG, 1,&Data, 1, 50);
 1358              		.loc 1 562 2 view .LVU364
 562:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, PWR_MGMT_1_REG, 1,&Data, 1, 50);
 1359              		.loc 1 562 7 is_stmt 0 view .LVU365
 1360 0028 4FF00008 		mov	r8, #0
 1361 002c 8DF81680 		strb	r8, [sp, #22]
 563:Core/Src/main.c **** 	HAL_Delay(20);
 1362              		.loc 1 563 2 is_stmt 1 view .LVU366
 1363 0030 0296     		str	r6, [sp, #8]
 1364 0032 0194     		str	r4, [sp, #4]
 1365 0034 0DF11607 		add	r7, sp, #22
 1366 0038 0097     		str	r7, [sp]
 1367 003a 2346     		mov	r3, r4
 1368 003c 6B22     		movs	r2, #107
 1369 003e D021     		movs	r1, #208
 1370 0040 2846     		mov	r0, r5
 1371 0042 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1372              	.LVL75:
 564:Core/Src/main.c **** 
 1373              		.loc 1 564 2 view .LVU367
 1374 0046 1420     		movs	r0, #20
 1375 0048 FFF7FEFF 		bl	HAL_Delay
 1376              	.LVL76:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 74


 566:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 50);
 1377              		.loc 1 566 2 view .LVU368
 566:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 50);
 1378              		.loc 1 566 7 is_stmt 0 view .LVU369
 1379 004c 0723     		movs	r3, #7
 1380 004e 8DF81630 		strb	r3, [sp, #22]
 567:Core/Src/main.c **** 	HAL_Delay(20);
 1381              		.loc 1 567 2 is_stmt 1 view .LVU370
 1382 0052 0296     		str	r6, [sp, #8]
 1383 0054 0194     		str	r4, [sp, #4]
 1384 0056 0097     		str	r7, [sp]
 1385 0058 2346     		mov	r3, r4
 1386 005a 1922     		movs	r2, #25
 1387 005c D021     		movs	r1, #208
 1388 005e 2846     		mov	r0, r5
 1389 0060 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1390              	.LVL77:
 568:Core/Src/main.c **** 
 1391              		.loc 1 568 2 view .LVU371
 1392 0064 1420     		movs	r0, #20
 1393 0066 FFF7FEFF 		bl	HAL_Delay
 1394              	.LVL78:
 570:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 50);
 1395              		.loc 1 570 2 view .LVU372
 570:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c2, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 50);
 1396              		.loc 1 570 7 is_stmt 0 view .LVU373
 1397 006a 8DF81680 		strb	r8, [sp, #22]
 571:Core/Src/main.c **** 	HAL_Delay(20);
 1398              		.loc 1 571 2 is_stmt 1 view .LVU374
 1399 006e 0296     		str	r6, [sp, #8]
 1400 0070 0194     		str	r4, [sp, #4]
 1401 0072 0097     		str	r7, [sp]
 1402 0074 2346     		mov	r3, r4
 1403 0076 1B22     		movs	r2, #27
 1404 0078 D021     		movs	r1, #208
 1405 007a 2846     		mov	r0, r5
 1406 007c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1407              	.LVL79:
 572:Core/Src/main.c **** 
 1408              		.loc 1 572 2 view .LVU375
 1409 0080 1420     		movs	r0, #20
 1410 0082 FFF7FEFF 		bl	HAL_Delay
 1411              	.LVL80:
 574:Core/Src/main.c **** 
 1412              		.loc 1 574 1 is_stmt 0 view .LVU376
 1413 0086 06B0     		add	sp, sp, #24
 1414              	.LCFI18:
 1415              		.cfi_def_cfa_offset 24
 1416              		@ sp needed
 1417 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1418              	.L88:
 1419              		.align	2
 1420              	.L87:
 1421 008c 00000000 		.word	hi2c2
 1422              		.cfi_endproc
 1423              	.LFE284:
 1425              		.section	.text.Serial_RPi,"ax",%progbits
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 75


 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv4-sp-d16
 1432              	Serial_RPi:
 1433              	.LVL81:
 1434              	.LFB297:
1223:Core/Src/main.c **** 
 1435              		.loc 1 1223 28 is_stmt 1 view -0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
1223:Core/Src/main.c **** 
 1439              		.loc 1 1223 28 is_stmt 0 view .LVU378
 1440 0000 10B5     		push	{r4, lr}
 1441              	.LCFI19:
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 4, -8
 1444              		.cfi_offset 14, -4
 1445 0002 0446     		mov	r4, r0
1227:Core/Src/main.c **** }
 1446              		.loc 1 1227 2 is_stmt 1 view .LVU379
1227:Core/Src/main.c **** }
 1447              		.loc 1 1227 45 is_stmt 0 view .LVU380
 1448 0004 FFF7FEFF 		bl	strlen
 1449              	.LVL82:
1227:Core/Src/main.c **** }
 1450              		.loc 1 1227 2 view .LVU381
 1451 0008 6423     		movs	r3, #100
 1452 000a 82B2     		uxth	r2, r0
 1453 000c 2146     		mov	r1, r4
 1454 000e 0248     		ldr	r0, .L91
 1455 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1456              	.LVL83:
1228:Core/Src/main.c **** uint8_t CheckSecurity(void) {
 1457              		.loc 1 1228 1 view .LVU382
 1458 0014 10BD     		pop	{r4, pc}
 1459              	.LVL84:
 1460              	.L92:
1228:Core/Src/main.c **** uint8_t CheckSecurity(void) {
 1461              		.loc 1 1228 1 view .LVU383
 1462 0016 00BF     		.align	2
 1463              	.L91:
 1464 0018 00000000 		.word	huart2
 1465              		.cfi_endproc
 1466              	.LFE297:
 1468              		.section	.text.Serial_Console,"ax",%progbits
 1469              		.align	1
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu fpv4-sp-d16
 1475              	Serial_Console:
 1476              	.LVL85:
 1477              	.LFB296:
1217:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 76


 1478              		.loc 1 1217 32 is_stmt 1 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
1217:Core/Src/main.c **** 
 1482              		.loc 1 1217 32 is_stmt 0 view .LVU385
 1483 0000 10B5     		push	{r4, lr}
 1484              	.LCFI20:
 1485              		.cfi_def_cfa_offset 8
 1486              		.cfi_offset 4, -8
 1487              		.cfi_offset 14, -4
 1488 0002 0446     		mov	r4, r0
1221:Core/Src/main.c **** }
 1489              		.loc 1 1221 2 is_stmt 1 view .LVU386
1221:Core/Src/main.c **** }
 1490              		.loc 1 1221 45 is_stmt 0 view .LVU387
 1491 0004 FFF7FEFF 		bl	strlen
 1492              	.LVL86:
1221:Core/Src/main.c **** }
 1493              		.loc 1 1221 2 view .LVU388
 1494 0008 6423     		movs	r3, #100
 1495 000a 82B2     		uxth	r2, r0
 1496 000c 2146     		mov	r1, r4
 1497 000e 0248     		ldr	r0, .L95
 1498 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1499              	.LVL87:
1222:Core/Src/main.c **** void Serial_RPi(char *msg) {
 1500              		.loc 1 1222 1 view .LVU389
 1501 0014 10BD     		pop	{r4, pc}
 1502              	.LVL88:
 1503              	.L96:
1222:Core/Src/main.c **** void Serial_RPi(char *msg) {
 1504              		.loc 1 1222 1 view .LVU390
 1505 0016 00BF     		.align	2
 1506              	.L95:
 1507 0018 00000000 		.word	huart1
 1508              		.cfi_endproc
 1509              	.LFE296:
 1511              		.section	.text.FIR_LEFT,"ax",%progbits
 1512              		.align	1
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu fpv4-sp-d16
 1518              	FIR_LEFT:
 1519              	.LFB278:
 427:Core/Src/main.c **** 	  uint32_t i;
 1520              		.loc 1 427 21 is_stmt 1 view -0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524 0000 10B5     		push	{r4, lr}
 1525              	.LCFI21:
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 4, -8
 1528              		.cfi_offset 14, -4
 428:Core/Src/main.c **** 	  uint32_t blockSize = BLOCK_SIZE;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 77


 1529              		.loc 1 428 4 view .LVU392
 429:Core/Src/main.c **** 	  uint32_t numBlocks = LENGTH_SAMPLES/BLOCK_SIZE;
 1530              		.loc 1 429 4 view .LVU393
 1531              	.LVL89:
 430:Core/Src/main.c **** 	  float32_t  *inputF32, *outputF32;
 1532              		.loc 1 430 4 view .LVU394
 431:Core/Src/main.c **** 	  inputF32 = &BWF1[0];
 1533              		.loc 1 431 4 view .LVU395
 432:Core/Src/main.c **** 	  outputF32 = &Output[0];
 1534              		.loc 1 432 4 view .LVU396
 433:Core/Src/main.c **** 	  for(i=0; i < numBlocks; i++)
 1535              		.loc 1 433 4 view .LVU397
 434:Core/Src/main.c **** 	  {
 1536              		.loc 1 434 4 view .LVU398
 434:Core/Src/main.c **** 	  {
 1537              		.loc 1 434 9 is_stmt 0 view .LVU399
 1538 0002 0024     		movs	r4, #0
 434:Core/Src/main.c **** 	  {
 1539              		.loc 1 434 4 view .LVU400
 1540 0004 0AE0     		b	.L98
 1541              	.LVL90:
 1542              	.L99:
 436:Core/Src/main.c **** 	  }
 1543              		.loc 1 436 6 is_stmt 1 discriminator 3 view .LVU401
 1544 0006 2023     		movs	r3, #32
 1545 0008 0C4A     		ldr	r2, .L104
 1546 000a 02EBC412 		add	r2, r2, r4, lsl #7
 1547 000e 0C49     		ldr	r1, .L104+4
 1548 0010 01EBC411 		add	r1, r1, r4, lsl #7
 1549 0014 0B48     		ldr	r0, .L104+8
 1550 0016 FFF7FEFF 		bl	arm_fir_f32
 1551              	.LVL91:
 434:Core/Src/main.c **** 	  {
 1552              		.loc 1 434 28 discriminator 3 view .LVU402
 434:Core/Src/main.c **** 	  {
 1553              		.loc 1 434 29 is_stmt 0 discriminator 3 view .LVU403
 1554 001a 0134     		adds	r4, r4, #1
 1555              	.LVL92:
 1556              	.L98:
 434:Core/Src/main.c **** 	  {
 1557              		.loc 1 434 13 is_stmt 1 discriminator 1 view .LVU404
 434:Core/Src/main.c **** 	  {
 1558              		.loc 1 434 4 is_stmt 0 discriminator 1 view .LVU405
 1559 001c 072C     		cmp	r4, #7
 1560 001e F2D9     		bls	.L99
 1561              	.LBB26:
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1562              		.loc 1 438 13 view .LVU406
 1563 0020 0023     		movs	r3, #0
 1564              	.L100:
 1565              	.LVL93:
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1566              		.loc 1 438 20 is_stmt 1 discriminator 1 view .LVU407
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1567              		.loc 1 438 4 is_stmt 0 discriminator 1 view .LVU408
 1568 0022 FF2B     		cmp	r3, #255
 1569 0024 09DC     		bgt	.L103
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 78


 439:Core/Src/main.c **** 	  }
 1570              		.loc 1 439 5 is_stmt 1 discriminator 3 view .LVU409
 439:Core/Src/main.c **** 	  }
 1571              		.loc 1 439 31 is_stmt 0 discriminator 3 view .LVU410
 1572 0026 054A     		ldr	r2, .L104
 1573 0028 02EB8302 		add	r2, r2, r3, lsl #2
 439:Core/Src/main.c **** 	  }
 1574              		.loc 1 439 15 discriminator 3 view .LVU411
 1575 002c 1168     		ldr	r1, [r2]	@ float
 439:Core/Src/main.c **** 	  }
 1576              		.loc 1 439 13 discriminator 3 view .LVU412
 1577 002e 044A     		ldr	r2, .L104+4
 1578 0030 02EB8302 		add	r2, r2, r3, lsl #2
 1579 0034 1160     		str	r1, [r2]	@ float
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1580              		.loc 1 438 29 is_stmt 1 discriminator 3 view .LVU413
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1581              		.loc 1 438 30 is_stmt 0 discriminator 3 view .LVU414
 1582 0036 0133     		adds	r3, r3, #1
 1583              	.LVL94:
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1584              		.loc 1 438 30 discriminator 3 view .LVU415
 1585 0038 F3E7     		b	.L100
 1586              	.L103:
 438:Core/Src/main.c **** 		  BWF1[x] = (float)outputF32[x];
 1587              		.loc 1 438 30 discriminator 3 view .LVU416
 1588              	.LBE26:
 441:Core/Src/main.c **** void FIR_RIGHT(void) {
 1589              		.loc 1 441 1 view .LVU417
 1590 003a 10BD     		pop	{r4, pc}
 1591              	.LVL95:
 1592              	.L105:
 441:Core/Src/main.c **** void FIR_RIGHT(void) {
 1593              		.loc 1 441 1 view .LVU418
 1594              		.align	2
 1595              	.L104:
 1596 003c 00000000 		.word	.LANCHOR14
 1597 0040 00000000 		.word	BWF1
 1598 0044 00000000 		.word	S
 1599              		.cfi_endproc
 1600              	.LFE278:
 1602              		.section	.text.FIR_RIGHT,"ax",%progbits
 1603              		.align	1
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu fpv4-sp-d16
 1609              	FIR_RIGHT:
 1610              	.LFB279:
 442:Core/Src/main.c **** 	  uint32_t i;
 1611              		.loc 1 442 22 is_stmt 1 view -0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615 0000 10B5     		push	{r4, lr}
 1616              	.LCFI22:
 1617              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 79


 1618              		.cfi_offset 4, -8
 1619              		.cfi_offset 14, -4
 443:Core/Src/main.c **** 	  uint32_t blockSize = BLOCK_SIZE;
 1620              		.loc 1 443 4 view .LVU420
 444:Core/Src/main.c **** 	  uint32_t numBlocks = LENGTH_SAMPLES/BLOCK_SIZE;
 1621              		.loc 1 444 4 view .LVU421
 1622              	.LVL96:
 445:Core/Src/main.c **** 	  float32_t  *inputF32, *outputF32;
 1623              		.loc 1 445 4 view .LVU422
 446:Core/Src/main.c **** 	  inputF32 = &BWF2[0];
 1624              		.loc 1 446 4 view .LVU423
 447:Core/Src/main.c **** 	  outputF32 = &Output[0];
 1625              		.loc 1 447 4 view .LVU424
 448:Core/Src/main.c **** 	  for(i=0; i < numBlocks; i++)
 1626              		.loc 1 448 4 view .LVU425
 449:Core/Src/main.c **** 	  {
 1627              		.loc 1 449 4 view .LVU426
 449:Core/Src/main.c **** 	  {
 1628              		.loc 1 449 9 is_stmt 0 view .LVU427
 1629 0002 0024     		movs	r4, #0
 449:Core/Src/main.c **** 	  {
 1630              		.loc 1 449 4 view .LVU428
 1631 0004 0AE0     		b	.L107
 1632              	.LVL97:
 1633              	.L108:
 451:Core/Src/main.c **** 	  }
 1634              		.loc 1 451 6 is_stmt 1 discriminator 3 view .LVU429
 1635 0006 2023     		movs	r3, #32
 1636 0008 0C4A     		ldr	r2, .L113
 1637 000a 02EBC412 		add	r2, r2, r4, lsl #7
 1638 000e 0C49     		ldr	r1, .L113+4
 1639 0010 01EBC411 		add	r1, r1, r4, lsl #7
 1640 0014 0B48     		ldr	r0, .L113+8
 1641 0016 FFF7FEFF 		bl	arm_fir_f32
 1642              	.LVL98:
 449:Core/Src/main.c **** 	  {
 1643              		.loc 1 449 28 discriminator 3 view .LVU430
 449:Core/Src/main.c **** 	  {
 1644              		.loc 1 449 29 is_stmt 0 discriminator 3 view .LVU431
 1645 001a 0134     		adds	r4, r4, #1
 1646              	.LVL99:
 1647              	.L107:
 449:Core/Src/main.c **** 	  {
 1648              		.loc 1 449 13 is_stmt 1 discriminator 1 view .LVU432
 449:Core/Src/main.c **** 	  {
 1649              		.loc 1 449 4 is_stmt 0 discriminator 1 view .LVU433
 1650 001c 072C     		cmp	r4, #7
 1651 001e F2D9     		bls	.L108
 1652              	.LBB27:
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1653              		.loc 1 453 13 view .LVU434
 1654 0020 0023     		movs	r3, #0
 1655              	.L109:
 1656              	.LVL100:
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1657              		.loc 1 453 20 is_stmt 1 discriminator 1 view .LVU435
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 80


 1658              		.loc 1 453 4 is_stmt 0 discriminator 1 view .LVU436
 1659 0022 FF2B     		cmp	r3, #255
 1660 0024 09DC     		bgt	.L112
 454:Core/Src/main.c **** 	  }
 1661              		.loc 1 454 5 is_stmt 1 discriminator 3 view .LVU437
 454:Core/Src/main.c **** 	  }
 1662              		.loc 1 454 31 is_stmt 0 discriminator 3 view .LVU438
 1663 0026 054A     		ldr	r2, .L113
 1664 0028 02EB8302 		add	r2, r2, r3, lsl #2
 454:Core/Src/main.c **** 	  }
 1665              		.loc 1 454 15 discriminator 3 view .LVU439
 1666 002c 1168     		ldr	r1, [r2]	@ float
 454:Core/Src/main.c **** 	  }
 1667              		.loc 1 454 13 discriminator 3 view .LVU440
 1668 002e 044A     		ldr	r2, .L113+4
 1669 0030 02EB8302 		add	r2, r2, r3, lsl #2
 1670 0034 1160     		str	r1, [r2]	@ float
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1671              		.loc 1 453 29 is_stmt 1 discriminator 3 view .LVU441
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1672              		.loc 1 453 30 is_stmt 0 discriminator 3 view .LVU442
 1673 0036 0133     		adds	r3, r3, #1
 1674              	.LVL101:
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1675              		.loc 1 453 30 discriminator 3 view .LVU443
 1676 0038 F3E7     		b	.L109
 1677              	.L112:
 453:Core/Src/main.c **** 		  BWF2[x] = (float)outputF32[x];
 1678              		.loc 1 453 30 discriminator 3 view .LVU444
 1679              	.LBE27:
 456:Core/Src/main.c **** 
 1680              		.loc 1 456 1 view .LVU445
 1681 003a 10BD     		pop	{r4, pc}
 1682              	.LVL102:
 1683              	.L114:
 456:Core/Src/main.c **** 
 1684              		.loc 1 456 1 view .LVU446
 1685              		.align	2
 1686              	.L113:
 1687 003c 00000000 		.word	.LANCHOR14
 1688 0040 00000000 		.word	BWF2
 1689 0044 00000000 		.word	S
 1690              		.cfi_endproc
 1691              	.LFE279:
 1693              		.section	.text.CheckBWF,"ax",%progbits
 1694              		.align	1
 1695              		.syntax unified
 1696              		.thumb
 1697              		.thumb_func
 1698              		.fpu fpv4-sp-d16
 1700              	CheckBWF:
 1701              	.LFB302:
1308:Core/Src/main.c **** 
 1702              		.loc 1 1308 17 is_stmt 1 view -0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 81


 1706 0000 38B5     		push	{r3, r4, r5, lr}
 1707              	.LCFI23:
 1708              		.cfi_def_cfa_offset 16
 1709              		.cfi_offset 3, -16
 1710              		.cfi_offset 4, -12
 1711              		.cfi_offset 5, -8
 1712              		.cfi_offset 14, -4
 1713 0002 2DED068B 		vpush.64	{d8, d9, d10}
 1714              	.LCFI24:
 1715              		.cfi_def_cfa_offset 40
 1716              		.cfi_offset 80, -40
 1717              		.cfi_offset 81, -36
 1718              		.cfi_offset 82, -32
 1719              		.cfi_offset 83, -28
 1720              		.cfi_offset 84, -24
 1721              		.cfi_offset 85, -20
1320:Core/Src/main.c **** 	float BWF1_Received_Signal = 0;
 1722              		.loc 1 1320 2 view .LVU448
 1723              	.LVL103:
1321:Core/Src/main.c **** 	float BWF2_Mixed_Signal = 0;
 1724              		.loc 1 1321 2 view .LVU449
1322:Core/Src/main.c **** 	float BWF2_Received_Signal = 0;
 1725              		.loc 1 1322 2 view .LVU450
1323:Core/Src/main.c **** 	uint16_t myID = 0;
 1726              		.loc 1 1323 2 view .LVU451
1324:Core/Src/main.c **** 	uint8_t BWF1_reply, BWF2_reply = 0;
 1727              		.loc 1 1324 2 view .LVU452
1325:Core/Src/main.c **** 	float Match_Signal = 0;
 1728              		.loc 1 1325 2 view .LVU453
1326:Core/Src/main.c **** 	float Result_Signal = 0;
 1729              		.loc 1 1326 2 view .LVU454
1327:Core/Src/main.c **** 	float BWF1_Verdict_Signal = 0.0;
 1730              		.loc 1 1327 2 view .LVU455
1328:Core/Src/main.c **** 	float BWF2_Verdict_Signal = 0.0;
 1731              		.loc 1 1328 2 view .LVU456
1329:Core/Src/main.c **** 	int count = 0;
 1732              		.loc 1 1329 2 view .LVU457
1330:Core/Src/main.c **** 
 1733              		.loc 1 1330 2 view .LVU458
1332:Core/Src/main.c **** 		if (x%2) {
 1734              		.loc 1 1332 2 view .LVU459
 1735              	.LBB28:
1332:Core/Src/main.c **** 		if (x%2) {
 1736              		.loc 1 1332 7 view .LVU460
1332:Core/Src/main.c **** 		if (x%2) {
 1737              		.loc 1 1332 11 is_stmt 0 view .LVU461
 1738 0006 0023     		movs	r3, #0
 1739              	.LBE28:
1330:Core/Src/main.c **** 
 1740              		.loc 1 1330 6 view .LVU462
 1741 0008 1946     		mov	r1, r3
 1742              	.LBB29:
1332:Core/Src/main.c **** 		if (x%2) {
 1743              		.loc 1 1332 2 view .LVU463
 1744 000a 0EE0     		b	.L116
 1745              	.LVL104:
 1746              	.L117:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 82


1338:Core/Src/main.c **** 		}
 1747              		.loc 1 1338 4 is_stmt 1 view .LVU464
1338:Core/Src/main.c **** 		}
 1748              		.loc 1 1338 28 is_stmt 0 view .LVU465
 1749 000c 864A     		ldr	r2, .L155
 1750 000e 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
1338:Core/Src/main.c **** 		}
 1751              		.loc 1 1338 32 view .LVU466
 1752 0012 A2F2F342 		subw	r2, r2, #1267
1338:Core/Src/main.c **** 		}
 1753              		.loc 1 1338 16 view .LVU467
 1754 0016 8548     		ldr	r0, .L155+4
 1755 0018 00EB8100 		add	r0, r0, r1, lsl #2
 1756 001c 07EE902A 		vmov	s15, r2	@ int
 1757 0020 F8EEE77A 		vcvt.f32.s32	s15, s15
 1758 0024 C0ED007A 		vstr.32	s15, [r0]
 1759              	.L118:
1332:Core/Src/main.c **** 		if (x%2) {
 1760              		.loc 1 1332 38 is_stmt 1 discriminator 2 view .LVU468
1332:Core/Src/main.c **** 		if (x%2) {
 1761              		.loc 1 1332 39 is_stmt 0 discriminator 2 view .LVU469
 1762 0028 0133     		adds	r3, r3, #1
 1763              	.LVL105:
 1764              	.L116:
1332:Core/Src/main.c **** 		if (x%2) {
 1765              		.loc 1 1332 18 is_stmt 1 discriminator 1 view .LVU470
1332:Core/Src/main.c **** 		if (x%2) {
 1766              		.loc 1 1332 2 is_stmt 0 discriminator 1 view .LVU471
 1767 002a B3F5007F 		cmp	r3, #512
 1768 002e 12DA     		bge	.L148
1333:Core/Src/main.c **** 			BWF2[count] = ADC_BUFFER[x] - 1267;		// Normalize the ADC signal
 1769              		.loc 1 1333 3 is_stmt 1 view .LVU472
1333:Core/Src/main.c **** 			BWF2[count] = ADC_BUFFER[x] - 1267;		// Normalize the ADC signal
 1770              		.loc 1 1333 6 is_stmt 0 view .LVU473
 1771 0030 13F0010F 		tst	r3, #1
 1772 0034 EAD0     		beq	.L117
1334:Core/Src/main.c **** 			count++;
 1773              		.loc 1 1334 4 is_stmt 1 view .LVU474
1334:Core/Src/main.c **** 			count++;
 1774              		.loc 1 1334 28 is_stmt 0 view .LVU475
 1775 0036 7C4A     		ldr	r2, .L155
 1776 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
1334:Core/Src/main.c **** 			count++;
 1777              		.loc 1 1334 32 view .LVU476
 1778 003c A2F2F342 		subw	r2, r2, #1267
1334:Core/Src/main.c **** 			count++;
 1779              		.loc 1 1334 16 view .LVU477
 1780 0040 7B48     		ldr	r0, .L155+8
 1781 0042 00EB8100 		add	r0, r0, r1, lsl #2
 1782 0046 07EE902A 		vmov	s15, r2	@ int
 1783 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 1784 004e C0ED007A 		vstr.32	s15, [r0]
1335:Core/Src/main.c **** 		}
 1785              		.loc 1 1335 4 is_stmt 1 view .LVU478
1335:Core/Src/main.c **** 		}
 1786              		.loc 1 1335 9 is_stmt 0 view .LVU479
 1787 0052 0131     		adds	r1, r1, #1
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 83


 1788              	.LVL106:
1335:Core/Src/main.c **** 		}
 1789              		.loc 1 1335 9 view .LVU480
 1790 0054 E8E7     		b	.L118
 1791              	.L148:
1335:Core/Src/main.c **** 		}
 1792              		.loc 1 1335 9 view .LVU481
 1793              	.LBE29:
1342:Core/Src/main.c **** 	FIR_RIGHT();	// Run FIR on right BWF	(BWF2)
 1794              		.loc 1 1342 2 is_stmt 1 view .LVU482
 1795 0056 FFF7FEFF 		bl	FIR_LEFT
 1796              	.LVL107:
1343:Core/Src/main.c **** 
 1797              		.loc 1 1343 2 view .LVU483
 1798 005a FFF7FEFF 		bl	FIR_RIGHT
 1799              	.LVL108:
1345:Core/Src/main.c **** 		for (uint8_t x = 0; x < SIGNATURE_LEN; x++) {
 1800              		.loc 1 1345 2 view .LVU484
1345:Core/Src/main.c **** 		for (uint8_t x = 0; x < SIGNATURE_LEN; x++) {
 1801              		.loc 1 1345 23 is_stmt 0 view .LVU485
 1802 005e 754B     		ldr	r3, .L155+12
 1803 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1345:Core/Src/main.c **** 		for (uint8_t x = 0; x < SIGNATURE_LEN; x++) {
 1804              		.loc 1 1345 5 view .LVU486
 1805 0062 012B     		cmp	r3, #1
 1806 0064 12D0     		beq	.L149
 1807              	.L121:
 1808              	.LBB30:
1421:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 1809              		.loc 1 1421 17 discriminator 1 view .LVU487
 1810 0066 0024     		movs	r4, #0
 1811 0068 2546     		mov	r5, r4
 1812 006a 40E0     		b	.L123
 1813              	.LVL109:
 1814              	.L122:
1421:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 1815              		.loc 1 1421 17 discriminator 1 view .LVU488
 1816              	.LBE30:
 1817              	.LBB33:
1347:Core/Src/main.c **** 		}
 1818              		.loc 1 1347 4 is_stmt 1 discriminator 3 view .LVU489
1347:Core/Src/main.c **** 		}
 1819              		.loc 1 1347 28 is_stmt 0 discriminator 3 view .LVU490
 1820 006c 6F4A     		ldr	r2, .L155+4
 1821 006e 02EB8302 		add	r2, r2, r3, lsl #2
 1822 0072 1168     		ldr	r1, [r2]	@ float
1347:Core/Src/main.c **** 		}
 1823              		.loc 1 1347 22 discriminator 3 view .LVU491
 1824 0074 704A     		ldr	r2, .L155+16
 1825 0076 02EB8302 		add	r2, r2, r3, lsl #2
 1826 007a 1160     		str	r1, [r2]	@ float
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1827              		.loc 1 1346 42 is_stmt 1 discriminator 3 view .LVU492
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1828              		.loc 1 1346 43 is_stmt 0 discriminator 3 view .LVU493
 1829 007c 0133     		adds	r3, r3, #1
 1830              	.LVL110:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 84


1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1831              		.loc 1 1346 43 discriminator 3 view .LVU494
 1832 007e DBB2     		uxtb	r3, r3
 1833              	.LVL111:
 1834              	.L120:
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1835              		.loc 1 1346 23 is_stmt 1 discriminator 1 view .LVU495
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1836              		.loc 1 1346 3 is_stmt 0 discriminator 1 view .LVU496
 1837 0080 5F2B     		cmp	r3, #95
 1838 0082 F3D9     		bls	.L122
 1839              	.LBE33:
1349:Core/Src/main.c **** 	}
 1840              		.loc 1 1349 3 is_stmt 1 view .LVU497
1349:Core/Src/main.c **** 	}
 1841              		.loc 1 1349 20 is_stmt 0 view .LVU498
 1842 0084 6B4B     		ldr	r3, .L155+12
 1843              	.LVL112:
1349:Core/Src/main.c **** 	}
 1844              		.loc 1 1349 20 view .LVU499
 1845 0086 0022     		movs	r2, #0
 1846 0088 1A70     		strb	r2, [r3]
 1847 008a ECE7     		b	.L121
 1848              	.L149:
 1849              	.LBB34:
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1850              		.loc 1 1346 16 view .LVU500
 1851 008c 0023     		movs	r3, #0
 1852 008e F7E7     		b	.L120
 1853              	.LVL113:
 1854              	.L154:
1346:Core/Src/main.c **** 			validSignature[x] = BWF1[x];
 1855              		.loc 1 1346 16 view .LVU501
 1856              	.LBE34:
 1857              	.LBB35:
1376:Core/Src/main.c **** 	BWF1_Verdict_Signal = (BWF1_Mixed_Signal / Result_Signal);
 1858              		.loc 1 1376 2 is_stmt 1 view .LVU502
1376:Core/Src/main.c **** 	BWF1_Verdict_Signal = (BWF1_Mixed_Signal / Result_Signal);
 1859              		.loc 1 1376 18 is_stmt 0 view .LVU503
 1860 0090 20EE080A 		vmul.f32	s0, s0, s16
 1861              	.LVL114:
1376:Core/Src/main.c **** 	BWF1_Verdict_Signal = (BWF1_Mixed_Signal / Result_Signal);
 1862              		.loc 1 1376 18 view .LVU504
 1863 0094 FFF7FEFF 		bl	sqrtf
 1864              	.LVL115:
1377:Core/Src/main.c **** 
 1865              		.loc 1 1377 2 is_stmt 1 view .LVU505
1377:Core/Src/main.c **** 
 1866              		.loc 1 1377 22 is_stmt 0 view .LVU506
 1867 0098 89EE80AA 		vdiv.f32	s20, s19, s0
 1868              	.LVL116:
1379:Core/Src/main.c **** 	BWF2_Verdict_Signal = (BWF2_Mixed_Signal / Result_Signal);
 1869              		.loc 1 1379 2 is_stmt 1 view .LVU507
1379:Core/Src/main.c **** 	BWF2_Verdict_Signal = (BWF2_Mixed_Signal / Result_Signal);
 1870              		.loc 1 1379 18 is_stmt 0 view .LVU508
 1871 009c 29EE080A 		vmul.f32	s0, s18, s16
 1872              	.LVL117:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 85


1379:Core/Src/main.c **** 	BWF2_Verdict_Signal = (BWF2_Mixed_Signal / Result_Signal);
 1873              		.loc 1 1379 18 view .LVU509
 1874 00a0 FFF7FEFF 		bl	sqrtf
 1875              	.LVL118:
1380:Core/Src/main.c **** 
 1876              		.loc 1 1380 2 is_stmt 1 view .LVU510
1380:Core/Src/main.c **** 
 1877              		.loc 1 1380 22 is_stmt 0 view .LVU511
 1878 00a4 88EE808A 		vdiv.f32	s16, s17, s0
 1879              	.LVL119:
1382:Core/Src/main.c ****     	BWF1_Status = INSIDE;
 1880              		.loc 1 1382 5 is_stmt 1 view .LVU512
1382:Core/Src/main.c ****     	BWF1_Status = INSIDE;
 1881              		.loc 1 1382 29 is_stmt 0 view .LVU513
 1882 00a8 644B     		ldr	r3, .L155+20
 1883 00aa D3ED007A 		vldr.32	s15, [r3]
1382:Core/Src/main.c ****     	BWF1_Status = INSIDE;
 1884              		.loc 1 1382 8 view .LVU514
 1885 00ae F4EECA7A 		vcmpe.f32	s15, s20
 1886 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1887 00b6 58D9     		bls	.L150
1396:Core/Src/main.c ****     	BWF1_Status = OUTSIDE;
 1888              		.loc 1 1396 10 is_stmt 1 view .LVU515
1396:Core/Src/main.c ****     	BWF1_Status = OUTSIDE;
 1889              		.loc 1 1396 34 is_stmt 0 view .LVU516
 1890 00b8 614B     		ldr	r3, .L155+24
 1891 00ba D3ED007A 		vldr.32	s15, [r3]
1396:Core/Src/main.c ****     	BWF1_Status = OUTSIDE;
 1892              		.loc 1 1396 13 view .LVU517
 1893 00be F4EECA7A 		vcmpe.f32	s15, s20
 1894 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1895 00c6 6BDA     		bge	.L151
 1896              	.LVL120:
 1897              	.L130:
1405:Core/Src/main.c ****     	BWF2_Status = INSIDE;
 1898              		.loc 1 1405 5 is_stmt 1 view .LVU518
1405:Core/Src/main.c ****     	BWF2_Status = INSIDE;
 1899              		.loc 1 1405 29 is_stmt 0 view .LVU519
 1900 00c8 5C4B     		ldr	r3, .L155+20
 1901 00ca D3ED007A 		vldr.32	s15, [r3]
1405:Core/Src/main.c ****     	BWF2_Status = INSIDE;
 1902              		.loc 1 1405 8 view .LVU520
 1903 00ce F4EEC87A 		vcmpe.f32	s15, s16
 1904 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1905 00d6 75D9     		bls	.L152
1418:Core/Src/main.c ****     	BWF2_Status = OUTSIDE;
 1906              		.loc 1 1418 10 is_stmt 1 view .LVU521
1418:Core/Src/main.c ****     	BWF2_Status = OUTSIDE;
 1907              		.loc 1 1418 34 is_stmt 0 view .LVU522
 1908 00d8 594B     		ldr	r3, .L155+24
 1909 00da D3ED007A 		vldr.32	s15, [r3]
1418:Core/Src/main.c ****     	BWF2_Status = OUTSIDE;
 1910              		.loc 1 1418 13 view .LVU523
 1911 00de F4EEC87A 		vcmpe.f32	s15, s16
 1912 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1913 00e6 80F28980 		bge	.L153
 1914              	.LVL121:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 86


 1915              	.L136:
1352:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
 1916              		.loc 1 1352 35 is_stmt 1 discriminator 2 view .LVU524
1352:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
 1917              		.loc 1 1352 38 is_stmt 0 discriminator 2 view .LVU525
 1918 00ea 0134     		adds	r4, r4, #1
 1919              	.LVL122:
1352:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
 1920              		.loc 1 1352 38 discriminator 2 view .LVU526
 1921 00ec A4B2     		uxth	r4, r4
 1922              	.LVL123:
 1923              	.L123:
1352:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
 1924              		.loc 1 1352 25 is_stmt 1 discriminator 1 view .LVU527
1352:Core/Src/main.c ****         if (BWF1_reply == 1 && BWF2_reply == 1) {
 1925              		.loc 1 1352 2 is_stmt 0 discriminator 1 view .LVU528
 1926 00ee 5F2C     		cmp	r4, #95
 1927 00f0 00F29780 		bhi	.L115
1353:Core/Src/main.c ****         	break;
 1928              		.loc 1 1353 9 is_stmt 1 discriminator 1 view .LVU529
1353:Core/Src/main.c ****         	break;
 1929              		.loc 1 1353 29 is_stmt 0 discriminator 1 view .LVU530
 1930 00f4 002D     		cmp	r5, #0
 1931 00f6 40F09480 		bne	.L115
1356:Core/Src/main.c **** 		BWF1_Mixed_Signal = 0;
 1932              		.loc 1 1356 3 is_stmt 1 view .LVU531
 1933              	.LVL124:
1357:Core/Src/main.c **** 		BWF1_Received_Signal = 0;
 1934              		.loc 1 1357 3 view .LVU532
1358:Core/Src/main.c **** 		BWF2_Mixed_Signal = 0;
 1935              		.loc 1 1358 3 view .LVU533
1359:Core/Src/main.c **** 		BWF2_Received_Signal = 0;
 1936              		.loc 1 1359 3 view .LVU534
1360:Core/Src/main.c **** 		Match_Signal = 0;
 1937              		.loc 1 1360 3 view .LVU535
1361:Core/Src/main.c **** 
 1938              		.loc 1 1361 3 view .LVU536
1364:Core/Src/main.c **** 
 1939              		.loc 1 1364 3 view .LVU537
 1940              	.LBB31:
1364:Core/Src/main.c **** 
 1941              		.loc 1 1364 8 view .LVU538
1364:Core/Src/main.c **** 
 1942              		.loc 1 1364 12 is_stmt 0 view .LVU539
 1943 00fa 2046     		mov	r0, r4
 1944              	.LVL125:
1364:Core/Src/main.c **** 
 1945              		.loc 1 1364 12 view .LVU540
 1946 00fc 2346     		mov	r3, r4
 1947              	.LBE31:
1361:Core/Src/main.c **** 
 1948              		.loc 1 1361 16 view .LVU541
 1949 00fe 9FED518A 		vldr.32	s16, .L155+28
1356:Core/Src/main.c **** 		BWF1_Mixed_Signal = 0;
 1950              		.loc 1 1356 8 view .LVU542
 1951 0102 0022     		movs	r2, #0
1360:Core/Src/main.c **** 		Match_Signal = 0;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 87


 1952              		.loc 1 1360 24 view .LVU543
 1953 0104 B0EE489A 		vmov.f32	s18, s16
1359:Core/Src/main.c **** 		BWF2_Received_Signal = 0;
 1954              		.loc 1 1359 21 view .LVU544
 1955 0108 F0EE488A 		vmov.f32	s17, s16
1358:Core/Src/main.c **** 		BWF2_Mixed_Signal = 0;
 1956              		.loc 1 1358 24 view .LVU545
 1957 010c B0EE480A 		vmov.f32	s0, s16
1357:Core/Src/main.c **** 		BWF1_Received_Signal = 0;
 1958              		.loc 1 1357 21 view .LVU546
 1959 0110 F0EE489A 		vmov.f32	s19, s16
 1960              	.LVL126:
 1961              	.L125:
 1962              	.LBB32:
1364:Core/Src/main.c **** 
 1963              		.loc 1 1364 21 is_stmt 1 discriminator 1 view .LVU547
1364:Core/Src/main.c **** 
 1964              		.loc 1 1364 23 is_stmt 0 discriminator 1 view .LVU548
 1965 0114 00F15E01 		add	r1, r0, #94
1364:Core/Src/main.c **** 
 1966              		.loc 1 1364 3 discriminator 1 view .LVU549
 1967 0118 9942     		cmp	r1, r3
 1968 011a B9DB     		blt	.L154
1366:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
 1969              		.loc 1 1366 4 is_stmt 1 discriminator 3 view .LVU550
1366:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
 1970              		.loc 1 1366 30 is_stmt 0 discriminator 3 view .LVU551
 1971 011c 4349     		ldr	r1, .L155+4
 1972 011e 01EB8301 		add	r1, r1, r3, lsl #2
 1973 0122 91ED007A 		vldr.32	s14, [r1]
1366:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
 1974              		.loc 1 1366 50 discriminator 3 view .LVU552
 1975 0126 4449     		ldr	r1, .L155+16
 1976 0128 01EB8201 		add	r1, r1, r2, lsl #2
 1977 012c D1ED007A 		vldr.32	s15, [r1]
1366:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
 1978              		.loc 1 1366 34 discriminator 3 view .LVU553
 1979 0130 67EE276A 		vmul.f32	s13, s14, s15
1366:Core/Src/main.c **** 			BWF1_Received_Signal += BWF1[x] * BWF1[x];
 1980              		.loc 1 1366 22 discriminator 3 view .LVU554
 1981 0134 79EEA69A 		vadd.f32	s19, s19, s13
 1982              	.LVL127:
1367:Core/Src/main.c **** 
 1983              		.loc 1 1367 4 is_stmt 1 discriminator 3 view .LVU555
1367:Core/Src/main.c **** 
 1984              		.loc 1 1367 36 is_stmt 0 discriminator 3 view .LVU556
 1985 0138 27EE077A 		vmul.f32	s14, s14, s14
1367:Core/Src/main.c **** 
 1986              		.loc 1 1367 25 discriminator 3 view .LVU557
 1987 013c 30EE070A 		vadd.f32	s0, s0, s14
 1988              	.LVL128:
1369:Core/Src/main.c **** 			BWF2_Received_Signal += BWF2[x] * BWF2[x];
 1989              		.loc 1 1369 4 is_stmt 1 discriminator 3 view .LVU558
1369:Core/Src/main.c **** 			BWF2_Received_Signal += BWF2[x] * BWF2[x];
 1990              		.loc 1 1369 30 is_stmt 0 discriminator 3 view .LVU559
 1991 0140 3B49     		ldr	r1, .L155+8
 1992 0142 01EB8301 		add	r1, r1, r3, lsl #2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 88


 1993 0146 91ED007A 		vldr.32	s14, [r1]
1369:Core/Src/main.c **** 			BWF2_Received_Signal += BWF2[x] * BWF2[x];
 1994              		.loc 1 1369 34 discriminator 3 view .LVU560
 1995 014a 67EE876A 		vmul.f32	s13, s15, s14
1369:Core/Src/main.c **** 			BWF2_Received_Signal += BWF2[x] * BWF2[x];
 1996              		.loc 1 1369 22 discriminator 3 view .LVU561
 1997 014e 78EEA68A 		vadd.f32	s17, s17, s13
 1998              	.LVL129:
1370:Core/Src/main.c **** 
 1999              		.loc 1 1370 4 is_stmt 1 discriminator 3 view .LVU562
1370:Core/Src/main.c **** 
 2000              		.loc 1 1370 36 is_stmt 0 discriminator 3 view .LVU563
 2001 0152 27EE077A 		vmul.f32	s14, s14, s14
1370:Core/Src/main.c **** 
 2002              		.loc 1 1370 25 discriminator 3 view .LVU564
 2003 0156 39EE079A 		vadd.f32	s18, s18, s14
 2004              	.LVL130:
1372:Core/Src/main.c **** 			myID++;
 2005              		.loc 1 1372 4 is_stmt 1 discriminator 3 view .LVU565
1372:Core/Src/main.c **** 			myID++;
 2006              		.loc 1 1372 41 is_stmt 0 discriminator 3 view .LVU566
 2007 015a 67EEA77A 		vmul.f32	s15, s15, s15
1372:Core/Src/main.c **** 			myID++;
 2008              		.loc 1 1372 17 discriminator 3 view .LVU567
 2009 015e 38EE278A 		vadd.f32	s16, s16, s15
 2010              	.LVL131:
1373:Core/Src/main.c **** 		}
 2011              		.loc 1 1373 4 is_stmt 1 discriminator 3 view .LVU568
1373:Core/Src/main.c **** 		}
 2012              		.loc 1 1373 8 is_stmt 0 discriminator 3 view .LVU569
 2013 0162 0132     		adds	r2, r2, #1
 2014              	.LVL132:
1373:Core/Src/main.c **** 		}
 2015              		.loc 1 1373 8 discriminator 3 view .LVU570
 2016 0164 92B2     		uxth	r2, r2
 2017              	.LVL133:
1364:Core/Src/main.c **** 
 2018              		.loc 1 1364 50 is_stmt 1 discriminator 3 view .LVU571
1364:Core/Src/main.c **** 
 2019              		.loc 1 1364 51 is_stmt 0 discriminator 3 view .LVU572
 2020 0166 0133     		adds	r3, r3, #1
 2021              	.LVL134:
1364:Core/Src/main.c **** 
 2022              		.loc 1 1364 51 discriminator 3 view .LVU573
 2023 0168 D4E7     		b	.L125
 2024              	.LVL135:
 2025              	.L150:
1364:Core/Src/main.c **** 
 2026              		.loc 1 1364 51 discriminator 3 view .LVU574
 2027              	.LBE32:
1383:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2028              		.loc 1 1383 6 is_stmt 1 view .LVU575
1383:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2029              		.loc 1 1383 18 is_stmt 0 view .LVU576
 2030 016a 374B     		ldr	r3, .L155+32
 2031 016c 0122     		movs	r2, #1
 2032 016e 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 89


1384:Core/Src/main.c ****     	BWF1_reply = 1;
 2033              		.loc 1 1384 6 is_stmt 1 view .LVU577
1384:Core/Src/main.c ****     	BWF1_reply = 1;
 2034              		.loc 1 1384 23 is_stmt 0 view .LVU578
 2035 0170 FFF7FEFF 		bl	HAL_GetTick
 2036              	.LVL136:
1384:Core/Src/main.c ****     	BWF1_reply = 1;
 2037              		.loc 1 1384 21 view .LVU579
 2038 0174 354B     		ldr	r3, .L155+36
 2039 0176 1860     		str	r0, [r3]
1385:Core/Src/main.c ****     	if (Initial_Start == 0) {
 2040              		.loc 1 1385 6 is_stmt 1 view .LVU580
1386:Core/Src/main.c ****     		Start_Threshold++;
 2041              		.loc 1 1386 6 view .LVU581
1386:Core/Src/main.c ****     		Start_Threshold++;
 2042              		.loc 1 1386 24 is_stmt 0 view .LVU582
 2043 0178 354B     		ldr	r3, .L155+40
 2044 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1386:Core/Src/main.c ****     		Start_Threshold++;
 2045              		.loc 1 1386 9 view .LVU583
 2046 017c 5BB9     		cbnz	r3, .L129
1387:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
 2047              		.loc 1 1387 7 is_stmt 1 view .LVU584
1387:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
 2048              		.loc 1 1387 22 is_stmt 0 view .LVU585
 2049 017e 354A     		ldr	r2, .L155+44
 2050 0180 1388     		ldrh	r3, [r2]
 2051 0182 0133     		adds	r3, r3, #1
 2052 0184 9BB2     		uxth	r3, r3
 2053 0186 1380     		strh	r3, [r2]	@ movhi
1388:Core/Src/main.c ****     			Initial_Start = 1;
 2054              		.loc 1 1388 7 is_stmt 1 view .LVU586
1388:Core/Src/main.c ****     			Initial_Start = 1;
 2055              		.loc 1 1388 10 is_stmt 0 view .LVU587
 2056 0188 42F20F72 		movw	r2, #9999
 2057 018c 9342     		cmp	r3, r2
 2058 018e 02D9     		bls	.L129
1389:Core/Src/main.c ****     		}
 2059              		.loc 1 1389 8 is_stmt 1 view .LVU588
1389:Core/Src/main.c ****     		}
 2060              		.loc 1 1389 22 is_stmt 0 view .LVU589
 2061 0190 2F4B     		ldr	r3, .L155+40
 2062 0192 0122     		movs	r2, #1
 2063 0194 1A70     		strb	r2, [r3]
 2064              	.L129:
1392:Core/Src/main.c **** 
 2065              		.loc 1 1392 6 is_stmt 1 view .LVU590
1392:Core/Src/main.c **** 
 2066              		.loc 1 1392 17 is_stmt 0 view .LVU591
 2067 0196 304A     		ldr	r2, .L155+48
 2068 0198 1368     		ldr	r3, [r2]
 2069 019a 0133     		adds	r3, r3, #1
 2070 019c 1360     		str	r3, [r2]
 2071 019e 93E7     		b	.L130
 2072              	.LVL137:
 2073              	.L151:
1397:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 90


 2074              		.loc 1 1397 6 is_stmt 1 view .LVU592
1397:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2075              		.loc 1 1397 18 is_stmt 0 view .LVU593
 2076 01a0 294B     		ldr	r3, .L155+32
 2077 01a2 0222     		movs	r2, #2
 2078 01a4 1A70     		strb	r2, [r3]
1398:Core/Src/main.c ****     	BWF1_reply = 1;
 2079              		.loc 1 1398 6 is_stmt 1 view .LVU594
1398:Core/Src/main.c ****     	BWF1_reply = 1;
 2080              		.loc 1 1398 23 is_stmt 0 view .LVU595
 2081 01a6 FFF7FEFF 		bl	HAL_GetTick
 2082              	.LVL138:
1398:Core/Src/main.c ****     	BWF1_reply = 1;
 2083              		.loc 1 1398 21 view .LVU596
 2084 01aa 284B     		ldr	r3, .L155+36
 2085 01ac 1860     		str	r0, [r3]
1399:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 2086              		.loc 1 1399 6 is_stmt 1 view .LVU597
1400:Core/Src/main.c ****     	bwf1_outside++;
 2087              		.loc 1 1400 6 view .LVU598
1400:Core/Src/main.c ****     	bwf1_outside++;
 2088              		.loc 1 1400 24 is_stmt 0 view .LVU599
 2089 01ae 284B     		ldr	r3, .L155+40
 2090 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1400:Core/Src/main.c ****     	bwf1_outside++;
 2091              		.loc 1 1400 9 view .LVU600
 2092 01b2 13B9     		cbnz	r3, .L132
1400:Core/Src/main.c ****     	bwf1_outside++;
 2093              		.loc 1 1400 30 is_stmt 1 discriminator 1 view .LVU601
1400:Core/Src/main.c ****     	bwf1_outside++;
 2094              		.loc 1 1400 46 is_stmt 0 discriminator 1 view .LVU602
 2095 01b4 274B     		ldr	r3, .L155+44
 2096 01b6 0022     		movs	r2, #0
 2097 01b8 1A80     		strh	r2, [r3]	@ movhi
 2098              	.L132:
1401:Core/Src/main.c **** 
 2099              		.loc 1 1401 6 is_stmt 1 view .LVU603
1401:Core/Src/main.c **** 
 2100              		.loc 1 1401 18 is_stmt 0 view .LVU604
 2101 01ba 284A     		ldr	r2, .L155+52
 2102 01bc 1368     		ldr	r3, [r2]
 2103 01be 0133     		adds	r3, r3, #1
 2104 01c0 1360     		str	r3, [r2]
 2105 01c2 81E7     		b	.L130
 2106              	.L152:
1406:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2107              		.loc 1 1406 6 is_stmt 1 view .LVU605
1406:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2108              		.loc 1 1406 18 is_stmt 0 view .LVU606
 2109 01c4 264B     		ldr	r3, .L155+56
 2110 01c6 0122     		movs	r2, #1
 2111 01c8 1A70     		strb	r2, [r3]
1407:Core/Src/main.c ****     	BWF2_reply = 1;
 2112              		.loc 1 1407 6 is_stmt 1 view .LVU607
1407:Core/Src/main.c ****     	BWF2_reply = 1;
 2113              		.loc 1 1407 23 is_stmt 0 view .LVU608
 2114 01ca FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 91


 2115              	.LVL139:
1407:Core/Src/main.c ****     	BWF2_reply = 1;
 2116              		.loc 1 1407 21 view .LVU609
 2117 01ce 1F4B     		ldr	r3, .L155+36
 2118 01d0 1860     		str	r0, [r3]
1408:Core/Src/main.c ****     	if (Initial_Start == 0) {
 2119              		.loc 1 1408 6 is_stmt 1 view .LVU610
 2120              	.LVL140:
1409:Core/Src/main.c ****     		Start_Threshold++;
 2121              		.loc 1 1409 6 view .LVU611
1409:Core/Src/main.c ****     		Start_Threshold++;
 2122              		.loc 1 1409 24 is_stmt 0 view .LVU612
 2123 01d2 1F4B     		ldr	r3, .L155+40
 2124 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1409:Core/Src/main.c ****     		Start_Threshold++;
 2125              		.loc 1 1409 9 view .LVU613
 2126 01d6 5BB9     		cbnz	r3, .L135
1410:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
 2127              		.loc 1 1410 7 is_stmt 1 view .LVU614
1410:Core/Src/main.c ****     		if (Start_Threshold >= INITIAL_MAX_THRESHOLD) {
 2128              		.loc 1 1410 22 is_stmt 0 view .LVU615
 2129 01d8 1E4A     		ldr	r2, .L155+44
 2130 01da 1388     		ldrh	r3, [r2]
 2131 01dc 0133     		adds	r3, r3, #1
 2132 01de 9BB2     		uxth	r3, r3
 2133 01e0 1380     		strh	r3, [r2]	@ movhi
1411:Core/Src/main.c ****     			Initial_Start = 1;
 2134              		.loc 1 1411 7 is_stmt 1 view .LVU616
1411:Core/Src/main.c ****     			Initial_Start = 1;
 2135              		.loc 1 1411 10 is_stmt 0 view .LVU617
 2136 01e2 42F20F72 		movw	r2, #9999
 2137 01e6 9342     		cmp	r3, r2
 2138 01e8 02D9     		bls	.L135
1412:Core/Src/main.c ****     		}
 2139              		.loc 1 1412 8 is_stmt 1 view .LVU618
1412:Core/Src/main.c ****     		}
 2140              		.loc 1 1412 22 is_stmt 0 view .LVU619
 2141 01ea 194B     		ldr	r3, .L155+40
 2142 01ec 0122     		movs	r2, #1
 2143 01ee 1A70     		strb	r2, [r3]
 2144              	.L135:
1415:Core/Src/main.c **** 
 2145              		.loc 1 1415 6 is_stmt 1 view .LVU620
1415:Core/Src/main.c **** 
 2146              		.loc 1 1415 17 is_stmt 0 view .LVU621
 2147 01f0 1C4A     		ldr	r2, .L155+60
 2148 01f2 1368     		ldr	r3, [r2]
 2149 01f4 0133     		adds	r3, r3, #1
 2150 01f6 1360     		str	r3, [r2]
1408:Core/Src/main.c ****     	if (Initial_Start == 0) {
 2151              		.loc 1 1408 17 view .LVU622
 2152 01f8 0125     		movs	r5, #1
 2153 01fa 76E7     		b	.L136
 2154              	.LVL141:
 2155              	.L153:
1419:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2156              		.loc 1 1419 6 is_stmt 1 view .LVU623
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 92


1419:Core/Src/main.c ****     	Boundary_Timer = HAL_GetTick();
 2157              		.loc 1 1419 18 is_stmt 0 view .LVU624
 2158 01fc 184B     		ldr	r3, .L155+56
 2159 01fe 0222     		movs	r2, #2
 2160 0200 1A70     		strb	r2, [r3]
1420:Core/Src/main.c ****     	BWF2_reply = 1;
 2161              		.loc 1 1420 6 is_stmt 1 view .LVU625
1420:Core/Src/main.c ****     	BWF2_reply = 1;
 2162              		.loc 1 1420 23 is_stmt 0 view .LVU626
 2163 0202 FFF7FEFF 		bl	HAL_GetTick
 2164              	.LVL142:
1420:Core/Src/main.c ****     	BWF2_reply = 1;
 2165              		.loc 1 1420 21 view .LVU627
 2166 0206 114B     		ldr	r3, .L155+36
 2167 0208 1860     		str	r0, [r3]
1421:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 2168              		.loc 1 1421 6 is_stmt 1 view .LVU628
 2169              	.LVL143:
1422:Core/Src/main.c ****     	bwf2_outside++;
 2170              		.loc 1 1422 6 view .LVU629
1422:Core/Src/main.c ****     	bwf2_outside++;
 2171              		.loc 1 1422 24 is_stmt 0 view .LVU630
 2172 020a 114B     		ldr	r3, .L155+40
 2173 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1422:Core/Src/main.c ****     	bwf2_outside++;
 2174              		.loc 1 1422 9 view .LVU631
 2175 020e 13B9     		cbnz	r3, .L138
1422:Core/Src/main.c ****     	bwf2_outside++;
 2176              		.loc 1 1422 30 is_stmt 1 discriminator 1 view .LVU632
1422:Core/Src/main.c ****     	bwf2_outside++;
 2177              		.loc 1 1422 46 is_stmt 0 discriminator 1 view .LVU633
 2178 0210 104B     		ldr	r3, .L155+44
 2179 0212 0022     		movs	r2, #0
 2180 0214 1A80     		strh	r2, [r3]	@ movhi
 2181              	.L138:
1423:Core/Src/main.c **** 
 2182              		.loc 1 1423 6 is_stmt 1 view .LVU634
1423:Core/Src/main.c **** 
 2183              		.loc 1 1423 18 is_stmt 0 view .LVU635
 2184 0216 144A     		ldr	r2, .L155+64
 2185 0218 1368     		ldr	r3, [r2]
 2186 021a 0133     		adds	r3, r3, #1
 2187 021c 1360     		str	r3, [r2]
1421:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 2188              		.loc 1 1421 17 view .LVU636
 2189 021e 0125     		movs	r5, #1
 2190 0220 63E7     		b	.L136
 2191              	.LVL144:
 2192              	.L115:
1421:Core/Src/main.c ****     	if (Initial_Start == 0) Start_Threshold = 0;
 2193              		.loc 1 1421 17 view .LVU637
 2194              	.LBE35:
1427:Core/Src/main.c **** 
 2195              		.loc 1 1427 1 view .LVU638
 2196 0222 BDEC068B 		vldm	sp!, {d8-d10}
 2197              	.LCFI25:
 2198              		.cfi_restore 84
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 93


 2199              		.cfi_restore 85
 2200              		.cfi_restore 82
 2201              		.cfi_restore 83
 2202              		.cfi_restore 80
 2203              		.cfi_restore 81
 2204              		.cfi_def_cfa_offset 16
 2205 0226 38BD     		pop	{r3, r4, r5, pc}
 2206              	.LVL145:
 2207              	.L156:
1427:Core/Src/main.c **** 
 2208              		.loc 1 1427 1 view .LVU639
 2209              		.align	2
 2210              	.L155:
 2211 0228 00000000 		.word	ADC_BUFFER
 2212 022c 00000000 		.word	BWF1
 2213 0230 00000000 		.word	BWF2
 2214 0234 00000000 		.word	.LANCHOR15
 2215 0238 00000000 		.word	.LANCHOR16
 2216 023c 00000000 		.word	.LANCHOR17
 2217 0240 00000000 		.word	.LANCHOR22
 2218 0244 00000000 		.word	0
 2219 0248 00000000 		.word	.LANCHOR18
 2220 024c 00000000 		.word	Boundary_Timer
 2221 0250 00000000 		.word	.LANCHOR19
 2222 0254 00000000 		.word	.LANCHOR20
 2223 0258 00000000 		.word	.LANCHOR21
 2224 025c 00000000 		.word	.LANCHOR23
 2225 0260 00000000 		.word	.LANCHOR24
 2226 0264 00000000 		.word	.LANCHOR25
 2227 0268 00000000 		.word	.LANCHOR26
 2228              		.cfi_endproc
 2229              	.LFE302:
 2231              		.section	.text.CheckSecurity,"ax",%progbits
 2232              		.align	1
 2233              		.syntax unified
 2234              		.thumb
 2235              		.thumb_func
 2236              		.fpu fpv4-sp-d16
 2238              	CheckSecurity:
 2239              	.LFB298:
1229:Core/Src/main.c **** 
 2240              		.loc 1 1229 29 is_stmt 1 view -0
 2241              		.cfi_startproc
 2242              		@ args = 0, pretend = 0, frame = 0
 2243              		@ frame_needed = 0, uses_anonymous_args = 0
 2244 0000 10B5     		push	{r4, lr}
 2245              	.LCFI26:
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 4, -8
 2248              		.cfi_offset 14, -4
1233:Core/Src/main.c **** 
 2249              		.loc 1 1233 5 view .LVU641
 2250 0002 FFF7FEFF 		bl	CheckBWF
 2251              	.LVL146:
1236:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
 2252              		.loc 1 1236 5 view .LVU642
1236:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 94


 2253              		.loc 1 1236 9 is_stmt 0 view .LVU643
 2254 0006 FFF7FEFF 		bl	HAL_GetTick
 2255              	.LVL147:
1236:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
 2256              		.loc 1 1236 23 view .LVU644
 2257 000a 1A4B     		ldr	r3, .L166
 2258 000c 1B68     		ldr	r3, [r3]
 2259 000e C01A     		subs	r0, r0, r3
1236:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
 2260              		.loc 1 1236 61 view .LVU645
 2261 0010 194B     		ldr	r3, .L166+4
 2262 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2263 0014 4FF47A73 		mov	r3, #1000
 2264 0018 03FB02F3 		mul	r3, r3, r2
1236:Core/Src/main.c ****     	BWF1_Status = NOSIGNAL;
 2265              		.loc 1 1236 8 view .LVU646
 2266 001c 9842     		cmp	r0, r3
 2267 001e 0CD2     		bcs	.L164
1244:Core/Src/main.c ****     	Security = INSIDE;
 2268              		.loc 1 1244 5 is_stmt 1 view .LVU647
1244:Core/Src/main.c ****     	Security = INSIDE;
 2269              		.loc 1 1244 21 is_stmt 0 view .LVU648
 2270 0020 164B     		ldr	r3, .L166+8
 2271 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1244:Core/Src/main.c ****     	Security = INSIDE;
 2272              		.loc 1 1244 8 view .LVU649
 2273 0024 012B     		cmp	r3, #1
 2274 0026 14D0     		beq	.L165
 2275              	.L160:
1249:Core/Src/main.c **** 		Security = OUTSIDE;
 2276              		.loc 1 1249 7 is_stmt 1 view .LVU650
1249:Core/Src/main.c **** 		Security = OUTSIDE;
 2277              		.loc 1 1249 10 is_stmt 0 view .LVU651
 2278 0028 022B     		cmp	r3, #2
 2279 002a 1ED0     		beq	.L161
1249:Core/Src/main.c **** 		Security = OUTSIDE;
 2280              		.loc 1 1249 49 discriminator 1 view .LVU652
 2281 002c 144B     		ldr	r3, .L166+12
 2282 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1249:Core/Src/main.c **** 		Security = OUTSIDE;
 2283              		.loc 1 1249 34 discriminator 1 view .LVU653
 2284 0030 022B     		cmp	r3, #2
 2285 0032 1AD0     		beq	.L161
1254:Core/Src/main.c **** 
 2286              		.loc 1 1254 9 view .LVU654
 2287 0034 0024     		movs	r4, #0
 2288              	.L159:
1256:Core/Src/main.c **** 
 2289              		.loc 1 1256 1 view .LVU655
 2290 0036 2046     		mov	r0, r4
 2291 0038 10BD     		pop	{r4, pc}
 2292              	.L164:
1237:Core/Src/main.c ****     	BWF2_Status = NOSIGNAL;
 2293              		.loc 1 1237 6 is_stmt 1 view .LVU656
1237:Core/Src/main.c ****     	BWF2_Status = NOSIGNAL;
 2294              		.loc 1 1237 18 is_stmt 0 view .LVU657
 2295 003a 0023     		movs	r3, #0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 95


 2296 003c 0F4A     		ldr	r2, .L166+8
 2297 003e 1370     		strb	r3, [r2]
1238:Core/Src/main.c ****     	State = FAIL;
 2298              		.loc 1 1238 6 is_stmt 1 view .LVU658
1238:Core/Src/main.c ****     	State = FAIL;
 2299              		.loc 1 1238 18 is_stmt 0 view .LVU659
 2300 0040 0F4A     		ldr	r2, .L166+12
 2301 0042 1370     		strb	r3, [r2]
1239:Core/Src/main.c ****     	Security = NOSIGNAL;
 2302              		.loc 1 1239 6 is_stmt 1 view .LVU660
1239:Core/Src/main.c ****     	Security = NOSIGNAL;
 2303              		.loc 1 1239 12 is_stmt 0 view .LVU661
 2304 0044 0F4A     		ldr	r2, .L166+16
 2305 0046 0621     		movs	r1, #6
 2306 0048 1170     		strb	r1, [r2]
1240:Core/Src/main.c ****     	return SECURITY_NOSIGNAL;
 2307              		.loc 1 1240 6 is_stmt 1 view .LVU662
1240:Core/Src/main.c ****     	return SECURITY_NOSIGNAL;
 2308              		.loc 1 1240 15 is_stmt 0 view .LVU663
 2309 004a 0F4A     		ldr	r2, .L166+20
 2310 004c 1370     		strb	r3, [r2]
1241:Core/Src/main.c ****     }
 2311              		.loc 1 1241 6 is_stmt 1 view .LVU664
1241:Core/Src/main.c ****     }
 2312              		.loc 1 1241 13 is_stmt 0 view .LVU665
 2313 004e 0224     		movs	r4, #2
 2314 0050 F1E7     		b	.L159
 2315              	.L165:
1244:Core/Src/main.c ****     	Security = INSIDE;
 2316              		.loc 1 1244 46 discriminator 1 view .LVU666
 2317 0052 0B4A     		ldr	r2, .L166+12
 2318 0054 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
1244:Core/Src/main.c ****     	Security = INSIDE;
 2319              		.loc 1 1244 31 discriminator 1 view .LVU667
 2320 0056 012C     		cmp	r4, #1
 2321 0058 E6D1     		bne	.L160
1245:Core/Src/main.c ****     	OUTSIDE_timer = HAL_GetTick();		// We are inside, reset OUTSIDE_timer
 2322              		.loc 1 1245 6 is_stmt 1 view .LVU668
1245:Core/Src/main.c ****     	OUTSIDE_timer = HAL_GetTick();		// We are inside, reset OUTSIDE_timer
 2323              		.loc 1 1245 15 is_stmt 0 view .LVU669
 2324 005a 0B4B     		ldr	r3, .L166+20
 2325 005c 0122     		movs	r2, #1
 2326 005e 1A70     		strb	r2, [r3]
1246:Core/Src/main.c **** 		return SECURITY_OK;
 2327              		.loc 1 1246 6 is_stmt 1 view .LVU670
1246:Core/Src/main.c **** 		return SECURITY_OK;
 2328              		.loc 1 1246 22 is_stmt 0 view .LVU671
 2329 0060 FFF7FEFF 		bl	HAL_GetTick
 2330              	.LVL148:
1246:Core/Src/main.c **** 		return SECURITY_OK;
 2331              		.loc 1 1246 20 view .LVU672
 2332 0064 094B     		ldr	r3, .L166+24
 2333 0066 1860     		str	r0, [r3]
1247:Core/Src/main.c **** 	}
 2334              		.loc 1 1247 3 is_stmt 1 view .LVU673
1247:Core/Src/main.c **** 	}
 2335              		.loc 1 1247 10 is_stmt 0 view .LVU674
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 96


 2336 0068 E5E7     		b	.L159
 2337              	.L161:
1250:Core/Src/main.c **** 		return SECURITY_FAIL;
 2338              		.loc 1 1250 3 is_stmt 1 view .LVU675
1250:Core/Src/main.c **** 		return SECURITY_FAIL;
 2339              		.loc 1 1250 12 is_stmt 0 view .LVU676
 2340 006a 074B     		ldr	r3, .L166+20
 2341 006c 0222     		movs	r2, #2
 2342 006e 1A70     		strb	r2, [r3]
1251:Core/Src/main.c **** 	}
 2343              		.loc 1 1251 3 is_stmt 1 view .LVU677
1251:Core/Src/main.c **** 	}
 2344              		.loc 1 1251 10 is_stmt 0 view .LVU678
 2345 0070 0024     		movs	r4, #0
 2346 0072 E0E7     		b	.L159
 2347              	.L167:
 2348              		.align	2
 2349              	.L166:
 2350 0074 00000000 		.word	Boundary_Timer
 2351 0078 00000000 		.word	.LANCHOR27
 2352 007c 00000000 		.word	.LANCHOR18
 2353 0080 00000000 		.word	.LANCHOR24
 2354 0084 00000000 		.word	.LANCHOR11
 2355 0088 00000000 		.word	.LANCHOR28
 2356 008c 00000000 		.word	.LANCHOR29
 2357              		.cfi_endproc
 2358              	.LFE298:
 2360              		.section	.text.MotorLeft,"ax",%progbits
 2361              		.align	1
 2362              		.syntax unified
 2363              		.thumb
 2364              		.thumb_func
 2365              		.fpu fpv4-sp-d16
 2367              	MotorLeft:
 2368              	.LVL149:
 2369              	.LFB310:
1625:Core/Src/main.c **** 
 2370              		.loc 1 1625 72 is_stmt 1 view -0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 0
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Core/Src/main.c **** 
 2374              		.loc 1 1625 72 is_stmt 0 view .LVU680
 2375 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2376              	.LCFI27:
 2377              		.cfi_def_cfa_offset 24
 2378              		.cfi_offset 4, -24
 2379              		.cfi_offset 5, -20
 2380              		.cfi_offset 6, -16
 2381              		.cfi_offset 7, -12
 2382              		.cfi_offset 8, -8
 2383              		.cfi_offset 14, -4
 2384 0004 0446     		mov	r4, r0
 2385 0006 0F46     		mov	r7, r1
 2386 0008 9046     		mov	r8, r2
1627:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2387              		.loc 1 1627 2 is_stmt 1 view .LVU681
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 97


1627:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2388              		.loc 1 1627 8 is_stmt 0 view .LVU682
 2389 000a 104B     		ldr	r3, .L174
 2390 000c 0322     		movs	r2, #3
 2391              	.LVL150:
1627:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2392              		.loc 1 1627 8 view .LVU683
 2393 000e 1A70     		strb	r2, [r3]
1628:Core/Src/main.c **** 
 2394              		.loc 1 1628 2 is_stmt 1 view .LVU684
 2395              	.LVL151:
1630:Core/Src/main.c **** 
 2396              		.loc 1 1630 1 view .LVU685
 2397              	.LBB36:
1630:Core/Src/main.c **** 
 2398              		.loc 1 1630 6 view .LVU686
1630:Core/Src/main.c **** 
 2399              		.loc 1 1630 6 is_stmt 0 view .LVU687
 2400              	.LBE36:
1628:Core/Src/main.c **** 
 2401              		.loc 1 1628 11 view .LVU688
 2402 0010 0025     		movs	r5, #0
 2403              	.LBB37:
1630:Core/Src/main.c **** 
 2404              		.loc 1 1630 1 view .LVU689
 2405 0012 01E0     		b	.L169
 2406              	.LVL152:
 2407              	.L173:
1630:Core/Src/main.c **** 
 2408              		.loc 1 1630 65 is_stmt 1 discriminator 2 view .LVU690
1630:Core/Src/main.c **** 
 2409              		.loc 1 1630 77 is_stmt 0 discriminator 2 view .LVU691
 2410 0014 0434     		adds	r4, r4, #4
 2411              	.LVL153:
1630:Core/Src/main.c **** 
 2412              		.loc 1 1630 77 discriminator 2 view .LVU692
 2413 0016 A4B2     		uxth	r4, r4
 2414              	.LVL154:
 2415              	.L169:
1630:Core/Src/main.c **** 
 2416              		.loc 1 1630 40 is_stmt 1 discriminator 1 view .LVU693
1630:Core/Src/main.c **** 
 2417              		.loc 1 1630 1 is_stmt 0 discriminator 1 view .LVU694
 2418 0018 BC42     		cmp	r4, r7
 2419 001a 12D2     		bcs	.L170
1632:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2420              		.loc 1 1632 4 is_stmt 1 view .LVU695
1632:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2421              		.loc 1 1632 17 is_stmt 0 view .LVU696
 2422 001c E31C     		adds	r3, r4, #3
 2423 001e 9BB2     		uxth	r3, r3
 2424              	.LVL155:
1633:Core/Src/main.c **** 		  break;
 2425              		.loc 1 1633 4 is_stmt 1 view .LVU697
1633:Core/Src/main.c **** 		  break;
 2426              		.loc 1 1633 7 is_stmt 0 view .LVU698
 2427 0020 9F42     		cmp	r7, r3
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 98


 2428 0022 0ED9     		bls	.L170
1636:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 2429              		.loc 1 1636 4 is_stmt 1 view .LVU699
1636:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 2430              		.loc 1 1636 15 is_stmt 0 view .LVU700
 2431 0024 0A48     		ldr	r0, .L174+4
 2432 0026 4363     		str	r3, [r0, #52]
1637:Core/Src/main.c **** 
 2433              		.loc 1 1637 4 is_stmt 1 view .LVU701
1637:Core/Src/main.c **** 
 2434              		.loc 1 1637 15 is_stmt 0 view .LVU702
 2435 0028 0026     		movs	r6, #0
 2436 002a 8663     		str	r6, [r0, #56]
1639:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 2437              		.loc 1 1639 4 is_stmt 1 view .LVU703
1639:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 2438              		.loc 1 1639 15 is_stmt 0 view .LVU704
 2439 002c C363     		str	r3, [r0, #60]
1640:Core/Src/main.c **** 
 2440              		.loc 1 1640 4 is_stmt 1 view .LVU705
1640:Core/Src/main.c **** 
 2441              		.loc 1 1640 15 is_stmt 0 view .LVU706
 2442 002e 0664     		str	r6, [r0, #64]
1642:Core/Src/main.c **** 	  timeCount++;
 2443              		.loc 1 1642 4 is_stmt 1 view .LVU707
 2444 0030 0120     		movs	r0, #1
 2445 0032 FFF7FEFF 		bl	HAL_Delay
 2446              	.LVL156:
1643:Core/Src/main.c **** 
 2447              		.loc 1 1643 4 view .LVU708
1643:Core/Src/main.c **** 
 2448              		.loc 1 1643 13 is_stmt 0 view .LVU709
 2449 0036 0135     		adds	r5, r5, #1
 2450              	.LVL157:
1643:Core/Src/main.c **** 
 2451              		.loc 1 1643 13 view .LVU710
 2452 0038 ADB2     		uxth	r5, r5
 2453              	.LVL158:
1645:Core/Src/main.c **** 
 2454              		.loc 1 1645 4 is_stmt 1 view .LVU711
 2455 003a FFF7FEFF 		bl	CheckSecurity
 2456              	.LVL159:
1647:Core/Src/main.c **** 		  break;
 2457              		.loc 1 1647 4 view .LVU712
1647:Core/Src/main.c **** 		  break;
 2458              		.loc 1 1647 7 is_stmt 0 view .LVU713
 2459 003e 4545     		cmp	r5, r8
 2460 0040 E8D3     		bcc	.L173
 2461              	.LVL160:
 2462              	.L170:
1647:Core/Src/main.c **** 		  break;
 2463              		.loc 1 1647 7 view .LVU714
 2464              	.LBE37:
1651:Core/Src/main.c **** }
 2465              		.loc 1 1651 1 is_stmt 1 view .LVU715
 2466 0042 FFF7FEFF 		bl	MotorStop
 2467              	.LVL161:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 99


1652:Core/Src/main.c **** void MotorStop(void) {
 2468              		.loc 1 1652 1 is_stmt 0 view .LVU716
 2469 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2470              	.LVL162:
 2471              	.L175:
1652:Core/Src/main.c **** void MotorStop(void) {
 2472              		.loc 1 1652 1 view .LVU717
 2473 004a 00BF     		.align	2
 2474              	.L174:
 2475 004c 00000000 		.word	.LANCHOR11
 2476 0050 00080040 		.word	1073743872
 2477              		.cfi_endproc
 2478              	.LFE310:
 2480              		.section	.text.MotorBackward,"ax",%progbits
 2481              		.align	1
 2482              		.syntax unified
 2483              		.thumb
 2484              		.thumb_func
 2485              		.fpu fpv4-sp-d16
 2487              	MotorBackward:
 2488              	.LVL163:
 2489              	.LFB308:
1568:Core/Src/main.c **** 
 2490              		.loc 1 1568 76 is_stmt 1 view -0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
1568:Core/Src/main.c **** 
 2494              		.loc 1 1568 76 is_stmt 0 view .LVU719
 2495 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2496              	.LCFI28:
 2497              		.cfi_def_cfa_offset 24
 2498              		.cfi_offset 4, -24
 2499              		.cfi_offset 5, -20
 2500              		.cfi_offset 6, -16
 2501              		.cfi_offset 7, -12
 2502              		.cfi_offset 8, -8
 2503              		.cfi_offset 14, -4
 2504 0004 0446     		mov	r4, r0
 2505 0006 0F46     		mov	r7, r1
 2506 0008 9046     		mov	r8, r2
1570:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2507              		.loc 1 1570 2 is_stmt 1 view .LVU720
1570:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2508              		.loc 1 1570 8 is_stmt 0 view .LVU721
 2509 000a 104B     		ldr	r3, .L182
 2510 000c 0222     		movs	r2, #2
 2511              	.LVL164:
1570:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2512              		.loc 1 1570 8 view .LVU722
 2513 000e 1A70     		strb	r2, [r3]
1571:Core/Src/main.c **** 
 2514              		.loc 1 1571 2 is_stmt 1 view .LVU723
 2515              	.LVL165:
1573:Core/Src/main.c **** 
 2516              		.loc 1 1573 1 view .LVU724
 2517              	.LBB38:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 100


1573:Core/Src/main.c **** 
 2518              		.loc 1 1573 6 view .LVU725
1573:Core/Src/main.c **** 
 2519              		.loc 1 1573 6 is_stmt 0 view .LVU726
 2520              	.LBE38:
1571:Core/Src/main.c **** 
 2521              		.loc 1 1571 11 view .LVU727
 2522 0010 0025     		movs	r5, #0
 2523              	.LBB39:
1573:Core/Src/main.c **** 
 2524              		.loc 1 1573 1 view .LVU728
 2525 0012 01E0     		b	.L177
 2526              	.LVL166:
 2527              	.L181:
1573:Core/Src/main.c **** 
 2528              		.loc 1 1573 65 is_stmt 1 discriminator 2 view .LVU729
1573:Core/Src/main.c **** 
 2529              		.loc 1 1573 77 is_stmt 0 discriminator 2 view .LVU730
 2530 0014 0434     		adds	r4, r4, #4
 2531              	.LVL167:
1573:Core/Src/main.c **** 
 2532              		.loc 1 1573 77 discriminator 2 view .LVU731
 2533 0016 A4B2     		uxth	r4, r4
 2534              	.LVL168:
 2535              	.L177:
1573:Core/Src/main.c **** 
 2536              		.loc 1 1573 40 is_stmt 1 discriminator 1 view .LVU732
1573:Core/Src/main.c **** 
 2537              		.loc 1 1573 1 is_stmt 0 discriminator 1 view .LVU733
 2538 0018 BC42     		cmp	r4, r7
 2539 001a 12D2     		bcs	.L178
1575:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2540              		.loc 1 1575 4 is_stmt 1 view .LVU734
1575:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2541              		.loc 1 1575 17 is_stmt 0 view .LVU735
 2542 001c E31C     		adds	r3, r4, #3
 2543 001e 9BB2     		uxth	r3, r3
 2544              	.LVL169:
1576:Core/Src/main.c **** 		  break;
 2545              		.loc 1 1576 4 is_stmt 1 view .LVU736
1576:Core/Src/main.c **** 		  break;
 2546              		.loc 1 1576 7 is_stmt 0 view .LVU737
 2547 0020 9F42     		cmp	r7, r3
 2548 0022 0ED9     		bls	.L178
1580:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 2549              		.loc 1 1580 4 is_stmt 1 view .LVU738
1580:Core/Src/main.c **** 	  TIM4->CCR2 = 0;
 2550              		.loc 1 1580 15 is_stmt 0 view .LVU739
 2551 0024 0A48     		ldr	r0, .L182+4
 2552 0026 4363     		str	r3, [r0, #52]
1581:Core/Src/main.c **** 
 2553              		.loc 1 1581 4 is_stmt 1 view .LVU740
1581:Core/Src/main.c **** 
 2554              		.loc 1 1581 15 is_stmt 0 view .LVU741
 2555 0028 0026     		movs	r6, #0
 2556 002a 8663     		str	r6, [r0, #56]
1583:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 101


 2557              		.loc 1 1583 4 is_stmt 1 view .LVU742
1583:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
 2558              		.loc 1 1583 15 is_stmt 0 view .LVU743
 2559 002c C663     		str	r6, [r0, #60]
1584:Core/Src/main.c **** 
 2560              		.loc 1 1584 4 is_stmt 1 view .LVU744
1584:Core/Src/main.c **** 
 2561              		.loc 1 1584 15 is_stmt 0 view .LVU745
 2562 002e 0364     		str	r3, [r0, #64]
1586:Core/Src/main.c **** 	  timeCount++;
 2563              		.loc 1 1586 4 is_stmt 1 view .LVU746
 2564 0030 0120     		movs	r0, #1
 2565 0032 FFF7FEFF 		bl	HAL_Delay
 2566              	.LVL170:
1587:Core/Src/main.c **** 
 2567              		.loc 1 1587 4 view .LVU747
1587:Core/Src/main.c **** 
 2568              		.loc 1 1587 13 is_stmt 0 view .LVU748
 2569 0036 0135     		adds	r5, r5, #1
 2570              	.LVL171:
1587:Core/Src/main.c **** 
 2571              		.loc 1 1587 13 view .LVU749
 2572 0038 ADB2     		uxth	r5, r5
 2573              	.LVL172:
1589:Core/Src/main.c **** 
 2574              		.loc 1 1589 4 is_stmt 1 view .LVU750
 2575 003a FFF7FEFF 		bl	CheckSecurity
 2576              	.LVL173:
1591:Core/Src/main.c **** 		  break;
 2577              		.loc 1 1591 4 view .LVU751
1591:Core/Src/main.c **** 		  break;
 2578              		.loc 1 1591 7 is_stmt 0 view .LVU752
 2579 003e 4545     		cmp	r5, r8
 2580 0040 E8D3     		bcc	.L181
 2581              	.LVL174:
 2582              	.L178:
1591:Core/Src/main.c **** 		  break;
 2583              		.loc 1 1591 7 view .LVU753
 2584              	.LBE39:
1595:Core/Src/main.c **** }
 2585              		.loc 1 1595 1 is_stmt 1 view .LVU754
 2586 0042 FFF7FEFF 		bl	MotorStop
 2587              	.LVL175:
1596:Core/Src/main.c **** void MotorRight(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
 2588              		.loc 1 1596 1 is_stmt 0 view .LVU755
 2589 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2590              	.LVL176:
 2591              	.L183:
1596:Core/Src/main.c **** void MotorRight(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
 2592              		.loc 1 1596 1 view .LVU756
 2593 004a 00BF     		.align	2
 2594              	.L182:
 2595 004c 00000000 		.word	.LANCHOR11
 2596 0050 00080040 		.word	1073743872
 2597              		.cfi_endproc
 2598              	.LFE308:
 2600              		.section	.text.MotorRight,"ax",%progbits
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 102


 2601              		.align	1
 2602              		.syntax unified
 2603              		.thumb
 2604              		.thumb_func
 2605              		.fpu fpv4-sp-d16
 2607              	MotorRight:
 2608              	.LVL177:
 2609              	.LFB309:
1597:Core/Src/main.c **** 
 2610              		.loc 1 1597 73 is_stmt 1 view -0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 0, uses_anonymous_args = 0
1597:Core/Src/main.c **** 
 2614              		.loc 1 1597 73 is_stmt 0 view .LVU758
 2615 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2616              	.LCFI29:
 2617              		.cfi_def_cfa_offset 24
 2618              		.cfi_offset 4, -24
 2619              		.cfi_offset 5, -20
 2620              		.cfi_offset 6, -16
 2621              		.cfi_offset 7, -12
 2622              		.cfi_offset 8, -8
 2623              		.cfi_offset 14, -4
 2624 0004 0446     		mov	r4, r0
 2625 0006 0F46     		mov	r7, r1
 2626 0008 9046     		mov	r8, r2
1599:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2627              		.loc 1 1599 2 is_stmt 1 view .LVU759
1599:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2628              		.loc 1 1599 8 is_stmt 0 view .LVU760
 2629 000a 104B     		ldr	r3, .L190
 2630 000c 0422     		movs	r2, #4
 2631              	.LVL178:
1599:Core/Src/main.c **** 	uint16_t timeCount = 0;
 2632              		.loc 1 1599 8 view .LVU761
 2633 000e 1A70     		strb	r2, [r3]
1600:Core/Src/main.c **** 
 2634              		.loc 1 1600 2 is_stmt 1 view .LVU762
 2635              	.LVL179:
1602:Core/Src/main.c **** 
 2636              		.loc 1 1602 1 view .LVU763
 2637              	.LBB40:
1602:Core/Src/main.c **** 
 2638              		.loc 1 1602 6 view .LVU764
1602:Core/Src/main.c **** 
 2639              		.loc 1 1602 6 is_stmt 0 view .LVU765
 2640              	.LBE40:
1600:Core/Src/main.c **** 
 2641              		.loc 1 1600 11 view .LVU766
 2642 0010 0025     		movs	r5, #0
 2643              	.LBB41:
1602:Core/Src/main.c **** 
 2644              		.loc 1 1602 1 view .LVU767
 2645 0012 01E0     		b	.L185
 2646              	.LVL180:
 2647              	.L189:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 103


1602:Core/Src/main.c **** 
 2648              		.loc 1 1602 65 is_stmt 1 discriminator 2 view .LVU768
1602:Core/Src/main.c **** 
 2649              		.loc 1 1602 77 is_stmt 0 discriminator 2 view .LVU769
 2650 0014 0434     		adds	r4, r4, #4
 2651              	.LVL181:
1602:Core/Src/main.c **** 
 2652              		.loc 1 1602 77 discriminator 2 view .LVU770
 2653 0016 A4B2     		uxth	r4, r4
 2654              	.LVL182:
 2655              	.L185:
1602:Core/Src/main.c **** 
 2656              		.loc 1 1602 40 is_stmt 1 discriminator 1 view .LVU771
1602:Core/Src/main.c **** 
 2657              		.loc 1 1602 1 is_stmt 0 discriminator 1 view .LVU772
 2658 0018 BC42     		cmp	r4, r7
 2659 001a 12D2     		bcs	.L186
1604:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2660              		.loc 1 1604 4 is_stmt 1 view .LVU773
1604:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 2661              		.loc 1 1604 17 is_stmt 0 view .LVU774
 2662 001c E31C     		adds	r3, r4, #3
 2663 001e 9BB2     		uxth	r3, r3
 2664              	.LVL183:
1605:Core/Src/main.c **** 		  break;
 2665              		.loc 1 1605 4 is_stmt 1 view .LVU775
1605:Core/Src/main.c **** 		  break;
 2666              		.loc 1 1605 7 is_stmt 0 view .LVU776
 2667 0020 9F42     		cmp	r7, r3
 2668 0022 0ED9     		bls	.L186
1608:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed;
 2669              		.loc 1 1608 4 is_stmt 1 view .LVU777
1608:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed;
 2670              		.loc 1 1608 15 is_stmt 0 view .LVU778
 2671 0024 0A48     		ldr	r0, .L190+4
 2672 0026 0026     		movs	r6, #0
 2673 0028 4663     		str	r6, [r0, #52]
1609:Core/Src/main.c **** 
 2674              		.loc 1 1609 4 is_stmt 1 view .LVU779
1609:Core/Src/main.c **** 
 2675              		.loc 1 1609 15 is_stmt 0 view .LVU780
 2676 002a 8363     		str	r3, [r0, #56]
1611:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
 2677              		.loc 1 1611 4 is_stmt 1 view .LVU781
1611:Core/Src/main.c **** 	  TIM4->CCR4 = currentSpeed;
 2678              		.loc 1 1611 15 is_stmt 0 view .LVU782
 2679 002c C663     		str	r6, [r0, #60]
1612:Core/Src/main.c **** 
 2680              		.loc 1 1612 4 is_stmt 1 view .LVU783
1612:Core/Src/main.c **** 
 2681              		.loc 1 1612 15 is_stmt 0 view .LVU784
 2682 002e 0364     		str	r3, [r0, #64]
1614:Core/Src/main.c **** 	  timeCount++;
 2683              		.loc 1 1614 4 is_stmt 1 view .LVU785
 2684 0030 0120     		movs	r0, #1
 2685 0032 FFF7FEFF 		bl	HAL_Delay
 2686              	.LVL184:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 104


1615:Core/Src/main.c **** 
 2687              		.loc 1 1615 4 view .LVU786
1615:Core/Src/main.c **** 
 2688              		.loc 1 1615 13 is_stmt 0 view .LVU787
 2689 0036 0135     		adds	r5, r5, #1
 2690              	.LVL185:
1615:Core/Src/main.c **** 
 2691              		.loc 1 1615 13 view .LVU788
 2692 0038 ADB2     		uxth	r5, r5
 2693              	.LVL186:
1617:Core/Src/main.c **** 
 2694              		.loc 1 1617 4 is_stmt 1 view .LVU789
 2695 003a FFF7FEFF 		bl	CheckSecurity
 2696              	.LVL187:
1619:Core/Src/main.c **** 		  break;
 2697              		.loc 1 1619 4 view .LVU790
1619:Core/Src/main.c **** 		  break;
 2698              		.loc 1 1619 7 is_stmt 0 view .LVU791
 2699 003e 4545     		cmp	r5, r8
 2700 0040 E8D3     		bcc	.L189
 2701              	.LVL188:
 2702              	.L186:
1619:Core/Src/main.c **** 		  break;
 2703              		.loc 1 1619 7 view .LVU792
 2704              	.LBE41:
1623:Core/Src/main.c **** }
 2705              		.loc 1 1623 1 is_stmt 1 view .LVU793
 2706 0042 FFF7FEFF 		bl	MotorStop
 2707              	.LVL189:
1624:Core/Src/main.c **** void MotorLeft(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
 2708              		.loc 1 1624 1 is_stmt 0 view .LVU794
 2709 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2710              	.LVL190:
 2711              	.L191:
1624:Core/Src/main.c **** void MotorLeft(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
 2712              		.loc 1 1624 1 view .LVU795
 2713 004a 00BF     		.align	2
 2714              	.L190:
 2715 004c 00000000 		.word	.LANCHOR11
 2716 0050 00080040 		.word	1073743872
 2717              		.cfi_endproc
 2718              	.LFE309:
 2720              		.section	.rodata.unDock.str1.4,"aMS",%progbits,1
 2721              		.align	2
 2722              	.LC0:
 2723 0000 53776974 		.ascii	"Switching to Main Battery\015\012\000"
 2723      6368696E 
 2723      6720746F 
 2723      204D6169 
 2723      6E204261 
 2724              		.section	.text.unDock,"ax",%progbits
 2725              		.align	1
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv4-sp-d16
 2731              	unDock:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 105


 2732              	.LFB291:
 808:Core/Src/main.c **** 
 2733              		.loc 1 808 19 is_stmt 1 view -0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 24
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737 0000 30B5     		push	{r4, r5, lr}
 2738              	.LCFI30:
 2739              		.cfi_def_cfa_offset 12
 2740              		.cfi_offset 4, -12
 2741              		.cfi_offset 5, -8
 2742              		.cfi_offset 14, -4
 2743 0002 87B0     		sub	sp, sp, #28
 2744              	.LCFI31:
 2745              		.cfi_def_cfa_offset 40
 812:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 2746              		.loc 1 812 2 view .LVU797
 812:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 2747              		.loc 1 812 18 is_stmt 0 view .LVU798
 2748 0004 0024     		movs	r4, #0
 2749 0006 0194     		str	r4, [sp, #4]
 2750 0008 0294     		str	r4, [sp, #8]
 2751 000a 0394     		str	r4, [sp, #12]
 2752 000c 0494     		str	r4, [sp, #16]
 2753 000e 0594     		str	r4, [sp, #20]
 813:Core/Src/main.c **** 
 2754              		.loc 1 813 2 is_stmt 1 view .LVU799
 813:Core/Src/main.c **** 
 2755              		.loc 1 813 18 is_stmt 0 view .LVU800
 2756 0010 0094     		str	r4, [sp]
 815:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 2757              		.loc 1 815 2 is_stmt 1 view .LVU801
 2758 0012 234D     		ldr	r5, .L196
 2759 0014 2246     		mov	r2, r4
 2760 0016 01A9     		add	r1, sp, #4
 2761 0018 2846     		mov	r0, r5
 2762 001a FFF7FEFF 		bl	HAL_RTC_GetTime
 2763              	.LVL191:
 816:Core/Src/main.c **** 
 2764              		.loc 1 816 2 view .LVU802
 2765 001e 2246     		mov	r2, r4
 2766 0020 6946     		mov	r1, sp
 2767 0022 2846     		mov	r0, r5
 2768 0024 FFF7FEFF 		bl	HAL_RTC_GetDate
 2769              	.LVL192:
 818:Core/Src/main.c **** 
 2770              		.loc 1 818 2 view .LVU803
 818:Core/Src/main.c **** 
 2771              		.loc 1 818 14 is_stmt 0 view .LVU804
 2772 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 818:Core/Src/main.c **** 
 2773              		.loc 1 818 21 view .LVU805
 2774 002c 1D4A     		ldr	r2, .L196+4
 2775 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 818:Core/Src/main.c **** 
 2776              		.loc 1 818 5 view .LVU806
 2777 0030 9342     		cmp	r3, r2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 106


 2778 0032 07D3     		bcc	.L192
 818:Core/Src/main.c **** 
 2779              		.loc 1 818 59 discriminator 1 view .LVU807
 2780 0034 1C4A     		ldr	r2, .L196+8
 2781 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 818:Core/Src/main.c **** 
 2782              		.loc 1 818 41 discriminator 1 view .LVU808
 2783 0038 9342     		cmp	r3, r2
 2784 003a 03D2     		bcs	.L192
 818:Core/Src/main.c **** 
 2785              		.loc 1 818 93 discriminator 2 view .LVU809
 2786 003c 1B4B     		ldr	r3, .L196+12
 2787 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 818:Core/Src/main.c **** 
 2788              		.loc 1 818 76 discriminator 2 view .LVU810
 2789 0040 012B     		cmp	r3, #1
 2790 0042 01D0     		beq	.L195
 2791              	.L192:
 836:Core/Src/main.c **** 
 2792              		.loc 1 836 1 view .LVU811
 2793 0044 07B0     		add	sp, sp, #28
 2794              	.LCFI32:
 2795              		.cfi_remember_state
 2796              		.cfi_def_cfa_offset 12
 2797              		@ sp needed
 2798 0046 30BD     		pop	{r4, r5, pc}
 2799              	.L195:
 2800              	.LCFI33:
 2801              		.cfi_restore_state
 818:Core/Src/main.c **** 
 2802              		.loc 1 818 108 discriminator 3 view .LVU812
 2803 0048 194B     		ldr	r3, .L196+16
 2804 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 818:Core/Src/main.c **** 
 2805              		.loc 1 818 98 discriminator 3 view .LVU813
 2806 004c 012B     		cmp	r3, #1
 2807 004e F9D1     		bne	.L192
 820:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_RESET);
 2808              		.loc 1 820 3 is_stmt 1 view .LVU814
 2809 0050 1848     		ldr	r0, .L196+20
 2810 0052 FFF7FEFF 		bl	Serial_Console
 2811              	.LVL193:
 821:Core/Src/main.c **** 		HAL_Delay(5000);
 2812              		.loc 1 821 3 view .LVU815
 2813 0056 2246     		mov	r2, r4
 2814 0058 0121     		movs	r1, #1
 2815 005a 1748     		ldr	r0, .L196+24
 2816 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2817              	.LVL194:
 822:Core/Src/main.c **** 
 2818              		.loc 1 822 3 view .LVU816
 2819 0060 41F28830 		movw	r0, #5000
 2820 0064 FFF7FEFF 		bl	HAL_Delay
 2821              	.LVL195:
 824:Core/Src/main.c **** 
 2822              		.loc 1 824 3 view .LVU817
 2823 0068 40F61F51 		movw	r1, #3359
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 107


 2824 006c 4FF4FA60 		mov	r0, #2000
 2825 0070 FFF7FEFF 		bl	Undock_MotorBackward
 2826              	.LVL196:
 826:Core/Src/main.c **** 
 2827              		.loc 1 826 3 view .LVU818
 2828 0074 4FF4FA72 		mov	r2, #500
 2829 0078 40F61F51 		movw	r1, #3359
 2830 007c 4FF4FA60 		mov	r0, #2000
 2831 0080 FFF7FEFF 		bl	MotorLeft
 2832              	.LVL197:
 828:Core/Src/main.c **** 		Initial_Start = 0;
 2833              		.loc 1 828 3 view .LVU819
 828:Core/Src/main.c **** 		Initial_Start = 0;
 2834              		.loc 1 828 10 is_stmt 0 view .LVU820
 2835 0084 0A4A     		ldr	r2, .L196+16
 2836 0086 1470     		strb	r4, [r2]
 829:Core/Src/main.c **** 		Start_Threshold = 0;
 2837              		.loc 1 829 3 is_stmt 1 view .LVU821
 829:Core/Src/main.c **** 		Start_Threshold = 0;
 2838              		.loc 1 829 17 is_stmt 0 view .LVU822
 2839 0088 0C4A     		ldr	r2, .L196+28
 2840 008a 1470     		strb	r4, [r2]
 830:Core/Src/main.c **** 		Battery_Ready = 0;
 2841              		.loc 1 830 3 is_stmt 1 view .LVU823
 830:Core/Src/main.c **** 		Battery_Ready = 0;
 2842              		.loc 1 830 19 is_stmt 0 view .LVU824
 2843 008c 0C4A     		ldr	r2, .L196+32
 2844 008e 1480     		strh	r4, [r2]	@ movhi
 831:Core/Src/main.c **** 		lastError = 0;
 2845              		.loc 1 831 3 is_stmt 1 view .LVU825
 831:Core/Src/main.c **** 		lastError = 0;
 2846              		.loc 1 831 17 is_stmt 0 view .LVU826
 2847 0090 064A     		ldr	r2, .L196+12
 2848 0092 1470     		strb	r4, [r2]
 832:Core/Src/main.c **** 
 2849              		.loc 1 832 3 is_stmt 1 view .LVU827
 832:Core/Src/main.c **** 
 2850              		.loc 1 832 13 is_stmt 0 view .LVU828
 2851 0094 0B4B     		ldr	r3, .L196+36
 2852 0096 0020     		movs	r0, #0
 2853 0098 0021     		movs	r1, #0
 2854 009a C3E90001 		strd	r0, [r3]
 836:Core/Src/main.c **** 
 2855              		.loc 1 836 1 view .LVU829
 2856 009e D1E7     		b	.L192
 2857              	.L197:
 2858              		.align	2
 2859              	.L196:
 2860 00a0 00000000 		.word	hrtc
 2861 00a4 00000000 		.word	.LANCHOR30
 2862 00a8 00000000 		.word	.LANCHOR31
 2863 00ac 00000000 		.word	.LANCHOR32
 2864 00b0 00000000 		.word	.LANCHOR33
 2865 00b4 00000000 		.word	.LC0
 2866 00b8 000C0240 		.word	1073875968
 2867 00bc 00000000 		.word	.LANCHOR19
 2868 00c0 00000000 		.word	.LANCHOR20
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 108


 2869 00c4 00000000 		.word	.LANCHOR34
 2870              		.cfi_endproc
 2871              	.LFE291:
 2873              		.section	.text.TimeToGoHome,"ax",%progbits
 2874              		.align	1
 2875              		.syntax unified
 2876              		.thumb
 2877              		.thumb_func
 2878              		.fpu fpv4-sp-d16
 2880              	TimeToGoHome:
 2881              	.LFB271:
 332:Core/Src/main.c **** 
 2882              		.loc 1 332 25 is_stmt 1 view -0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 24
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886 0000 30B5     		push	{r4, r5, lr}
 2887              	.LCFI34:
 2888              		.cfi_def_cfa_offset 12
 2889              		.cfi_offset 4, -12
 2890              		.cfi_offset 5, -8
 2891              		.cfi_offset 14, -4
 2892 0002 87B0     		sub	sp, sp, #28
 2893              	.LCFI35:
 2894              		.cfi_def_cfa_offset 40
 336:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 2895              		.loc 1 336 2 view .LVU831
 336:Core/Src/main.c **** 	RTC_DateTypeDef currDate = {0};
 2896              		.loc 1 336 18 is_stmt 0 view .LVU832
 2897 0004 0024     		movs	r4, #0
 2898 0006 0194     		str	r4, [sp, #4]
 2899 0008 0294     		str	r4, [sp, #8]
 2900 000a 0394     		str	r4, [sp, #12]
 2901 000c 0494     		str	r4, [sp, #16]
 2902 000e 0594     		str	r4, [sp, #20]
 337:Core/Src/main.c **** 
 2903              		.loc 1 337 2 is_stmt 1 view .LVU833
 337:Core/Src/main.c **** 
 2904              		.loc 1 337 18 is_stmt 0 view .LVU834
 2905 0010 0094     		str	r4, [sp]
 339:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 2906              		.loc 1 339 2 is_stmt 1 view .LVU835
 2907 0012 0B4D     		ldr	r5, .L201
 2908 0014 2246     		mov	r2, r4
 2909 0016 01A9     		add	r1, sp, #4
 2910 0018 2846     		mov	r0, r5
 2911 001a FFF7FEFF 		bl	HAL_RTC_GetTime
 2912              	.LVL198:
 340:Core/Src/main.c **** 
 2913              		.loc 1 340 2 view .LVU836
 2914 001e 2246     		mov	r2, r4
 2915 0020 6946     		mov	r1, sp
 2916 0022 2846     		mov	r0, r5
 2917 0024 FFF7FEFF 		bl	HAL_RTC_GetDate
 2918              	.LVL199:
 342:Core/Src/main.c **** 		perimeterTracking = 1;
 2919              		.loc 1 342 2 view .LVU837
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 109


 342:Core/Src/main.c **** 		perimeterTracking = 1;
 2920              		.loc 1 342 14 is_stmt 0 view .LVU838
 2921 0028 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 342:Core/Src/main.c **** 		perimeterTracking = 1;
 2922              		.loc 1 342 21 view .LVU839
 2923 002c 054B     		ldr	r3, .L201+4
 2924 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 342:Core/Src/main.c **** 		perimeterTracking = 1;
 2925              		.loc 1 342 5 view .LVU840
 2926 0030 9A42     		cmp	r2, r3
 2927 0032 02D3     		bcc	.L198
 343:Core/Src/main.c **** 	}
 2928              		.loc 1 343 3 is_stmt 1 view .LVU841
 343:Core/Src/main.c **** 	}
 2929              		.loc 1 343 21 is_stmt 0 view .LVU842
 2930 0034 044B     		ldr	r3, .L201+8
 2931 0036 0122     		movs	r2, #1
 2932 0038 1A70     		strb	r2, [r3]
 2933              	.L198:
 346:Core/Src/main.c **** 
 2934              		.loc 1 346 1 view .LVU843
 2935 003a 07B0     		add	sp, sp, #28
 2936              	.LCFI36:
 2937              		.cfi_def_cfa_offset 12
 2938              		@ sp needed
 2939 003c 30BD     		pop	{r4, r5, pc}
 2940              	.L202:
 2941 003e 00BF     		.align	2
 2942              	.L201:
 2943 0040 00000000 		.word	hrtc
 2944 0044 00000000 		.word	.LANCHOR31
 2945 0048 00000000 		.word	.LANCHOR35
 2946              		.cfi_endproc
 2947              	.LFE271:
 2949              		.section	.text.rnd,"ax",%progbits
 2950              		.align	1
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2954              		.fpu fpv4-sp-d16
 2956              	rnd:
 2957              	.LVL200:
 2958              	.LFB280:
 458:Core/Src/main.c **** 
 2959              		.loc 1 458 33 is_stmt 1 view -0
 2960              		.cfi_startproc
 2961              		@ args = 0, pretend = 0, frame = 0
 2962              		@ frame_needed = 0, uses_anonymous_args = 0
 458:Core/Src/main.c **** 
 2963              		.loc 1 458 33 is_stmt 0 view .LVU845
 2964 0000 10B5     		push	{r4, lr}
 2965              	.LCFI37:
 2966              		.cfi_def_cfa_offset 8
 2967              		.cfi_offset 4, -8
 2968              		.cfi_offset 14, -4
 2969 0002 0446     		mov	r4, r0
 462:Core/Src/main.c **** 	rndnum = HAL_RNG_GetRandomNumber(&hrng) % maxValue;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 110


 2970              		.loc 1 462 2 is_stmt 1 view .LVU846
 463:Core/Src/main.c **** 	return rndnum;
 2971              		.loc 1 463 2 view .LVU847
 463:Core/Src/main.c **** 	return rndnum;
 2972              		.loc 1 463 11 is_stmt 0 view .LVU848
 2973 0004 0348     		ldr	r0, .L205
 2974              	.LVL201:
 463:Core/Src/main.c **** 	return rndnum;
 2975              		.loc 1 463 11 view .LVU849
 2976 0006 FFF7FEFF 		bl	HAL_RNG_GetRandomNumber
 2977              	.LVL202:
 463:Core/Src/main.c **** 	return rndnum;
 2978              		.loc 1 463 9 view .LVU850
 2979 000a B0FBF4F3 		udiv	r3, r0, r4
 2980              	.LVL203:
 464:Core/Src/main.c **** }
 2981              		.loc 1 464 2 is_stmt 1 view .LVU851
 465:Core/Src/main.c **** 
 2982              		.loc 1 465 1 is_stmt 0 view .LVU852
 2983 000e 04FB1300 		mls	r0, r4, r3, r0
 2984              	.LVL204:
 465:Core/Src/main.c **** 
 2985              		.loc 1 465 1 view .LVU853
 2986 0012 10BD     		pop	{r4, pc}
 2987              	.LVL205:
 2988              	.L206:
 465:Core/Src/main.c **** 
 2989              		.loc 1 465 1 view .LVU854
 2990              		.align	2
 2991              	.L205:
 2992 0014 00000000 		.word	hrng
 2993              		.cfi_endproc
 2994              	.LFE280:
 2996              		.section	.rodata.cutterON.str1.4,"aMS",%progbits,1
 2997              		.align	2
 2998              	.LC1:
 2999 0000 43757474 		.ascii	"Cutter Motor ON\015\012\000"
 2999      6572204D 
 2999      6F746F72 
 2999      204F4E0D 
 2999      0A00
 3000              		.section	.text.cutterON,"ax",%progbits
 3001              		.align	1
 3002              		.syntax unified
 3003              		.thumb
 3004              		.thumb_func
 3005              		.fpu fpv4-sp-d16
 3007              	cutterON:
 3008              	.LFB300:
1269:Core/Src/main.c **** 
 3009              		.loc 1 1269 21 is_stmt 1 view -0
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 0
 3012              		@ frame_needed = 0, uses_anonymous_args = 0
 3013 0000 10B5     		push	{r4, lr}
 3014              	.LCFI38:
 3015              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 111


 3016              		.cfi_offset 4, -8
 3017              		.cfi_offset 14, -4
1271:Core/Src/main.c **** 
 3018              		.loc 1 1271 2 view .LVU856
1271:Core/Src/main.c **** 
 3019              		.loc 1 1271 15 is_stmt 0 view .LVU857
 3020 0002 1B4B     		ldr	r3, .L215
 3021 0004 0122     		movs	r2, #1
 3022 0006 1A70     		strb	r2, [r3]
1273:Core/Src/main.c **** 
 3023              		.loc 1 1273 2 is_stmt 1 view .LVU858
 3024 0008 1A48     		ldr	r0, .L215+4
 3025 000a FFF7FEFF 		bl	Serial_Console
 3026              	.LVL206:
1275:Core/Src/main.c **** 
 3027              		.loc 1 1275 2 view .LVU859
1275:Core/Src/main.c **** 
 3028              		.loc 1 1275 6 is_stmt 0 view .LVU860
 3029 000e 4FF47A70 		mov	r0, #1000
 3030 0012 FFF7FEFF 		bl	rnd
 3031              	.LVL207:
1275:Core/Src/main.c **** 
 3032              		.loc 1 1275 5 view .LVU861
 3033 0016 B0F5FA7F 		cmp	r0, #500
 3034 001a 13D3     		bcc	.L213
 3035              	.LBB42:
1287:Core/Src/main.c **** 
 3036              		.loc 1 1287 17 view .LVU862
 3037 001c 4FF47A74 		mov	r4, #1000
 3038              	.L209:
 3039              	.LVL208:
1287:Core/Src/main.c **** 
 3040              		.loc 1 1287 37 is_stmt 1 discriminator 1 view .LVU863
1287:Core/Src/main.c **** 
 3041              		.loc 1 1287 3 is_stmt 0 discriminator 1 view .LVU864
 3042 0020 40F65923 		movw	r3, #2649
 3043 0024 9C42     		cmp	r4, r3
 3044 0026 21D8     		bhi	.L207
1289:Core/Src/main.c **** 			TIM3->CCR1 = 0;
 3045              		.loc 1 1289 4 is_stmt 1 discriminator 3 view .LVU865
1289:Core/Src/main.c **** 			TIM3->CCR1 = 0;
 3046              		.loc 1 1289 21 is_stmt 0 discriminator 3 view .LVU866
 3047 0028 FFF7FEFF 		bl	HAL_GetTick
 3048              	.LVL209:
1289:Core/Src/main.c **** 			TIM3->CCR1 = 0;
 3049              		.loc 1 1289 19 discriminator 3 view .LVU867
 3050 002c 124B     		ldr	r3, .L215+8
 3051 002e 1860     		str	r0, [r3]
1290:Core/Src/main.c **** 			TIM3->CCR2 = cutterSpeed;
 3052              		.loc 1 1290 4 is_stmt 1 discriminator 3 view .LVU868
1290:Core/Src/main.c **** 			TIM3->CCR2 = cutterSpeed;
 3053              		.loc 1 1290 15 is_stmt 0 discriminator 3 view .LVU869
 3054 0030 124B     		ldr	r3, .L215+12
 3055 0032 0022     		movs	r2, #0
 3056 0034 5A63     		str	r2, [r3, #52]
1291:Core/Src/main.c **** 			HAL_Delay(2);
 3057              		.loc 1 1291 4 is_stmt 1 discriminator 3 view .LVU870
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 112


1291:Core/Src/main.c **** 			HAL_Delay(2);
 3058              		.loc 1 1291 15 is_stmt 0 discriminator 3 view .LVU871
 3059 0036 9C63     		str	r4, [r3, #56]
1292:Core/Src/main.c **** 
 3060              		.loc 1 1292 4 is_stmt 1 discriminator 3 view .LVU872
 3061 0038 0220     		movs	r0, #2
 3062 003a FFF7FEFF 		bl	HAL_Delay
 3063              	.LVL210:
1287:Core/Src/main.c **** 
 3064              		.loc 1 1287 69 discriminator 3 view .LVU873
1287:Core/Src/main.c **** 
 3065              		.loc 1 1287 80 is_stmt 0 discriminator 3 view .LVU874
 3066 003e 0134     		adds	r4, r4, #1
 3067              	.LVL211:
1287:Core/Src/main.c **** 
 3068              		.loc 1 1287 80 discriminator 3 view .LVU875
 3069 0040 A4B2     		uxth	r4, r4
 3070              	.LVL212:
1287:Core/Src/main.c **** 
 3071              		.loc 1 1287 80 discriminator 3 view .LVU876
 3072 0042 EDE7     		b	.L209
 3073              	.LVL213:
 3074              	.L213:
1287:Core/Src/main.c **** 
 3075              		.loc 1 1287 80 discriminator 3 view .LVU877
 3076              	.LBE42:
 3077              	.LBB43:
1277:Core/Src/main.c **** 
 3078              		.loc 1 1277 17 view .LVU878
 3079 0044 4FF47A74 		mov	r4, #1000
 3080              	.L208:
 3081              	.LVL214:
1277:Core/Src/main.c **** 
 3082              		.loc 1 1277 37 is_stmt 1 discriminator 1 view .LVU879
1277:Core/Src/main.c **** 
 3083              		.loc 1 1277 3 is_stmt 0 discriminator 1 view .LVU880
 3084 0048 40F65923 		movw	r3, #2649
 3085 004c 9C42     		cmp	r4, r3
 3086 004e 0DD8     		bhi	.L207
1279:Core/Src/main.c **** 			TIM3->CCR1 = cutterSpeed;
 3087              		.loc 1 1279 4 is_stmt 1 discriminator 3 view .LVU881
1279:Core/Src/main.c **** 			TIM3->CCR1 = cutterSpeed;
 3088              		.loc 1 1279 21 is_stmt 0 discriminator 3 view .LVU882
 3089 0050 FFF7FEFF 		bl	HAL_GetTick
 3090              	.LVL215:
1279:Core/Src/main.c **** 			TIM3->CCR1 = cutterSpeed;
 3091              		.loc 1 1279 19 discriminator 3 view .LVU883
 3092 0054 084B     		ldr	r3, .L215+8
 3093 0056 1860     		str	r0, [r3]
1280:Core/Src/main.c **** 			TIM3->CCR2 = 0;
 3094              		.loc 1 1280 4 is_stmt 1 discriminator 3 view .LVU884
1280:Core/Src/main.c **** 			TIM3->CCR2 = 0;
 3095              		.loc 1 1280 15 is_stmt 0 discriminator 3 view .LVU885
 3096 0058 084B     		ldr	r3, .L215+12
 3097 005a 5C63     		str	r4, [r3, #52]
1281:Core/Src/main.c **** 			HAL_Delay(2);
 3098              		.loc 1 1281 4 is_stmt 1 discriminator 3 view .LVU886
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 113


1281:Core/Src/main.c **** 			HAL_Delay(2);
 3099              		.loc 1 1281 15 is_stmt 0 discriminator 3 view .LVU887
 3100 005c 0022     		movs	r2, #0
 3101 005e 9A63     		str	r2, [r3, #56]
1282:Core/Src/main.c **** 
 3102              		.loc 1 1282 4 is_stmt 1 discriminator 3 view .LVU888
 3103 0060 0220     		movs	r0, #2
 3104 0062 FFF7FEFF 		bl	HAL_Delay
 3105              	.LVL216:
1277:Core/Src/main.c **** 
 3106              		.loc 1 1277 69 discriminator 3 view .LVU889
1277:Core/Src/main.c **** 
 3107              		.loc 1 1277 80 is_stmt 0 discriminator 3 view .LVU890
 3108 0066 0134     		adds	r4, r4, #1
 3109              	.LVL217:
1277:Core/Src/main.c **** 
 3110              		.loc 1 1277 80 discriminator 3 view .LVU891
 3111 0068 A4B2     		uxth	r4, r4
 3112              	.LVL218:
1277:Core/Src/main.c **** 
 3113              		.loc 1 1277 80 discriminator 3 view .LVU892
 3114 006a EDE7     		b	.L208
 3115              	.LVL219:
 3116              	.L207:
1277:Core/Src/main.c **** 
 3117              		.loc 1 1277 80 discriminator 3 view .LVU893
 3118              	.LBE43:
1297:Core/Src/main.c **** 
 3119              		.loc 1 1297 1 view .LVU894
 3120 006c 10BD     		pop	{r4, pc}
 3121              	.L216:
 3122 006e 00BF     		.align	2
 3123              	.L215:
 3124 0070 00000000 		.word	.LANCHOR8
 3125 0074 00000000 		.word	.LC1
 3126 0078 00000000 		.word	Boundary_Timer
 3127 007c 00040040 		.word	1073742848
 3128              		.cfi_endproc
 3129              	.LFE300:
 3131              		.section	.text.ADC_Send,"ax",%progbits
 3132              		.align	1
 3133              		.syntax unified
 3134              		.thumb
 3135              		.thumb_func
 3136              		.fpu fpv4-sp-d16
 3138              	ADC_Send:
 3139              	.LVL220:
 3140              	.LFB303:
1429:Core/Src/main.c **** 
 3141              		.loc 1 1429 32 is_stmt 1 view -0
 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 8
 3144              		@ frame_needed = 0, uses_anonymous_args = 0
1429:Core/Src/main.c **** 
 3145              		.loc 1 1429 32 is_stmt 0 view .LVU896
 3146 0000 70B5     		push	{r4, r5, r6, lr}
 3147              	.LCFI39:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 114


 3148              		.cfi_def_cfa_offset 16
 3149              		.cfi_offset 4, -16
 3150              		.cfi_offset 5, -12
 3151              		.cfi_offset 6, -8
 3152              		.cfi_offset 14, -4
 3153 0002 84B0     		sub	sp, sp, #16
 3154              	.LCFI40:
 3155              		.cfi_def_cfa_offset 32
1433:Core/Src/main.c **** 
 3156              		.loc 1 1433 1 is_stmt 1 view .LVU897
1435:Core/Src/main.c **** ADSwrite[1] = channel;
 3157              		.loc 1 1435 1 view .LVU898
1435:Core/Src/main.c **** ADSwrite[1] = channel;
 3158              		.loc 1 1435 13 is_stmt 0 view .LVU899
 3159 0004 0125     		movs	r5, #1
 3160 0006 8DF80850 		strb	r5, [sp, #8]
1436:Core/Src/main.c **** ADSwrite[2] = 0x83;
 3161              		.loc 1 1436 1 is_stmt 1 view .LVU900
1436:Core/Src/main.c **** ADSwrite[2] = 0x83;
 3162              		.loc 1 1436 13 is_stmt 0 view .LVU901
 3163 000a 8DF80900 		strb	r0, [sp, #9]
1437:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 3, 100);
 3164              		.loc 1 1437 1 is_stmt 1 view .LVU902
1437:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 3, 100);
 3165              		.loc 1 1437 13 is_stmt 0 view .LVU903
 3166 000e 8323     		movs	r3, #131
 3167 0010 8DF80A30 		strb	r3, [sp, #10]
1438:Core/Src/main.c **** ADSwrite[0] = 0x00;
 3168              		.loc 1 1438 1 is_stmt 1 view .LVU904
 3169 0014 0A4C     		ldr	r4, .L219
 3170 0016 6426     		movs	r6, #100
 3171 0018 0096     		str	r6, [sp]
 3172 001a 0323     		movs	r3, #3
 3173 001c 02AA     		add	r2, sp, #8
 3174 001e 9021     		movs	r1, #144
 3175 0020 2046     		mov	r0, r4
 3176              	.LVL221:
1438:Core/Src/main.c **** ADSwrite[0] = 0x00;
 3177              		.loc 1 1438 1 is_stmt 0 view .LVU905
 3178 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3179              	.LVL222:
1439:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 1, 100);
 3180              		.loc 1 1439 1 is_stmt 1 view .LVU906
1439:Core/Src/main.c **** HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS << 1, ADSwrite, 1, 100);
 3181              		.loc 1 1439 13 is_stmt 0 view .LVU907
 3182 0026 0023     		movs	r3, #0
 3183 0028 8DF80830 		strb	r3, [sp, #8]
1440:Core/Src/main.c **** 
 3184              		.loc 1 1440 1 is_stmt 1 view .LVU908
 3185 002c 0096     		str	r6, [sp]
 3186 002e 2B46     		mov	r3, r5
 3187 0030 02AA     		add	r2, sp, #8
 3188 0032 9021     		movs	r1, #144
 3189 0034 2046     		mov	r0, r4
 3190 0036 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3191              	.LVL223:
1442:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 115


 3192              		.loc 1 1442 1 is_stmt 0 view .LVU909
 3193 003a 04B0     		add	sp, sp, #16
 3194              	.LCFI41:
 3195              		.cfi_def_cfa_offset 16
 3196              		@ sp needed
 3197 003c 70BD     		pop	{r4, r5, r6, pc}
 3198              	.L220:
 3199 003e 00BF     		.align	2
 3200              	.L219:
 3201 0040 00000000 		.word	hi2c1
 3202              		.cfi_endproc
 3203              	.LFE303:
 3205              		.section	.text.ADC_Receive,"ax",%progbits
 3206              		.align	1
 3207              		.syntax unified
 3208              		.thumb
 3209              		.thumb_func
 3210              		.fpu fpv4-sp-d16
 3212              	ADC_Receive:
 3213              	.LFB304:
1444:Core/Src/main.c **** 
 3214              		.loc 1 1444 19 is_stmt 1 view -0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 8
 3217              		@ frame_needed = 0, uses_anonymous_args = 0
 3218 0000 00B5     		push	{lr}
 3219              	.LCFI42:
 3220              		.cfi_def_cfa_offset 4
 3221              		.cfi_offset 14, -4
 3222 0002 85B0     		sub	sp, sp, #20
 3223              	.LCFI43:
 3224              		.cfi_def_cfa_offset 24
1448:Core/Src/main.c **** int reading;
 3225              		.loc 1 1448 1 view .LVU911
1449:Core/Src/main.c **** 
 3226              		.loc 1 1449 1 view .LVU912
1451:Core/Src/main.c **** 
 3227              		.loc 1 1451 5 view .LVU913
 3228 0004 6423     		movs	r3, #100
 3229 0006 0093     		str	r3, [sp]
 3230 0008 0223     		movs	r3, #2
 3231 000a 02AA     		add	r2, sp, #8
 3232 000c 9021     		movs	r1, #144
 3233 000e 0848     		ldr	r0, .L225
 3234 0010 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3235              	.LVL224:
1453:Core/Src/main.c **** 
 3236              		.loc 1 1453 5 view .LVU914
1453:Core/Src/main.c **** 
 3237              		.loc 1 1453 24 is_stmt 0 view .LVU915
 3238 0014 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
1453:Core/Src/main.c **** 
 3239              		.loc 1 1453 43 view .LVU916
 3240 0018 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
1453:Core/Src/main.c **** 
 3241              		.loc 1 1453 13 view .LVU917
 3242 001c 40EA0320 		orr	r0, r0, r3, lsl #8
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 116


 3243              	.LVL225:
1455:Core/Src/main.c **** 					reading = 0;
 3244              		.loc 1 1455 5 is_stmt 1 view .LVU918
1455:Core/Src/main.c **** 					reading = 0;
 3245              		.loc 1 1455 7 is_stmt 0 view .LVU919
 3246 0020 B0F5004F 		cmp	r0, #32768
 3247 0024 00D9     		bls	.L221
1456:Core/Src/main.c **** 				}
 3248              		.loc 1 1456 14 view .LVU920
 3249 0026 0020     		movs	r0, #0
 3250              	.LVL226:
1459:Core/Src/main.c **** 
 3251              		.loc 1 1459 3 is_stmt 1 view .LVU921
 3252              	.L221:
1461:Core/Src/main.c **** 
 3253              		.loc 1 1461 1 is_stmt 0 view .LVU922
 3254 0028 05B0     		add	sp, sp, #20
 3255              	.LCFI44:
 3256              		.cfi_def_cfa_offset 4
 3257              		@ sp needed
 3258 002a 5DF804FB 		ldr	pc, [sp], #4
 3259              	.L226:
 3260 002e 00BF     		.align	2
 3261              	.L225:
 3262 0030 00000000 		.word	hi2c1
 3263              		.cfi_endproc
 3264              	.LFE304:
 3266              		.global	__aeabi_dsub
 3267              		.global	__aeabi_ddiv
 3268              		.global	__aeabi_d2f
 3269              		.global	__aeabi_dcmplt
 3270              		.global	__aeabi_dcmpge
 3271              		.section	.text.CheckMotorCurrent,"ax",%progbits
 3272              		.align	1
 3273              		.syntax unified
 3274              		.thumb
 3275              		.thumb_func
 3276              		.fpu fpv4-sp-d16
 3278              	CheckMotorCurrent:
 3279              	.LVL227:
 3280              	.LFB286:
 607:Core/Src/main.c **** 
 3281              		.loc 1 607 33 is_stmt 1 view -0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 0, uses_anonymous_args = 0
 607:Core/Src/main.c **** 
 3285              		.loc 1 607 33 is_stmt 0 view .LVU924
 3286 0000 10B5     		push	{r4, lr}
 3287              	.LCFI45:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 3291 0002 2DED028B 		vpush.64	{d8}
 3292              	.LCFI46:
 3293              		.cfi_def_cfa_offset 16
 3294              		.cfi_offset 80, -16
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 117


 3295              		.cfi_offset 81, -12
 611:Core/Src/main.c **** 	        if (M1_idx == 10 || M2_idx == 10 || C1_idx == 10) Force_Active = 1;
 3296              		.loc 1 611 4 is_stmt 1 view .LVU925
 612:Core/Src/main.c **** 
 3297              		.loc 1 612 10 view .LVU926
 612:Core/Src/main.c **** 
 3298              		.loc 1 612 21 is_stmt 0 view .LVU927
 3299 0006 B04B     		ldr	r3, .L255+24
 3300 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 612:Core/Src/main.c **** 
 3301              		.loc 1 612 13 view .LVU928
 3302 000a 0A2C     		cmp	r4, #10
 3303 000c 07D0     		beq	.L228
 612:Core/Src/main.c **** 
 3304              		.loc 1 612 37 discriminator 2 view .LVU929
 3305 000e AF4B     		ldr	r3, .L255+28
 3306 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 612:Core/Src/main.c **** 
 3307              		.loc 1 612 27 discriminator 2 view .LVU930
 3308 0012 0A2B     		cmp	r3, #10
 3309 0014 03D0     		beq	.L228
 612:Core/Src/main.c **** 
 3310              		.loc 1 612 53 discriminator 4 view .LVU931
 3311 0016 AE4B     		ldr	r3, .L255+32
 3312 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 612:Core/Src/main.c **** 
 3313              		.loc 1 612 43 discriminator 4 view .LVU932
 3314 001a 0A2B     		cmp	r3, #10
 3315 001c 02D1     		bne	.L229
 3316              	.L228:
 612:Core/Src/main.c **** 
 3317              		.loc 1 612 60 is_stmt 1 discriminator 5 view .LVU933
 612:Core/Src/main.c **** 
 3318              		.loc 1 612 73 is_stmt 0 discriminator 5 view .LVU934
 3319 001e AD4B     		ldr	r3, .L255+36
 3320 0020 0122     		movs	r2, #1
 3321 0022 1A70     		strb	r2, [r3]
 3322              	.L229:
 614:Core/Src/main.c **** 				M1_Value = RAW;
 3323              		.loc 1 614 4 is_stmt 1 view .LVU935
 614:Core/Src/main.c **** 				M1_Value = RAW;
 3324              		.loc 1 614 16 is_stmt 0 view .LVU936
 3325 0024 AC4B     		ldr	r3, .L255+40
 3326 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614:Core/Src/main.c **** 				M1_Value = RAW;
 3327              		.loc 1 614 7 view .LVU937
 3328 0028 C12B     		cmp	r3, #193
 3329 002a 05D0     		beq	.L251
 642:Core/Src/main.c **** 				M2_Value = RAW;
 3330              		.loc 1 642 9 is_stmt 1 view .LVU938
 642:Core/Src/main.c **** 				M2_Value = RAW;
 3331              		.loc 1 642 12 is_stmt 0 view .LVU939
 3332 002c E12B     		cmp	r3, #225
 3333 002e 00F09F80 		beq	.L252
 3334              	.LVL228:
 3335              	.L227:
 670:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 118


 3336              		.loc 1 670 1 view .LVU940
 3337 0032 BDEC028B 		vldm	sp!, {d8}
 3338              	.LCFI47:
 3339              		.cfi_remember_state
 3340              		.cfi_restore 80
 3341              		.cfi_restore 81
 3342              		.cfi_def_cfa_offset 8
 3343 0036 10BD     		pop	{r4, pc}
 3344              	.LVL229:
 3345              	.L251:
 3346              	.LCFI48:
 3347              		.cfi_restore_state
 3348              	.LBB44:
 615:Core/Src/main.c **** 	            M1 = fabs(((M1_Value * 0.1875) - 2500) / 100);
 3349              		.loc 1 615 5 is_stmt 1 view .LVU941
 615:Core/Src/main.c **** 	            M1 = fabs(((M1_Value * 0.1875) - 2500) / 100);
 3350              		.loc 1 615 14 is_stmt 0 view .LVU942
 3351 0038 A84B     		ldr	r3, .L255+44
 3352 003a 1860     		str	r0, [r3]
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3353              		.loc 1 616 14 is_stmt 1 view .LVU943
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3354              		.loc 1 616 35 is_stmt 0 view .LVU944
 3355 003c FFF7FEFF 		bl	__aeabi_i2d
 3356              	.LVL230:
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3357              		.loc 1 616 35 view .LVU945
 3358 0040 0022     		movs	r2, #0
 3359 0042 A74B     		ldr	r3, .L255+48
 3360 0044 FFF7FEFF 		bl	__aeabi_dmul
 3361              	.LVL231:
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3362              		.loc 1 616 45 view .LVU946
 3363 0048 99A3     		adr	r3, .L255
 3364 004a D3E90023 		ldrd	r2, [r3]
 3365 004e FFF7FEFF 		bl	__aeabi_dsub
 3366              	.LVL232:
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3367              		.loc 1 616 53 view .LVU947
 3368 0052 0022     		movs	r2, #0
 3369 0054 A34B     		ldr	r3, .L255+52
 3370 0056 FFF7FEFF 		bl	__aeabi_ddiv
 3371              	.LVL233:
 3372 005a FFF7FEFF 		bl	__aeabi_d2f
 3373              	.LVL234:
 3374 005e 08EE100A 		vmov	s16, r0
 616:Core/Src/main.c **** 	            if (Initial_Start == 0) M1_error = M1;
 3375              		.loc 1 616 17 view .LVU948
 3376 0062 B0EEC88A 		vabs.f32	s16, s16
 3377              	.LVL235:
 617:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
 3378              		.loc 1 617 14 is_stmt 1 view .LVU949
 617:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
 3379              		.loc 1 617 32 is_stmt 0 view .LVU950
 3380 0066 A04B     		ldr	r3, .L255+56
 3381 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 119


 3382              		.loc 1 617 17 view .LVU951
 3383 006a 13B9     		cbnz	r3, .L231
 617:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
 3384              		.loc 1 617 38 is_stmt 1 discriminator 1 view .LVU952
 617:Core/Src/main.c **** 	            M1_amp = fabs(M1 - M1_error);
 3385              		.loc 1 617 47 is_stmt 0 discriminator 1 view .LVU953
 3386 006c 9F4B     		ldr	r3, .L255+60
 3387 006e 83ED008A 		vstr.32	s16, [r3]
 3388              	.L231:
 618:Core/Src/main.c **** 	            M1_force[M1_idx] = M1_amp;
 3389              		.loc 1 618 14 is_stmt 1 view .LVU954
 618:Core/Src/main.c **** 	            M1_force[M1_idx] = M1_amp;
 3390              		.loc 1 618 31 is_stmt 0 view .LVU955
 3391 0072 9E4B     		ldr	r3, .L255+60
 3392 0074 D3ED007A 		vldr.32	s15, [r3]
 3393 0078 38EE678A 		vsub.f32	s16, s16, s15
 3394              	.LVL236:
 618:Core/Src/main.c **** 	            M1_force[M1_idx] = M1_amp;
 3395              		.loc 1 618 23 view .LVU956
 3396 007c B0EEC88A 		vabs.f32	s16, s16
 618:Core/Src/main.c **** 	            M1_force[M1_idx] = M1_amp;
 3397              		.loc 1 618 21 view .LVU957
 3398 0080 9B4B     		ldr	r3, .L255+64
 3399 0082 83ED008A 		vstr.32	s16, [r3]
 619:Core/Src/main.c **** 	            M1_idx++;
 3400              		.loc 1 619 14 is_stmt 1 view .LVU958
 619:Core/Src/main.c **** 	            M1_idx++;
 3401              		.loc 1 619 31 is_stmt 0 view .LVU959
 3402 0086 9B4B     		ldr	r3, .L255+68
 3403 0088 03EB8403 		add	r3, r3, r4, lsl #2
 3404 008c 83ED008A 		vstr.32	s16, [r3]
 620:Core/Src/main.c **** 	            if (M1_idx == 20) M1_idx = 0;
 3405              		.loc 1 620 14 is_stmt 1 view .LVU960
 620:Core/Src/main.c **** 	            if (M1_idx == 20) M1_idx = 0;
 3406              		.loc 1 620 20 is_stmt 0 view .LVU961
 3407 0090 0134     		adds	r4, r4, #1
 3408 0092 E4B2     		uxtb	r4, r4
 3409 0094 8C4B     		ldr	r3, .L255+24
 3410 0096 1C70     		strb	r4, [r3]
 621:Core/Src/main.c **** 	            float ForceM1 = 0;
 3411              		.loc 1 621 14 is_stmt 1 view .LVU962
 621:Core/Src/main.c **** 	            float ForceM1 = 0;
 3412              		.loc 1 621 17 is_stmt 0 view .LVU963
 3413 0098 142C     		cmp	r4, #20
 3414 009a 03D0     		beq	.L253
 3415              	.L232:
 622:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 3416              		.loc 1 622 14 is_stmt 1 view .LVU964
 3417              	.LVL237:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3418              		.loc 1 623 14 view .LVU965
 3419              	.LBB45:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3420              		.loc 1 623 19 view .LVU966
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3421              		.loc 1 623 23 is_stmt 0 view .LVU967
 3422 009c 0023     		movs	r3, #0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 120


 3423              	.LBE45:
 622:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 3424              		.loc 1 622 20 view .LVU968
 3425 009e DFED967A 		vldr.32	s15, .L255+72
 3426              	.LBB46:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3427              		.loc 1 623 14 view .LVU969
 3428 00a2 0AE0     		b	.L233
 3429              	.LVL238:
 3430              	.L253:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3431              		.loc 1 623 14 view .LVU970
 3432              	.LBE46:
 621:Core/Src/main.c **** 	            float ForceM1 = 0;
 3433              		.loc 1 621 32 is_stmt 1 discriminator 1 view .LVU971
 621:Core/Src/main.c **** 	            float ForceM1 = 0;
 3434              		.loc 1 621 39 is_stmt 0 discriminator 1 view .LVU972
 3435 00a4 0022     		movs	r2, #0
 3436 00a6 1A70     		strb	r2, [r3]
 3437 00a8 F8E7     		b	.L232
 3438              	.LVL239:
 3439              	.L234:
 3440              	.LBB47:
 624:Core/Src/main.c **** 	            }
 3441              		.loc 1 624 15 is_stmt 1 discriminator 3 view .LVU973
 624:Core/Src/main.c **** 	            }
 3442              		.loc 1 624 34 is_stmt 0 discriminator 3 view .LVU974
 3443 00aa 924A     		ldr	r2, .L255+68
 3444 00ac 02EB8302 		add	r2, r2, r3, lsl #2
 3445 00b0 92ED007A 		vldr.32	s14, [r2]
 624:Core/Src/main.c **** 	            }
 3446              		.loc 1 624 23 discriminator 3 view .LVU975
 3447 00b4 77EE877A 		vadd.f32	s15, s15, s14
 3448              	.LVL240:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3449              		.loc 1 623 38 is_stmt 1 discriminator 3 view .LVU976
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3450              		.loc 1 623 39 is_stmt 0 discriminator 3 view .LVU977
 3451 00b8 0133     		adds	r3, r3, #1
 3452              	.LVL241:
 3453              	.L233:
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3454              		.loc 1 623 30 is_stmt 1 discriminator 1 view .LVU978
 623:Core/Src/main.c **** 	            	ForceM1 += M1_force[x];
 3455              		.loc 1 623 14 is_stmt 0 discriminator 1 view .LVU979
 3456 00ba 132B     		cmp	r3, #19
 3457 00bc F5DD     		ble	.L234
 3458              	.LBE47:
 626:Core/Src/main.c **** 	            if (M1_F < 0.1) M1_F = 0.1;
 3459              		.loc 1 626 14 is_stmt 1 view .LVU980
 626:Core/Src/main.c **** 	            if (M1_F < 0.1) M1_F = 0.1;
 3460              		.loc 1 626 29 is_stmt 0 view .LVU981
 3461 00be F3EE046A 		vmov.f32	s13, #2.0e+1
 3462 00c2 87EEA67A 		vdiv.f32	s14, s15, s13
 626:Core/Src/main.c **** 	            if (M1_F < 0.1) M1_F = 0.1;
 3463              		.loc 1 626 19 view .LVU982
 3464 00c6 8D4B     		ldr	r3, .L255+76
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 121


 3465              	.LVL242:
 626:Core/Src/main.c **** 	            if (M1_F < 0.1) M1_F = 0.1;
 3466              		.loc 1 626 19 view .LVU983
 3467 00c8 83ED007A 		vstr.32	s14, [r3]
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3468              		.loc 1 627 14 is_stmt 1 view .LVU984
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3469              		.loc 1 627 23 is_stmt 0 view .LVU985
 3470 00cc 17EE100A 		vmov	r0, s14
 3471              	.LVL243:
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3472              		.loc 1 627 23 view .LVU986
 3473 00d0 FFF7FEFF 		bl	__aeabi_f2d
 3474              	.LVL244:
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3475              		.loc 1 627 17 view .LVU987
 3476 00d4 78A3     		adr	r3, .L255+8
 3477 00d6 D3E90023 		ldrd	r2, [r3]
 3478 00da FFF7FEFF 		bl	__aeabi_dcmplt
 3479              	.LVL245:
 3480 00de 10B1     		cbz	r0, .L235
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3481              		.loc 1 627 30 is_stmt 1 discriminator 1 view .LVU988
 627:Core/Src/main.c **** 	            if ((M1_amp >= 0.3 || M1_amp >= M1_F * Motor_Limit) && State == (FORWARD || RIGHT) && 
 3482              		.loc 1 627 35 is_stmt 0 discriminator 1 view .LVU989
 3483 00e0 864B     		ldr	r3, .L255+76
 3484 00e2 874A     		ldr	r2, .L255+80
 3485 00e4 1A60     		str	r2, [r3]	@ float
 3486              	.L235:
 628:Core/Src/main.c **** 
 3487              		.loc 1 628 14 is_stmt 1 view .LVU990
 628:Core/Src/main.c **** 
 3488              		.loc 1 628 26 is_stmt 0 view .LVU991
 3489 00e6 18EE100A 		vmov	r0, s16
 3490 00ea FFF7FEFF 		bl	__aeabi_f2d
 3491              	.LVL246:
 628:Core/Src/main.c **** 
 3492              		.loc 1 628 17 view .LVU992
 3493 00ee 74A3     		adr	r3, .L255+16
 3494 00f0 D3E90023 		ldrd	r2, [r3]
 3495 00f4 FFF7FEFF 		bl	__aeabi_dcmpge
 3496              	.LVL247:
 3497 00f8 60B9     		cbnz	r0, .L237
 628:Core/Src/main.c **** 
 3498              		.loc 1 628 51 discriminator 2 view .LVU993
 3499 00fa 804B     		ldr	r3, .L255+76
 3500 00fc D3ED007A 		vldr.32	s15, [r3]
 3501 0100 804B     		ldr	r3, .L255+84
 3502 0102 93ED007A 		vldr.32	s14, [r3]
 3503 0106 67EE877A 		vmul.f32	s15, s15, s14
 628:Core/Src/main.c **** 
 3504              		.loc 1 628 33 discriminator 2 view .LVU994
 3505 010a B4EEE78A 		vcmpe.f32	s16, s15
 3506 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3507 0112 8EDB     		blt	.L227
 3508              	.L237:
 628:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 122


 3509              		.loc 1 628 75 discriminator 3 view .LVU995
 3510 0114 7C4B     		ldr	r3, .L255+88
 3511 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628:Core/Src/main.c **** 
 3512              		.loc 1 628 66 discriminator 3 view .LVU996
 3513 0118 012B     		cmp	r3, #1
 3514 011a 8AD1     		bne	.L227
 628:Core/Src/main.c **** 
 3515              		.loc 1 628 113 discriminator 4 view .LVU997
 3516 011c 6D4B     		ldr	r3, .L255+36
 3517 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628:Core/Src/main.c **** 
 3518              		.loc 1 628 97 discriminator 4 view .LVU998
 3519 0120 012B     		cmp	r3, #1
 3520 0122 86D1     		bne	.L227
 630:Core/Src/main.c **** 	            		return;
 3521              		.loc 1 630 15 is_stmt 1 view .LVU999
 630:Core/Src/main.c **** 	            		return;
 3522              		.loc 1 630 19 is_stmt 0 view .LVU1000
 3523 0124 4FF48071 		mov	r1, #256
 3524 0128 7848     		ldr	r0, .L255+92
 3525 012a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3526              	.LVL248:
 630:Core/Src/main.c **** 	            		return;
 3527              		.loc 1 630 18 view .LVU1001
 3528 012e 0128     		cmp	r0, #1
 3529 0130 3FF47FAF 		beq	.L227
 633:Core/Src/main.c **** 	            	HAL_Delay(500);
 3530              		.loc 1 633 15 is_stmt 1 view .LVU1002
 3531 0134 FFF7FEFF 		bl	MotorBrake
 3532              	.LVL249:
 634:Core/Src/main.c **** 	            	MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 3533              		.loc 1 634 15 view .LVU1003
 3534 0138 4FF4FA70 		mov	r0, #500
 3535 013c FFF7FEFF 		bl	HAL_Delay
 3536              	.LVL250:
 635:Core/Src/main.c **** 	            	HAL_Delay(500);
 3537              		.loc 1 635 15 view .LVU1004
 3538 0140 4FF4C872 		mov	r2, #400
 3539 0144 40F61F51 		movw	r1, #3359
 3540 0148 4FF4FA60 		mov	r0, #2000
 3541 014c FFF7FEFF 		bl	MotorBackward
 3542              	.LVL251:
 636:Core/Src/main.c **** 	            	MotorRight(MotorMinSpeed, MotorMaxSpeed, 300);
 3543              		.loc 1 636 15 view .LVU1005
 3544 0150 4FF4FA70 		mov	r0, #500
 3545 0154 FFF7FEFF 		bl	HAL_Delay
 3546              	.LVL252:
 637:Core/Src/main.c **** 	            	Force_Active = 0;
 3547              		.loc 1 637 15 view .LVU1006
 3548 0158 4FF49672 		mov	r2, #300
 3549 015c 40F61F51 		movw	r1, #3359
 3550 0160 4FF4FA60 		mov	r0, #2000
 3551 0164 FFF7FEFF 		bl	MotorRight
 3552              	.LVL253:
 638:Core/Src/main.c **** 
 3553              		.loc 1 638 15 view .LVU1007
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 123


 638:Core/Src/main.c **** 
 3554              		.loc 1 638 28 is_stmt 0 view .LVU1008
 3555 0168 5A4B     		ldr	r3, .L255+36
 3556 016a 0022     		movs	r2, #0
 3557 016c 1A70     		strb	r2, [r3]
 3558 016e 60E7     		b	.L227
 3559              	.LVL254:
 3560              	.L252:
 638:Core/Src/main.c **** 
 3561              		.loc 1 638 28 view .LVU1009
 3562              	.LBE44:
 3563              	.LBB48:
 643:Core/Src/main.c **** 	            M2 = fabs(((M2_Value * 0.1875) - 2500) / 100);
 3564              		.loc 1 643 5 is_stmt 1 view .LVU1010
 643:Core/Src/main.c **** 	            M2 = fabs(((M2_Value * 0.1875) - 2500) / 100);
 3565              		.loc 1 643 14 is_stmt 0 view .LVU1011
 3566 0170 674B     		ldr	r3, .L255+96
 3567 0172 1860     		str	r0, [r3]
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3568              		.loc 1 644 14 is_stmt 1 view .LVU1012
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3569              		.loc 1 644 35 is_stmt 0 view .LVU1013
 3570 0174 FFF7FEFF 		bl	__aeabi_i2d
 3571              	.LVL255:
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3572              		.loc 1 644 35 view .LVU1014
 3573 0178 0022     		movs	r2, #0
 3574 017a 594B     		ldr	r3, .L255+48
 3575 017c FFF7FEFF 		bl	__aeabi_dmul
 3576              	.LVL256:
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3577              		.loc 1 644 45 view .LVU1015
 3578 0180 4BA3     		adr	r3, .L255
 3579 0182 D3E90023 		ldrd	r2, [r3]
 3580 0186 FFF7FEFF 		bl	__aeabi_dsub
 3581              	.LVL257:
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3582              		.loc 1 644 53 view .LVU1016
 3583 018a 0022     		movs	r2, #0
 3584 018c 554B     		ldr	r3, .L255+52
 3585 018e FFF7FEFF 		bl	__aeabi_ddiv
 3586              	.LVL258:
 3587 0192 FFF7FEFF 		bl	__aeabi_d2f
 3588              	.LVL259:
 3589 0196 08EE100A 		vmov	s16, r0
 644:Core/Src/main.c **** 	            if (Initial_Start == 0) M2_error = M2;
 3590              		.loc 1 644 17 view .LVU1017
 3591 019a B0EEC88A 		vabs.f32	s16, s16
 3592              	.LVL260:
 645:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 3593              		.loc 1 645 14 is_stmt 1 view .LVU1018
 645:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 3594              		.loc 1 645 32 is_stmt 0 view .LVU1019
 3595 019e 524B     		ldr	r3, .L255+56
 3596 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 645:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 3597              		.loc 1 645 17 view .LVU1020
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 124


 3598 01a2 13B9     		cbnz	r3, .L240
 645:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 3599              		.loc 1 645 38 is_stmt 1 discriminator 1 view .LVU1021
 645:Core/Src/main.c **** 	            M2_amp = fabs(M2 - M2_error);
 3600              		.loc 1 645 47 is_stmt 0 discriminator 1 view .LVU1022
 3601 01a4 5B4B     		ldr	r3, .L255+100
 3602 01a6 83ED008A 		vstr.32	s16, [r3]
 3603              	.L240:
 646:Core/Src/main.c **** 	            M2_force[M2_idx] = M2_amp;
 3604              		.loc 1 646 14 is_stmt 1 view .LVU1023
 646:Core/Src/main.c **** 	            M2_force[M2_idx] = M2_amp;
 3605              		.loc 1 646 31 is_stmt 0 view .LVU1024
 3606 01aa 5A4B     		ldr	r3, .L255+100
 3607 01ac D3ED007A 		vldr.32	s15, [r3]
 3608 01b0 38EE678A 		vsub.f32	s16, s16, s15
 3609              	.LVL261:
 646:Core/Src/main.c **** 	            M2_force[M2_idx] = M2_amp;
 3610              		.loc 1 646 23 view .LVU1025
 3611 01b4 B0EEC88A 		vabs.f32	s16, s16
 646:Core/Src/main.c **** 	            M2_force[M2_idx] = M2_amp;
 3612              		.loc 1 646 21 view .LVU1026
 3613 01b8 574B     		ldr	r3, .L255+104
 3614 01ba 83ED008A 		vstr.32	s16, [r3]
 647:Core/Src/main.c **** 	            M2_idx++;
 3615              		.loc 1 647 14 is_stmt 1 view .LVU1027
 647:Core/Src/main.c **** 	            M2_idx++;
 3616              		.loc 1 647 22 is_stmt 0 view .LVU1028
 3617 01be 4349     		ldr	r1, .L255+28
 3618 01c0 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 647:Core/Src/main.c **** 	            M2_idx++;
 3619              		.loc 1 647 31 view .LVU1029
 3620 01c2 564A     		ldr	r2, .L255+108
 3621 01c4 02EB8302 		add	r2, r2, r3, lsl #2
 3622 01c8 82ED008A 		vstr.32	s16, [r2]
 648:Core/Src/main.c **** 	            if (M2_idx == 20) M2_idx = 0;
 3623              		.loc 1 648 14 is_stmt 1 view .LVU1030
 648:Core/Src/main.c **** 	            if (M2_idx == 20) M2_idx = 0;
 3624              		.loc 1 648 20 is_stmt 0 view .LVU1031
 3625 01cc 0133     		adds	r3, r3, #1
 3626 01ce DBB2     		uxtb	r3, r3
 3627 01d0 0B70     		strb	r3, [r1]
 649:Core/Src/main.c **** 	            float ForceM2 = 0;
 3628              		.loc 1 649 14 is_stmt 1 view .LVU1032
 649:Core/Src/main.c **** 	            float ForceM2 = 0;
 3629              		.loc 1 649 17 is_stmt 0 view .LVU1033
 3630 01d2 142B     		cmp	r3, #20
 3631 01d4 03D0     		beq	.L254
 3632              	.L241:
 650:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 3633              		.loc 1 650 14 is_stmt 1 view .LVU1034
 3634              	.LVL262:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3635              		.loc 1 651 14 view .LVU1035
 3636              	.LBB49:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3637              		.loc 1 651 19 view .LVU1036
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 125


 3638              		.loc 1 651 23 is_stmt 0 view .LVU1037
 3639 01d6 0023     		movs	r3, #0
 3640              	.LBE49:
 650:Core/Src/main.c **** 	            for (int x = 0; x < 20; x++) {
 3641              		.loc 1 650 20 view .LVU1038
 3642 01d8 DFED477A 		vldr.32	s15, .L255+72
 3643              	.LBB50:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3644              		.loc 1 651 14 view .LVU1039
 3645 01dc 0AE0     		b	.L242
 3646              	.LVL263:
 3647              	.L254:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3648              		.loc 1 651 14 view .LVU1040
 3649              	.LBE50:
 649:Core/Src/main.c **** 	            float ForceM2 = 0;
 3650              		.loc 1 649 32 is_stmt 1 discriminator 1 view .LVU1041
 649:Core/Src/main.c **** 	            float ForceM2 = 0;
 3651              		.loc 1 649 39 is_stmt 0 discriminator 1 view .LVU1042
 3652 01de 0022     		movs	r2, #0
 3653 01e0 0A70     		strb	r2, [r1]
 3654 01e2 F8E7     		b	.L241
 3655              	.LVL264:
 3656              	.L243:
 3657              	.LBB51:
 652:Core/Src/main.c **** 	            }
 3658              		.loc 1 652 15 is_stmt 1 discriminator 3 view .LVU1043
 652:Core/Src/main.c **** 	            }
 3659              		.loc 1 652 34 is_stmt 0 discriminator 3 view .LVU1044
 3660 01e4 4D4A     		ldr	r2, .L255+108
 3661 01e6 02EB8302 		add	r2, r2, r3, lsl #2
 3662 01ea 92ED007A 		vldr.32	s14, [r2]
 652:Core/Src/main.c **** 	            }
 3663              		.loc 1 652 23 discriminator 3 view .LVU1045
 3664 01ee 77EE877A 		vadd.f32	s15, s15, s14
 3665              	.LVL265:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3666              		.loc 1 651 38 is_stmt 1 discriminator 3 view .LVU1046
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3667              		.loc 1 651 39 is_stmt 0 discriminator 3 view .LVU1047
 3668 01f2 0133     		adds	r3, r3, #1
 3669              	.LVL266:
 3670              	.L242:
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3671              		.loc 1 651 30 is_stmt 1 discriminator 1 view .LVU1048
 651:Core/Src/main.c **** 	            	ForceM2 += M2_force[x];
 3672              		.loc 1 651 14 is_stmt 0 discriminator 1 view .LVU1049
 3673 01f4 132B     		cmp	r3, #19
 3674 01f6 F5DD     		ble	.L243
 3675              	.LBE51:
 654:Core/Src/main.c **** 	            if (M2_F < 0.1) M2_F = 0.1;
 3676              		.loc 1 654 14 is_stmt 1 view .LVU1050
 654:Core/Src/main.c **** 	            if (M2_F < 0.1) M2_F = 0.1;
 3677              		.loc 1 654 29 is_stmt 0 view .LVU1051
 3678 01f8 F3EE046A 		vmov.f32	s13, #2.0e+1
 3679 01fc 87EEA67A 		vdiv.f32	s14, s15, s13
 654:Core/Src/main.c **** 	            if (M2_F < 0.1) M2_F = 0.1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 126


 3680              		.loc 1 654 19 view .LVU1052
 3681 0200 474B     		ldr	r3, .L255+112
 3682              	.LVL267:
 654:Core/Src/main.c **** 	            if (M2_F < 0.1) M2_F = 0.1;
 3683              		.loc 1 654 19 view .LVU1053
 3684 0202 83ED007A 		vstr.32	s14, [r3]
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3685              		.loc 1 655 14 is_stmt 1 view .LVU1054
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3686              		.loc 1 655 23 is_stmt 0 view .LVU1055
 3687 0206 17EE100A 		vmov	r0, s14
 3688              	.LVL268:
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3689              		.loc 1 655 23 view .LVU1056
 3690 020a FFF7FEFF 		bl	__aeabi_f2d
 3691              	.LVL269:
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3692              		.loc 1 655 17 view .LVU1057
 3693 020e 2AA3     		adr	r3, .L255+8
 3694 0210 D3E90023 		ldrd	r2, [r3]
 3695 0214 FFF7FEFF 		bl	__aeabi_dcmplt
 3696              	.LVL270:
 3697 0218 10B1     		cbz	r0, .L244
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3698              		.loc 1 655 30 is_stmt 1 discriminator 1 view .LVU1058
 655:Core/Src/main.c **** 	            if ((M2_amp >= 0.3 || M2_amp >= M2_F * Motor_Limit) && State == (FORWARD || LEFT) && F
 3699              		.loc 1 655 35 is_stmt 0 discriminator 1 view .LVU1059
 3700 021a 414B     		ldr	r3, .L255+112
 3701 021c 384A     		ldr	r2, .L255+80
 3702 021e 1A60     		str	r2, [r3]	@ float
 3703              	.L244:
 656:Core/Src/main.c **** 
 3704              		.loc 1 656 14 is_stmt 1 view .LVU1060
 656:Core/Src/main.c **** 
 3705              		.loc 1 656 26 is_stmt 0 view .LVU1061
 3706 0220 18EE100A 		vmov	r0, s16
 3707 0224 FFF7FEFF 		bl	__aeabi_f2d
 3708              	.LVL271:
 656:Core/Src/main.c **** 
 3709              		.loc 1 656 17 view .LVU1062
 3710 0228 25A3     		adr	r3, .L255+16
 3711 022a D3E90023 		ldrd	r2, [r3]
 3712 022e FFF7FEFF 		bl	__aeabi_dcmpge
 3713              	.LVL272:
 3714 0232 68B9     		cbnz	r0, .L246
 656:Core/Src/main.c **** 
 3715              		.loc 1 656 51 discriminator 2 view .LVU1063
 3716 0234 3A4B     		ldr	r3, .L255+112
 3717 0236 D3ED007A 		vldr.32	s15, [r3]
 3718 023a 324B     		ldr	r3, .L255+84
 3719 023c 93ED007A 		vldr.32	s14, [r3]
 3720 0240 67EE877A 		vmul.f32	s15, s15, s14
 656:Core/Src/main.c **** 
 3721              		.loc 1 656 33 discriminator 2 view .LVU1064
 3722 0244 B4EEE78A 		vcmpe.f32	s16, s15
 3723 0248 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3724 024c FFF6F1AE 		blt	.L227
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 127


 3725              	.L246:
 656:Core/Src/main.c **** 
 3726              		.loc 1 656 75 discriminator 3 view .LVU1065
 3727 0250 2D4B     		ldr	r3, .L255+88
 3728 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656:Core/Src/main.c **** 
 3729              		.loc 1 656 66 discriminator 3 view .LVU1066
 3730 0254 012B     		cmp	r3, #1
 3731 0256 7FF4ECAE 		bne	.L227
 656:Core/Src/main.c **** 
 3732              		.loc 1 656 112 discriminator 4 view .LVU1067
 3733 025a 1E4B     		ldr	r3, .L255+36
 3734 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656:Core/Src/main.c **** 
 3735              		.loc 1 656 96 discriminator 4 view .LVU1068
 3736 025e 012B     		cmp	r3, #1
 3737 0260 7FF4E7AE 		bne	.L227
 658:Core/Src/main.c **** 	            		return;
 3738              		.loc 1 658 15 is_stmt 1 view .LVU1069
 658:Core/Src/main.c **** 	            		return;
 3739              		.loc 1 658 19 is_stmt 0 view .LVU1070
 3740 0264 4FF48071 		mov	r1, #256
 3741 0268 2848     		ldr	r0, .L255+92
 3742 026a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3743              	.LVL273:
 658:Core/Src/main.c **** 	            		return;
 3744              		.loc 1 658 18 view .LVU1071
 3745 026e 0128     		cmp	r0, #1
 3746 0270 3FF4DFAE 		beq	.L227
 661:Core/Src/main.c **** 	            	HAL_Delay(500);
 3747              		.loc 1 661 15 is_stmt 1 view .LVU1072
 3748 0274 FFF7FEFF 		bl	MotorBrake
 3749              	.LVL274:
 662:Core/Src/main.c **** 	            	MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 3750              		.loc 1 662 15 view .LVU1073
 3751 0278 4FF4FA70 		mov	r0, #500
 3752 027c FFF7FEFF 		bl	HAL_Delay
 3753              	.LVL275:
 663:Core/Src/main.c **** 	            	HAL_Delay(500);
 3754              		.loc 1 663 15 view .LVU1074
 3755 0280 4FF4C872 		mov	r2, #400
 3756 0284 40F61F51 		movw	r1, #3359
 3757 0288 4FF4FA60 		mov	r0, #2000
 3758 028c FFF7FEFF 		bl	MotorBackward
 3759              	.LVL276:
 664:Core/Src/main.c **** 	            	MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300);
 3760              		.loc 1 664 15 view .LVU1075
 3761 0290 4FF4FA70 		mov	r0, #500
 3762 0294 FFF7FEFF 		bl	HAL_Delay
 3763              	.LVL277:
 665:Core/Src/main.c **** 	            	Force_Active = 0;
 3764              		.loc 1 665 15 view .LVU1076
 3765 0298 4FF49672 		mov	r2, #300
 3766 029c 40F61F51 		movw	r1, #3359
 3767 02a0 4FF4FA60 		mov	r0, #2000
 3768 02a4 FFF7FEFF 		bl	MotorLeft
 3769              	.LVL278:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 128


 666:Core/Src/main.c **** 
 3770              		.loc 1 666 15 view .LVU1077
 666:Core/Src/main.c **** 
 3771              		.loc 1 666 28 is_stmt 0 view .LVU1078
 3772 02a8 0A4B     		ldr	r3, .L255+36
 3773 02aa 0022     		movs	r2, #0
 3774 02ac 1A70     		strb	r2, [r3]
 3775 02ae C0E6     		b	.L227
 3776              	.L256:
 3777              		.align	3
 3778              	.L255:
 3779 02b0 00000000 		.word	0
 3780 02b4 0088A340 		.word	1084459008
 3781 02b8 9A999999 		.word	2576980378
 3782 02bc 9999B93F 		.word	1069128089
 3783 02c0 33333333 		.word	858993459
 3784 02c4 3333D33F 		.word	1070805811
 3785 02c8 00000000 		.word	.LANCHOR36
 3786 02cc 00000000 		.word	.LANCHOR37
 3787 02d0 00000000 		.word	.LANCHOR38
 3788 02d4 00000000 		.word	.LANCHOR39
 3789 02d8 00000000 		.word	.LANCHOR40
 3790 02dc 00000000 		.word	.LANCHOR41
 3791 02e0 0000C83F 		.word	1070071808
 3792 02e4 00005940 		.word	1079574528
 3793 02e8 00000000 		.word	.LANCHOR19
 3794 02ec 00000000 		.word	.LANCHOR42
 3795 02f0 00000000 		.word	M1_amp
 3796 02f4 00000000 		.word	M1_force
 3797 02f8 00000000 		.word	0
 3798 02fc 00000000 		.word	.LANCHOR43
 3799 0300 CDCCCC3D 		.word	1036831949
 3800 0304 00000000 		.word	.LANCHOR44
 3801 0308 00000000 		.word	.LANCHOR11
 3802 030c 00000240 		.word	1073872896
 3803 0310 00000000 		.word	.LANCHOR45
 3804 0314 00000000 		.word	.LANCHOR46
 3805 0318 00000000 		.word	M2_amp
 3806 031c 00000000 		.word	M2_force
 3807 0320 00000000 		.word	.LANCHOR47
 3808              	.LBE48:
 3809              		.cfi_endproc
 3810              	.LFE286:
 3812              		.section	.text.CollectADC,"ax",%progbits
 3813              		.align	1
 3814              		.syntax unified
 3815              		.thumb
 3816              		.thumb_func
 3817              		.fpu fpv4-sp-d16
 3819              	CollectADC:
 3820              	.LFB289:
 745:Core/Src/main.c **** 
 3821              		.loc 1 745 19 is_stmt 1 view -0
 3822              		.cfi_startproc
 3823              		@ args = 0, pretend = 0, frame = 0
 3824              		@ frame_needed = 0, uses_anonymous_args = 0
 3825 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 129


 3826              	.LCFI49:
 3827              		.cfi_def_cfa_offset 16
 3828              		.cfi_offset 3, -16
 3829              		.cfi_offset 4, -12
 3830              		.cfi_offset 5, -8
 3831              		.cfi_offset 14, -4
 749:Core/Src/main.c **** 		ADC_Send(Channel);
 3832              		.loc 1 749 2 view .LVU1080
 749:Core/Src/main.c **** 		ADC_Send(Channel);
 3833              		.loc 1 749 14 is_stmt 0 view .LVU1081
 3834 0002 5F4B     		ldr	r3, .L283+8
 3835 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 749:Core/Src/main.c **** 		ADC_Send(Channel);
 3836              		.loc 1 749 5 view .LVU1082
 3837 0006 C128     		cmp	r0, #193
 3838 0008 11D0     		beq	.L273
 3839              	.L258:
 754:Core/Src/main.c **** 		ADC_Send(Channel);
 3840              		.loc 1 754 7 is_stmt 1 view .LVU1083
 754:Core/Src/main.c **** 		ADC_Send(Channel);
 3841              		.loc 1 754 10 is_stmt 0 view .LVU1084
 3842 000a E128     		cmp	r0, #225
 3843 000c 1DD0     		beq	.L274
 3844              	.L260:
 759:Core/Src/main.c **** 		ADC_Send(Channel);
 3845              		.loc 1 759 7 is_stmt 1 view .LVU1085
 759:Core/Src/main.c **** 		ADC_Send(Channel);
 3846              		.loc 1 759 10 is_stmt 0 view .LVU1086
 3847 000e F128     		cmp	r0, #241
 3848 0010 29D0     		beq	.L275
 3849              	.L261:
 764:Core/Src/main.c **** 		ADC_Send(Channel);
 3850              		.loc 1 764 7 is_stmt 1 view .LVU1087
 764:Core/Src/main.c **** 		ADC_Send(Channel);
 3851              		.loc 1 764 10 is_stmt 0 view .LVU1088
 3852 0012 D128     		cmp	r0, #209
 3853 0014 35D0     		beq	.L276
 3854              	.L259:
 770:Core/Src/main.c **** 		int RAW = 0;
 3855              		.loc 1 770 2 is_stmt 1 view .LVU1089
 770:Core/Src/main.c **** 		int RAW = 0;
 3856              		.loc 1 770 7 is_stmt 0 view .LVU1090
 3857 0016 FFF7FEFF 		bl	HAL_GetTick
 3858              	.LVL279:
 770:Core/Src/main.c **** 		int RAW = 0;
 3859              		.loc 1 770 21 view .LVU1091
 3860 001a 5A4B     		ldr	r3, .L283+12
 3861 001c 1B68     		ldr	r3, [r3]
 3862 001e C01A     		subs	r0, r0, r3
 770:Core/Src/main.c **** 		int RAW = 0;
 3863              		.loc 1 770 5 view .LVU1092
 3864 0020 1328     		cmp	r0, #19
 3865 0022 03D9     		bls	.L257
 770:Core/Src/main.c **** 		int RAW = 0;
 3866              		.loc 1 770 58 discriminator 1 view .LVU1093
 3867 0024 584B     		ldr	r3, .L283+16
 3868 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 130


 770:Core/Src/main.c **** 		int RAW = 0;
 3869              		.loc 1 770 40 discriminator 1 view .LVU1094
 3870 0028 012B     		cmp	r3, #1
 3871 002a 38D0     		beq	.L277
 3872              	.L257:
 800:Core/Src/main.c **** 
 3873              		.loc 1 800 1 view .LVU1095
 3874 002c 38BD     		pop	{r3, r4, r5, pc}
 3875              	.L273:
 749:Core/Src/main.c **** 		ADC_Send(Channel);
 3876              		.loc 1 749 43 discriminator 1 view .LVU1096
 3877 002e 564B     		ldr	r3, .L283+16
 3878 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 749:Core/Src/main.c **** 		ADC_Send(Channel);
 3879              		.loc 1 749 25 discriminator 1 view .LVU1097
 3880 0032 002B     		cmp	r3, #0
 3881 0034 E9D1     		bne	.L258
 750:Core/Src/main.c **** 		Channel_Status = 1;
 3882              		.loc 1 750 3 is_stmt 1 view .LVU1098
 3883 0036 FFF7FEFF 		bl	ADC_Send
 3884              	.LVL280:
 751:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3885              		.loc 1 751 3 view .LVU1099
 751:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3886              		.loc 1 751 18 is_stmt 0 view .LVU1100
 3887 003a 534B     		ldr	r3, .L283+16
 3888 003c 0122     		movs	r2, #1
 3889 003e 1A70     		strb	r2, [r3]
 752:Core/Src/main.c **** 	}
 3890              		.loc 1 752 3 is_stmt 1 view .LVU1101
 752:Core/Src/main.c **** 	}
 3891              		.loc 1 752 15 is_stmt 0 view .LVU1102
 3892 0040 FFF7FEFF 		bl	HAL_GetTick
 3893              	.LVL281:
 752:Core/Src/main.c **** 	}
 3894              		.loc 1 752 13 view .LVU1103
 3895 0044 4F4B     		ldr	r3, .L283+12
 3896 0046 1860     		str	r0, [r3]
 3897 0048 E5E7     		b	.L259
 3898              	.L274:
 754:Core/Src/main.c **** 		ADC_Send(Channel);
 3899              		.loc 1 754 48 discriminator 1 view .LVU1104
 3900 004a 4F4B     		ldr	r3, .L283+16
 3901 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 754:Core/Src/main.c **** 		ADC_Send(Channel);
 3902              		.loc 1 754 30 discriminator 1 view .LVU1105
 3903 004e 002B     		cmp	r3, #0
 3904 0050 DDD1     		bne	.L260
 755:Core/Src/main.c **** 		Channel_Status = 1;
 3905              		.loc 1 755 3 is_stmt 1 view .LVU1106
 3906 0052 FFF7FEFF 		bl	ADC_Send
 3907              	.LVL282:
 756:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3908              		.loc 1 756 3 view .LVU1107
 756:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3909              		.loc 1 756 18 is_stmt 0 view .LVU1108
 3910 0056 4C4B     		ldr	r3, .L283+16
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 131


 3911 0058 0122     		movs	r2, #1
 3912 005a 1A70     		strb	r2, [r3]
 757:Core/Src/main.c **** 	}
 3913              		.loc 1 757 3 is_stmt 1 view .LVU1109
 757:Core/Src/main.c **** 	}
 3914              		.loc 1 757 15 is_stmt 0 view .LVU1110
 3915 005c FFF7FEFF 		bl	HAL_GetTick
 3916              	.LVL283:
 757:Core/Src/main.c **** 	}
 3917              		.loc 1 757 13 view .LVU1111
 3918 0060 484B     		ldr	r3, .L283+12
 3919 0062 1860     		str	r0, [r3]
 3920 0064 D7E7     		b	.L259
 3921              	.L275:
 759:Core/Src/main.c **** 		ADC_Send(Channel);
 3922              		.loc 1 759 48 discriminator 1 view .LVU1112
 3923 0066 484B     		ldr	r3, .L283+16
 3924 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 759:Core/Src/main.c **** 		ADC_Send(Channel);
 3925              		.loc 1 759 30 discriminator 1 view .LVU1113
 3926 006a 002B     		cmp	r3, #0
 3927 006c D1D1     		bne	.L261
 760:Core/Src/main.c **** 		Channel_Status = 1;
 3928              		.loc 1 760 3 is_stmt 1 view .LVU1114
 3929 006e FFF7FEFF 		bl	ADC_Send
 3930              	.LVL284:
 761:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3931              		.loc 1 761 3 view .LVU1115
 761:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3932              		.loc 1 761 18 is_stmt 0 view .LVU1116
 3933 0072 454B     		ldr	r3, .L283+16
 3934 0074 0122     		movs	r2, #1
 3935 0076 1A70     		strb	r2, [r3]
 762:Core/Src/main.c **** 	}
 3936              		.loc 1 762 3 is_stmt 1 view .LVU1117
 762:Core/Src/main.c **** 	}
 3937              		.loc 1 762 15 is_stmt 0 view .LVU1118
 3938 0078 FFF7FEFF 		bl	HAL_GetTick
 3939              	.LVL285:
 762:Core/Src/main.c **** 	}
 3940              		.loc 1 762 13 view .LVU1119
 3941 007c 414B     		ldr	r3, .L283+12
 3942 007e 1860     		str	r0, [r3]
 3943 0080 C9E7     		b	.L259
 3944              	.L276:
 764:Core/Src/main.c **** 		ADC_Send(Channel);
 3945              		.loc 1 764 48 discriminator 1 view .LVU1120
 3946 0082 414B     		ldr	r3, .L283+16
 3947 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 764:Core/Src/main.c **** 		ADC_Send(Channel);
 3948              		.loc 1 764 30 discriminator 1 view .LVU1121
 3949 0086 002B     		cmp	r3, #0
 3950 0088 C5D1     		bne	.L259
 765:Core/Src/main.c **** 		Channel_Status = 1;
 3951              		.loc 1 765 3 is_stmt 1 view .LVU1122
 3952 008a FFF7FEFF 		bl	ADC_Send
 3953              	.LVL286:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 132


 766:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3954              		.loc 1 766 3 view .LVU1123
 766:Core/Src/main.c **** 		ADC_timer = HAL_GetTick();
 3955              		.loc 1 766 18 is_stmt 0 view .LVU1124
 3956 008e 3E4B     		ldr	r3, .L283+16
 3957 0090 0122     		movs	r2, #1
 3958 0092 1A70     		strb	r2, [r3]
 767:Core/Src/main.c **** 	}
 3959              		.loc 1 767 3 is_stmt 1 view .LVU1125
 767:Core/Src/main.c **** 	}
 3960              		.loc 1 767 15 is_stmt 0 view .LVU1126
 3961 0094 FFF7FEFF 		bl	HAL_GetTick
 3962              	.LVL287:
 767:Core/Src/main.c **** 	}
 3963              		.loc 1 767 13 view .LVU1127
 3964 0098 3A4B     		ldr	r3, .L283+12
 3965 009a 1860     		str	r0, [r3]
 3966 009c BBE7     		b	.L259
 3967              	.L277:
 3968              	.LBB52:
 771:Core/Src/main.c **** 		RAW = ADC_Receive();
 3969              		.loc 1 771 3 is_stmt 1 view .LVU1128
 3970              	.LVL288:
 772:Core/Src/main.c **** 
 3971              		.loc 1 772 3 view .LVU1129
 772:Core/Src/main.c **** 
 3972              		.loc 1 772 9 is_stmt 0 view .LVU1130
 3973 009e FFF7FEFF 		bl	ADC_Receive
 3974              	.LVL289:
 3975 00a2 0546     		mov	r5, r0
 3976              	.LVL290:
 774:Core/Src/main.c **** 
 3977              		.loc 1 774 3 is_stmt 1 view .LVU1131
 3978 00a4 FFF7FEFF 		bl	CheckMotorCurrent
 3979              	.LVL291:
 776:Core/Src/main.c **** 			C1_Value = RAW;
 3980              		.loc 1 776 6 view .LVU1132
 776:Core/Src/main.c **** 			C1_Value = RAW;
 3981              		.loc 1 776 18 is_stmt 0 view .LVU1133
 3982 00a8 354B     		ldr	r3, .L283+8
 3983 00aa 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 776:Core/Src/main.c **** 			C1_Value = RAW;
 3984              		.loc 1 776 9 view .LVU1134
 3985 00ac F12C     		cmp	r4, #241
 3986 00ae 0DD0     		beq	.L278
 788:Core/Src/main.c **** 			V1_Value = RAW;
 3987              		.loc 1 788 8 is_stmt 1 view .LVU1135
 788:Core/Src/main.c **** 			V1_Value = RAW;
 3988              		.loc 1 788 11 is_stmt 0 view .LVU1136
 3989 00b0 D12C     		cmp	r4, #209
 3990 00b2 3FD0     		beq	.L279
 3991              	.L265:
 793:Core/Src/main.c **** 		else if (Channel == M2_addr) Channel = C1_addr;
 3992              		.loc 1 793 3 is_stmt 1 view .LVU1137
 793:Core/Src/main.c **** 		else if (Channel == M2_addr) Channel = C1_addr;
 3993              		.loc 1 793 6 is_stmt 0 view .LVU1138
 3994 00b4 C12C     		cmp	r4, #193
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 133


 3995 00b6 4FD0     		beq	.L280
 794:Core/Src/main.c **** 		else if (Channel == C1_addr) Channel = V1_addr;
 3996              		.loc 1 794 8 is_stmt 1 view .LVU1139
 794:Core/Src/main.c **** 		else if (Channel == C1_addr) Channel = V1_addr;
 3997              		.loc 1 794 11 is_stmt 0 view .LVU1140
 3998 00b8 E12C     		cmp	r4, #225
 3999 00ba 54D0     		beq	.L281
 795:Core/Src/main.c **** 		else if (Channel == V1_addr) Channel = M1_addr;
 4000              		.loc 1 795 8 is_stmt 1 view .LVU1141
 795:Core/Src/main.c **** 		else if (Channel == V1_addr) Channel = M1_addr;
 4001              		.loc 1 795 11 is_stmt 0 view .LVU1142
 4002 00bc F12C     		cmp	r4, #241
 4003 00be 56D0     		beq	.L282
 796:Core/Src/main.c **** 		Channel_Status = 0;
 4004              		.loc 1 796 8 is_stmt 1 view .LVU1143
 796:Core/Src/main.c **** 		Channel_Status = 0;
 4005              		.loc 1 796 11 is_stmt 0 view .LVU1144
 4006 00c0 D12C     		cmp	r4, #209
 4007 00c2 4CD1     		bne	.L268
 796:Core/Src/main.c **** 		Channel_Status = 0;
 4008              		.loc 1 796 32 is_stmt 1 discriminator 1 view .LVU1145
 796:Core/Src/main.c **** 		Channel_Status = 0;
 4009              		.loc 1 796 40 is_stmt 0 discriminator 1 view .LVU1146
 4010 00c4 2E4B     		ldr	r3, .L283+8
 4011 00c6 C122     		movs	r2, #193
 4012 00c8 1A70     		strb	r2, [r3]
 4013 00ca 48E0     		b	.L268
 4014              	.L278:
 4015              	.LBB53:
 777:Core/Src/main.c **** 			float C1;
 4016              		.loc 1 777 4 is_stmt 1 view .LVU1147
 777:Core/Src/main.c **** 			float C1;
 4017              		.loc 1 777 13 is_stmt 0 view .LVU1148
 4018 00cc 2F4B     		ldr	r3, .L283+20
 4019 00ce 1D60     		str	r5, [r3]
 778:Core/Src/main.c ****             C1 = fabs(((C1_Value * 0.1875) - 2500) / 100);
 4020              		.loc 1 778 4 is_stmt 1 view .LVU1149
 779:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 4021              		.loc 1 779 13 view .LVU1150
 779:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 4022              		.loc 1 779 34 is_stmt 0 view .LVU1151
 4023 00d0 2846     		mov	r0, r5
 4024 00d2 FFF7FEFF 		bl	__aeabi_i2d
 4025              	.LVL292:
 4026 00d6 0022     		movs	r2, #0
 4027 00d8 2D4B     		ldr	r3, .L283+24
 4028 00da FFF7FEFF 		bl	__aeabi_dmul
 4029              	.LVL293:
 779:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 4030              		.loc 1 779 44 view .LVU1152
 4031 00de 26A3     		adr	r3, .L283
 4032 00e0 D3E90023 		ldrd	r2, [r3]
 4033 00e4 FFF7FEFF 		bl	__aeabi_dsub
 4034              	.LVL294:
 779:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 4035              		.loc 1 779 52 view .LVU1153
 4036 00e8 0022     		movs	r2, #0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 134


 4037 00ea 2A4B     		ldr	r3, .L283+28
 4038 00ec FFF7FEFF 		bl	__aeabi_ddiv
 4039              	.LVL295:
 4040 00f0 FFF7FEFF 		bl	__aeabi_d2f
 4041              	.LVL296:
 4042 00f4 07EE900A 		vmov	s15, r0
 779:Core/Src/main.c ****             if (Initial_Start == 0) C1_error = C1;
 4043              		.loc 1 779 16 view .LVU1154
 4044 00f8 F0EEE77A 		vabs.f32	s15, s15
 4045              	.LVL297:
 780:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 4046              		.loc 1 780 13 is_stmt 1 view .LVU1155
 780:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 4047              		.loc 1 780 31 is_stmt 0 view .LVU1156
 4048 00fc 264B     		ldr	r3, .L283+32
 4049 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 780:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 4050              		.loc 1 780 16 view .LVU1157
 4051 0100 13B9     		cbnz	r3, .L264
 780:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 4052              		.loc 1 780 37 is_stmt 1 discriminator 1 view .LVU1158
 780:Core/Src/main.c ****             C1_amp = fabs(C1 - C1_error);
 4053              		.loc 1 780 46 is_stmt 0 discriminator 1 view .LVU1159
 4054 0102 264B     		ldr	r3, .L283+36
 4055 0104 C3ED007A 		vstr.32	s15, [r3]
 4056              	.L264:
 781:Core/Src/main.c ****             if (C1_amp >= Cutter_Limit) {
 4057              		.loc 1 781 13 is_stmt 1 view .LVU1160
 781:Core/Src/main.c ****             if (C1_amp >= Cutter_Limit) {
 4058              		.loc 1 781 30 is_stmt 0 view .LVU1161
 4059 0108 244B     		ldr	r3, .L283+36
 4060 010a 93ED007A 		vldr.32	s14, [r3]
 4061 010e 77EEC77A 		vsub.f32	s15, s15, s14
 4062              	.LVL298:
 781:Core/Src/main.c ****             if (C1_amp >= Cutter_Limit) {
 4063              		.loc 1 781 22 view .LVU1162
 4064 0112 F0EEE77A 		vabs.f32	s15, s15
 781:Core/Src/main.c ****             if (C1_amp >= Cutter_Limit) {
 4065              		.loc 1 781 20 view .LVU1163
 4066 0116 224B     		ldr	r3, .L283+40
 4067 0118 C3ED007A 		vstr.32	s15, [r3]
 782:Core/Src/main.c ****             	MasterSwitch =  0;
 4068              		.loc 1 782 13 is_stmt 1 view .LVU1164
 782:Core/Src/main.c ****             	MasterSwitch =  0;
 4069              		.loc 1 782 24 is_stmt 0 view .LVU1165
 4070 011c 214B     		ldr	r3, .L283+44
 4071 011e 93ED007A 		vldr.32	s14, [r3]
 782:Core/Src/main.c ****             	MasterSwitch =  0;
 4072              		.loc 1 782 16 view .LVU1166
 4073 0122 F4EEC77A 		vcmpe.f32	s15, s14
 4074 0126 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4075 012a C3DB     		blt	.L265
 783:Core/Src/main.c ****             	return;
 4076              		.loc 1 783 14 is_stmt 1 view .LVU1167
 783:Core/Src/main.c ****             	return;
 4077              		.loc 1 783 27 is_stmt 0 view .LVU1168
 4078 012c 1E4B     		ldr	r3, .L283+48
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 135


 4079 012e 0022     		movs	r2, #0
 4080 0130 1A70     		strb	r2, [r3]
 784:Core/Src/main.c ****             }
 4081              		.loc 1 784 14 is_stmt 1 view .LVU1169
 4082 0132 7BE7     		b	.L257
 4083              	.LVL299:
 4084              	.L279:
 784:Core/Src/main.c ****             }
 4085              		.loc 1 784 14 is_stmt 0 view .LVU1170
 4086              	.LBE53:
 789:Core/Src/main.c ****             Voltage = (V1_Value * 0.1875) * 5.0;
 4087              		.loc 1 789 4 is_stmt 1 view .LVU1171
 789:Core/Src/main.c ****             Voltage = (V1_Value * 0.1875) * 5.0;
 4088              		.loc 1 789 13 is_stmt 0 view .LVU1172
 4089 0134 1D4B     		ldr	r3, .L283+52
 4090 0136 1D60     		str	r5, [r3]
 790:Core/Src/main.c **** 		}
 4091              		.loc 1 790 13 is_stmt 1 view .LVU1173
 790:Core/Src/main.c **** 		}
 4092              		.loc 1 790 33 is_stmt 0 view .LVU1174
 4093 0138 2846     		mov	r0, r5
 4094 013a FFF7FEFF 		bl	__aeabi_i2d
 4095              	.LVL300:
 4096 013e 0022     		movs	r2, #0
 4097 0140 134B     		ldr	r3, .L283+24
 4098 0142 FFF7FEFF 		bl	__aeabi_dmul
 4099              	.LVL301:
 790:Core/Src/main.c **** 		}
 4100              		.loc 1 790 43 view .LVU1175
 4101 0146 0022     		movs	r2, #0
 4102 0148 194B     		ldr	r3, .L283+56
 4103 014a FFF7FEFF 		bl	__aeabi_dmul
 4104              	.LVL302:
 4105 014e FFF7FEFF 		bl	__aeabi_d2f
 4106              	.LVL303:
 790:Core/Src/main.c **** 		}
 4107              		.loc 1 790 21 view .LVU1176
 4108 0152 184B     		ldr	r3, .L283+60
 4109 0154 1860     		str	r0, [r3]	@ float
 4110 0156 ADE7     		b	.L265
 4111              	.L280:
 793:Core/Src/main.c **** 		else if (Channel == M2_addr) Channel = C1_addr;
 4112              		.loc 1 793 27 is_stmt 1 discriminator 1 view .LVU1177
 793:Core/Src/main.c **** 		else if (Channel == M2_addr) Channel = C1_addr;
 4113              		.loc 1 793 35 is_stmt 0 discriminator 1 view .LVU1178
 4114 0158 094B     		ldr	r3, .L283+8
 4115 015a E122     		movs	r2, #225
 4116 015c 1A70     		strb	r2, [r3]
 4117              	.L268:
 797:Core/Src/main.c **** 
 4118              		.loc 1 797 3 is_stmt 1 view .LVU1179
 797:Core/Src/main.c **** 
 4119              		.loc 1 797 18 is_stmt 0 view .LVU1180
 4120 015e 0A4B     		ldr	r3, .L283+16
 4121 0160 0022     		movs	r2, #0
 4122 0162 1A70     		strb	r2, [r3]
 4123 0164 62E7     		b	.L257
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 136


 4124              	.L281:
 794:Core/Src/main.c **** 		else if (Channel == C1_addr) Channel = V1_addr;
 4125              		.loc 1 794 32 is_stmt 1 discriminator 1 view .LVU1181
 794:Core/Src/main.c **** 		else if (Channel == C1_addr) Channel = V1_addr;
 4126              		.loc 1 794 40 is_stmt 0 discriminator 1 view .LVU1182
 4127 0166 064B     		ldr	r3, .L283+8
 4128 0168 F122     		movs	r2, #241
 4129 016a 1A70     		strb	r2, [r3]
 4130 016c F7E7     		b	.L268
 4131              	.L282:
 795:Core/Src/main.c **** 		else if (Channel == V1_addr) Channel = M1_addr;
 4132              		.loc 1 795 32 is_stmt 1 discriminator 1 view .LVU1183
 795:Core/Src/main.c **** 		else if (Channel == V1_addr) Channel = M1_addr;
 4133              		.loc 1 795 40 is_stmt 0 discriminator 1 view .LVU1184
 4134 016e 044B     		ldr	r3, .L283+8
 4135 0170 D122     		movs	r2, #209
 4136 0172 1A70     		strb	r2, [r3]
 4137 0174 F3E7     		b	.L268
 4138              	.L284:
 4139 0176 00BF     		.align	3
 4140              	.L283:
 4141 0178 00000000 		.word	0
 4142 017c 0088A340 		.word	1084459008
 4143 0180 00000000 		.word	.LANCHOR40
 4144 0184 00000000 		.word	.LANCHOR49
 4145 0188 00000000 		.word	.LANCHOR48
 4146 018c 00000000 		.word	.LANCHOR50
 4147 0190 0000C83F 		.word	1070071808
 4148 0194 00005940 		.word	1079574528
 4149 0198 00000000 		.word	.LANCHOR19
 4150 019c 00000000 		.word	.LANCHOR51
 4151 01a0 00000000 		.word	.LANCHOR52
 4152 01a4 00000000 		.word	.LANCHOR53
 4153 01a8 00000000 		.word	.LANCHOR54
 4154 01ac 00000000 		.word	.LANCHOR55
 4155 01b0 00001440 		.word	1075052544
 4156 01b4 00000000 		.word	.LANCHOR56
 4157              	.LBE52:
 4158              		.cfi_endproc
 4159              	.LFE289:
 4161              		.section	.rodata.ChargerConnected.str1.4,"aMS",%progbits,1
 4162              		.align	2
 4163              	.LC2:
 4164 0000 43686172 		.ascii	"Charger disconnected.\015\012\000"
 4164      67657220 
 4164      64697363 
 4164      6F6E6E65 
 4164      63746564 
 4165              		.align	2
 4166              	.LC3:
 4167 0018 43686172 		.ascii	"Charger Connected\015\012\000"
 4167      67657220 
 4167      436F6E6E 
 4167      65637465 
 4167      640D0A00 
 4168              		.align	2
 4169              	.LC4:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 137


 4170 002c 4368616E 		.ascii	"Changing Main Power\015\012\000"
 4170      67696E67 
 4170      204D6169 
 4170      6E20506F 
 4170      7765720D 
 4171 0042 0000     		.align	2
 4172              	.LC5:
 4173 0044 43686172 		.ascii	"Charging activated\015\012\000"
 4173      67696E67 
 4173      20616374 
 4173      69766174 
 4173      65640D0A 
 4174              		.section	.text.ChargerConnected,"ax",%progbits
 4175              		.align	1
 4176              		.syntax unified
 4177              		.thumb
 4178              		.thumb_func
 4179              		.fpu fpv4-sp-d16
 4181              	ChargerConnected:
 4182              	.LFB292:
 838:Core/Src/main.c **** 
 4183              		.loc 1 838 29 is_stmt 1 view -0
 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 0
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
 4187 0000 38B5     		push	{r3, r4, r5, lr}
 4188              	.LCFI50:
 4189              		.cfi_def_cfa_offset 16
 4190              		.cfi_offset 3, -16
 4191              		.cfi_offset 4, -12
 4192              		.cfi_offset 5, -8
 4193              		.cfi_offset 14, -4
 842:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 4194              		.loc 1 842 2 view .LVU1186
 842:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 4195              		.loc 1 842 21 is_stmt 0 view .LVU1187
 4196 0002 2F4B     		ldr	r3, .L294
 4197 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 4198              		.loc 1 842 5 view .LVU1188
 4199 0006 012B     		cmp	r3, #1
 4200 0008 0BD0     		beq	.L286
 842:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 4201              		.loc 1 842 36 discriminator 1 view .LVU1189
 4202 000a 2E4B     		ldr	r3, .L294+4
 4203 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842:Core/Src/main.c **** 		if (Voltage >= Voltage_Fully_Charged && Battery_Ready == 0) {
 4204              		.loc 1 842 26 discriminator 1 view .LVU1190
 4205 000e 012B     		cmp	r3, #1
 4206 0010 07D0     		beq	.L286
 852:Core/Src/main.c **** 		HAL_Delay(HoldChargeDetection);									// Wait for a while so a proper connection is made
 4207              		.loc 1 852 2 is_stmt 1 view .LVU1191
 852:Core/Src/main.c **** 		HAL_Delay(HoldChargeDetection);									// Wait for a while so a proper connection is made
 4208              		.loc 1 852 6 is_stmt 0 view .LVU1192
 4209 0012 4FF48071 		mov	r1, #256
 4210 0016 2C48     		ldr	r0, .L294+8
 4211 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 138


 4212              	.LVL304:
 852:Core/Src/main.c **** 		HAL_Delay(HoldChargeDetection);									// Wait for a while so a proper connection is made
 4213              		.loc 1 852 5 view .LVU1193
 4214 001c 0128     		cmp	r0, #1
 4215 001e 1ED0     		beq	.L293
 4216              	.L285:
 870:Core/Src/main.c **** 
 4217              		.loc 1 870 1 view .LVU1194
 4218 0020 38BD     		pop	{r3, r4, r5, pc}
 4219              	.L286:
 843:Core/Src/main.c **** 			Battery_Ready = 1;
 4220              		.loc 1 843 3 is_stmt 1 view .LVU1195
 843:Core/Src/main.c **** 			Battery_Ready = 1;
 4221              		.loc 1 843 15 is_stmt 0 view .LVU1196
 4222 0022 2A4B     		ldr	r3, .L294+12
 4223 0024 93ED007A 		vldr.32	s14, [r3]
 843:Core/Src/main.c **** 			Battery_Ready = 1;
 4224              		.loc 1 843 6 view .LVU1197
 4225 0028 DFED297A 		vldr.32	s15, .L294+16
 4226 002c B4EEE77A 		vcmpe.f32	s14, s15
 4227 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4228 0034 F4DB     		blt	.L285
 843:Core/Src/main.c **** 			Battery_Ready = 1;
 4229              		.loc 1 843 57 discriminator 1 view .LVU1198
 4230 0036 274B     		ldr	r3, .L294+20
 4231 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 843:Core/Src/main.c **** 			Battery_Ready = 1;
 4232              		.loc 1 843 40 discriminator 1 view .LVU1199
 4233 003a 002B     		cmp	r3, #0
 4234 003c F0D1     		bne	.L285
 844:Core/Src/main.c **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET);
 4235              		.loc 1 844 4 is_stmt 1 view .LVU1200
 844:Core/Src/main.c **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET);
 4236              		.loc 1 844 18 is_stmt 0 view .LVU1201
 4237 003e 254B     		ldr	r3, .L294+20
 4238 0040 0122     		movs	r2, #1
 4239 0042 1A70     		strb	r2, [r3]
 845:Core/Src/main.c **** 			Serial_Console("Charger disconnected.\r\n");
 4240              		.loc 1 845 4 is_stmt 1 view .LVU1202
 4241 0044 0022     		movs	r2, #0
 4242 0046 4FF48061 		mov	r1, #1024
 4243 004a 2348     		ldr	r0, .L294+24
 4244 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 4245              	.LVL305:
 846:Core/Src/main.c **** 			ChargerConnect = 0;
 4246              		.loc 1 846 4 view .LVU1203
 4247 0050 2248     		ldr	r0, .L294+28
 4248 0052 FFF7FEFF 		bl	Serial_Console
 4249              	.LVL306:
 847:Core/Src/main.c **** 		}
 4250              		.loc 1 847 4 view .LVU1204
 847:Core/Src/main.c **** 		}
 4251              		.loc 1 847 19 is_stmt 0 view .LVU1205
 4252 0056 1A4B     		ldr	r3, .L294
 4253 0058 0022     		movs	r2, #0
 4254 005a 1A70     		strb	r2, [r3]
 849:Core/Src/main.c **** 	}
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 139


 4255              		.loc 1 849 3 is_stmt 1 view .LVU1206
 4256 005c E0E7     		b	.L285
 4257              	.L293:
 853:Core/Src/main.c **** 		Force_Active = 0;
 4258              		.loc 1 853 3 view .LVU1207
 4259 005e 204B     		ldr	r3, .L294+32
 4260 0060 1888     		ldrh	r0, [r3]
 4261 0062 FFF7FEFF 		bl	HAL_Delay
 4262              	.LVL307:
 854:Core/Src/main.c **** 		MotorBrake();
 4263              		.loc 1 854 3 view .LVU1208
 854:Core/Src/main.c **** 		MotorBrake();
 4264              		.loc 1 854 16 is_stmt 0 view .LVU1209
 4265 0066 0024     		movs	r4, #0
 4266 0068 1E4B     		ldr	r3, .L294+36
 4267 006a 1C70     		strb	r4, [r3]
 855:Core/Src/main.c **** 		cutterHardBreak();
 4268              		.loc 1 855 3 is_stmt 1 view .LVU1210
 4269 006c FFF7FEFF 		bl	MotorBrake
 4270              	.LVL308:
 856:Core/Src/main.c **** 		Serial_Console("Charger Connected\r\n");
 4271              		.loc 1 856 3 view .LVU1211
 4272 0070 FFF7FEFF 		bl	cutterHardBreak
 4273              	.LVL309:
 857:Core/Src/main.c **** 		HAL_Delay(10000);
 4274              		.loc 1 857 3 view .LVU1212
 4275 0074 1C48     		ldr	r0, .L294+40
 4276 0076 FFF7FEFF 		bl	Serial_Console
 4277              	.LVL310:
 858:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_SET);				// Main Power switch
 4278              		.loc 1 858 3 view .LVU1213
 4279 007a 42F21070 		movw	r0, #10000
 4280 007e FFF7FEFF 		bl	HAL_Delay
 4281              	.LVL311:
 859:Core/Src/main.c **** 		Serial_Console("Changing Main Power\r\n");
 4282              		.loc 1 859 3 view .LVU1214
 4283 0082 0122     		movs	r2, #1
 4284 0084 1146     		mov	r1, r2
 4285 0086 1948     		ldr	r0, .L294+44
 4286 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4287              	.LVL312:
 860:Core/Src/main.c **** 		ChargerConnect = 1;
 4288              		.loc 1 860 3 view .LVU1215
 4289 008c 1848     		ldr	r0, .L294+48
 4290 008e FFF7FEFF 		bl	Serial_Console
 4291              	.LVL313:
 861:Core/Src/main.c **** 		Docked = 1;
 4292              		.loc 1 861 3 view .LVU1216
 861:Core/Src/main.c **** 		Docked = 1;
 4293              		.loc 1 861 18 is_stmt 0 view .LVU1217
 4294 0092 0125     		movs	r5, #1
 4295 0094 0A4B     		ldr	r3, .L294
 4296 0096 1D70     		strb	r5, [r3]
 862:Core/Src/main.c **** 		HAL_Delay(5000);
 4297              		.loc 1 862 3 is_stmt 1 view .LVU1218
 862:Core/Src/main.c **** 		HAL_Delay(5000);
 4298              		.loc 1 862 10 is_stmt 0 view .LVU1219
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 140


 4299 0098 0A4B     		ldr	r3, .L294+4
 4300 009a 1D70     		strb	r5, [r3]
 863:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);			// Charger Switch
 4301              		.loc 1 863 3 is_stmt 1 view .LVU1220
 4302 009c 41F28830 		movw	r0, #5000
 4303 00a0 FFF7FEFF 		bl	HAL_Delay
 4304              	.LVL314:
 864:Core/Src/main.c **** 		Serial_Console("Charging activated\r\n");
 4305              		.loc 1 864 3 view .LVU1221
 4306 00a4 2A46     		mov	r2, r5
 4307 00a6 4FF48061 		mov	r1, #1024
 4308 00aa 0B48     		ldr	r0, .L294+24
 4309 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 4310              	.LVL315:
 865:Core/Src/main.c **** 		perimeterTracking = 0;
 4311              		.loc 1 865 3 view .LVU1222
 4312 00b0 1048     		ldr	r0, .L294+52
 4313 00b2 FFF7FEFF 		bl	Serial_Console
 4314              	.LVL316:
 866:Core/Src/main.c **** 		perimeterTrackingActive = 0;
 4315              		.loc 1 866 3 view .LVU1223
 866:Core/Src/main.c **** 		perimeterTrackingActive = 0;
 4316              		.loc 1 866 21 is_stmt 0 view .LVU1224
 4317 00b6 104B     		ldr	r3, .L294+56
 4318 00b8 1C70     		strb	r4, [r3]
 867:Core/Src/main.c **** 		return;
 4319              		.loc 1 867 3 is_stmt 1 view .LVU1225
 867:Core/Src/main.c **** 		return;
 4320              		.loc 1 867 27 is_stmt 0 view .LVU1226
 4321 00ba 104B     		ldr	r3, .L294+60
 4322 00bc 1C70     		strb	r4, [r3]
 868:Core/Src/main.c **** 		}
 4323              		.loc 1 868 3 is_stmt 1 view .LVU1227
 4324 00be AFE7     		b	.L285
 4325              	.L295:
 4326              		.align	2
 4327              	.L294:
 4328 00c0 00000000 		.word	.LANCHOR57
 4329 00c4 00000000 		.word	.LANCHOR33
 4330 00c8 00000240 		.word	1073872896
 4331 00cc 00000000 		.word	.LANCHOR56
 4332 00d0 0050C346 		.word	1187205120
 4333 00d4 00000000 		.word	.LANCHOR32
 4334 00d8 00080240 		.word	1073874944
 4335 00dc 00000000 		.word	.LC2
 4336 00e0 00000000 		.word	.LANCHOR58
 4337 00e4 00000000 		.word	.LANCHOR39
 4338 00e8 18000000 		.word	.LC3
 4339 00ec 000C0240 		.word	1073875968
 4340 00f0 2C000000 		.word	.LC4
 4341 00f4 44000000 		.word	.LC5
 4342 00f8 00000000 		.word	.LANCHOR35
 4343 00fc 00000000 		.word	.LANCHOR59
 4344              		.cfi_endproc
 4345              	.LFE292:
 4347              		.section	.rodata.CheckVoltage.str1.4,"aMS",%progbits,1
 4348              		.align	2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 141


 4349              	.LC6:
 4350 0000 4C6F7720 		.ascii	"Low Voltage - Searching for perimeter wire...\015\012"
 4350      566F6C74 
 4350      61676520 
 4350      2D205365 
 4350      61726368 
 4351 002f 00       		.ascii	"\000"
 4352              		.section	.text.CheckVoltage,"ax",%progbits
 4353              		.align	1
 4354              		.syntax unified
 4355              		.thumb
 4356              		.thumb_func
 4357              		.fpu fpv4-sp-d16
 4359              	CheckVoltage:
 4360              	.LFB287:
 672:Core/Src/main.c **** 
 4361              		.loc 1 672 21 view -0
 4362              		.cfi_startproc
 4363              		@ args = 0, pretend = 0, frame = 0
 4364              		@ frame_needed = 0, uses_anonymous_args = 0
 4365 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4366              	.LCFI51:
 4367              		.cfi_def_cfa_offset 24
 4368              		.cfi_offset 3, -24
 4369              		.cfi_offset 4, -20
 4370              		.cfi_offset 5, -16
 4371              		.cfi_offset 6, -12
 4372              		.cfi_offset 7, -8
 4373              		.cfi_offset 14, -4
 676:Core/Src/main.c **** 		if (perimeterTracking == 1) return;
 4374              		.loc 1 676 2 view .LVU1229
 676:Core/Src/main.c **** 		if (perimeterTracking == 1) return;
 4375              		.loc 1 676 15 is_stmt 0 view .LVU1230
 4376 0002 144B     		ldr	r3, .L302
 4377 0004 93ED007A 		vldr.32	s14, [r3]
 676:Core/Src/main.c **** 		if (perimeterTracking == 1) return;
 4378              		.loc 1 676 5 view .LVU1231
 4379 0008 DFED137A 		vldr.32	s15, .L302+4
 4380 000c B4EEE77A 		vcmpe.f32	s14, s15
 4381 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4382 0014 1DD5     		bpl	.L296
 677:Core/Src/main.c **** 		sprintf(msg, "Low Voltage - Searching for perimeter wire...\r\n");
 4383              		.loc 1 677 3 is_stmt 1 view .LVU1232
 677:Core/Src/main.c **** 		sprintf(msg, "Low Voltage - Searching for perimeter wire...\r\n");
 4384              		.loc 1 677 25 is_stmt 0 view .LVU1233
 4385 0016 114B     		ldr	r3, .L302+8
 4386 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 677:Core/Src/main.c **** 		sprintf(msg, "Low Voltage - Searching for perimeter wire...\r\n");
 4387              		.loc 1 677 6 view .LVU1234
 4388 001a 012B     		cmp	r3, #1
 4389 001c 19D0     		beq	.L296
 678:Core/Src/main.c **** 		Serial_RPi(msg);
 4390              		.loc 1 678 3 is_stmt 1 view .LVU1235
 4391 001e 104E     		ldr	r6, .L302+12
 4392 0020 104D     		ldr	r5, .L302+16
 4393 0022 06F13007 		add	r7, r6, #48
 4394              	.L299:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 142


 4395 0026 3446     		mov	r4, r6
 4396 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4397 002a 2860     		str	r0, [r5]	@ unaligned
 4398 002c 6960     		str	r1, [r5, #4]	@ unaligned
 4399 002e AA60     		str	r2, [r5, #8]	@ unaligned
 4400 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 4401 0032 2646     		mov	r6, r4
 4402 0034 1035     		adds	r5, r5, #16
 4403 0036 BC42     		cmp	r4, r7
 4404 0038 F5D1     		bne	.L299
 679:Core/Src/main.c **** 		Serial_Console(msg);
 4405              		.loc 1 679 3 view .LVU1236
 4406 003a 0A4C     		ldr	r4, .L302+16
 4407 003c 2046     		mov	r0, r4
 4408 003e FFF7FEFF 		bl	Serial_RPi
 4409              	.LVL317:
 680:Core/Src/main.c **** 		perimeterTracking = 1;
 4410              		.loc 1 680 3 view .LVU1237
 4411 0042 2046     		mov	r0, r4
 4412 0044 FFF7FEFF 		bl	Serial_Console
 4413              	.LVL318:
 681:Core/Src/main.c **** 		cutterOFF();
 4414              		.loc 1 681 3 view .LVU1238
 681:Core/Src/main.c **** 		cutterOFF();
 4415              		.loc 1 681 21 is_stmt 0 view .LVU1239
 4416 0048 044B     		ldr	r3, .L302+8
 4417 004a 0122     		movs	r2, #1
 4418 004c 1A70     		strb	r2, [r3]
 682:Core/Src/main.c **** 	}
 4419              		.loc 1 682 3 is_stmt 1 view .LVU1240
 4420 004e FFF7FEFF 		bl	cutterOFF
 4421              	.LVL319:
 4422              	.L296:
 685:Core/Src/main.c **** 
 4423              		.loc 1 685 1 is_stmt 0 view .LVU1241
 4424 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4425              	.L303:
 4426              		.align	2
 4427              	.L302:
 4428 0054 00000000 		.word	.LANCHOR56
 4429 0058 00E0AB46 		.word	1185669120
 4430 005c 00000000 		.word	.LANCHOR35
 4431 0060 00000000 		.word	.LC6
 4432 0064 00000000 		.word	msg
 4433              		.cfi_endproc
 4434              	.LFE287:
 4436              		.section	.rodata.SendInfo.str1.4,"aMS",%progbits,1
 4437              		.align	2
 4438              	.LC7:
 4439 0000 4D313A20 		.ascii	"M1: %.2f\015\012\000"
 4439      252E3266 
 4439      0D0A00
 4440 000b 00       		.align	2
 4441              	.LC8:
 4442 000c 4D323A20 		.ascii	"M2: %.2f\015\012\000"
 4442      252E3266 
 4442      0D0A00
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 143


 4443 0017 00       		.align	2
 4444              	.LC9:
 4445 0018 43313A20 		.ascii	"C1: %.2f\015\012\000"
 4445      252E3266 
 4445      0D0A00
 4446 0023 00       		.align	2
 4447              	.LC10:
 4448 0024 56313A20 		.ascii	"V1: %.2f\015\012\000"
 4448      252E3266 
 4448      0D0A00
 4449 002f 00       		.align	2
 4450              	.LC11:
 4451 0030 43686172 		.ascii	"Charger Connected: %d\015\012\000"
 4451      67657220 
 4451      436F6E6E 
 4451      65637465 
 4451      643A2025 
 4452              		.align	2
 4453              	.LC12:
 4454 0048 494E2D3E 		.ascii	"IN-> BWF1: %d BWF2: %d\015\012OUT-> BWF1: %d BWF2: "
 4454      20425746 
 4454      313A2025 
 4454      64204257 
 4454      46323A20 
 4455 0075 25640D0A 		.ascii	"%d\015\012\000"
 4455      00
 4456 007a 0000     		.align	2
 4457              	.LC13:
 4458 007c 42617474 		.ascii	"Battery Fully Charged: %d\015\012\000"
 4458      65727920 
 4458      46756C6C 
 4458      79204368 
 4458      61726765 
 4459              		.align	2
 4460              	.LC14:
 4461 0098 526F6C6C 		.ascii	"Roll: %.2f Pitch: %2.f Yaw: %2.f\015\012\000"
 4461      3A20252E 
 4461      32662050 
 4461      69746368 
 4461      3A202532 
 4462 00bb 00       		.align	2
 4463              	.LC15:
 4464 00bc 54696D65 		.ascii	"Time: %d:%d:%d\015\012\000"
 4464      3A202564 
 4464      3A25643A 
 4464      25640D0A 
 4464      00
 4465 00cd 000000   		.align	2
 4466              	.LC16:
 4467 00d0 44617465 		.ascii	"Date: 20%d-%d-%d\015\012\000"
 4467      3A203230 
 4467      25642D25 
 4467      642D2564 
 4467      0D0A00
 4468 00e3 00       		.align	2
 4469              	.LC17:
 4470 00e4 42617474 		.ascii	"Battery Voltage,%.2f\015\012M1 Current,%.2f\015\012"
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 144


 4470      65727920 
 4470      566F6C74 
 4470      6167652C 
 4470      252E3266 
 4471 010b 4D322043 		.ascii	"M2 Current,%.2f\015\012C1 Current,%.2f\015\012Secur"
 4471      75727265 
 4471      6E742C25 
 4471      2E32660D 
 4471      0A433120 
 4472 0132 6974792C 		.ascii	"ity,%d\015\012Mower State,%d\015\012\000"
 4472      25640D0A 
 4472      4D6F7765 
 4472      72205374 
 4472      6174652C 
 4473              		.section	.text.SendInfo,"ax",%progbits
 4474              		.align	1
 4475              		.syntax unified
 4476              		.thumb
 4477              		.thumb_func
 4478              		.fpu fpv4-sp-d16
 4480              	SendInfo:
 4481              	.LFB288:
 687:Core/Src/main.c **** 
 4482              		.loc 1 687 17 is_stmt 1 view -0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 160
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
 689:Core/Src/main.c **** 
 4486              		.loc 1 689 3 view .LVU1243
 689:Core/Src/main.c **** 
 4487              		.loc 1 689 18 is_stmt 0 view .LVU1244
 4488 0000 7C4B     		ldr	r3, .L310
 4489 0002 0022     		movs	r2, #0
 4490 0004 1A70     		strb	r2, [r3]
 691:Core/Src/main.c **** 			bwf1_inside = 0;
 4491              		.loc 1 691 3 is_stmt 1 view .LVU1245
 691:Core/Src/main.c **** 			bwf1_inside = 0;
 4492              		.loc 1 691 24 is_stmt 0 view .LVU1246
 4493 0006 7C4B     		ldr	r3, .L310+4
 4494 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691:Core/Src/main.c **** 			bwf1_inside = 0;
 4495              		.loc 1 691 6 view .LVU1247
 4496 000a 4BB9     		cbnz	r3, .L305
 692:Core/Src/main.c **** 			bwf1_outside = 0;
 4497              		.loc 1 692 4 is_stmt 1 view .LVU1248
 692:Core/Src/main.c **** 			bwf1_outside = 0;
 4498              		.loc 1 692 16 is_stmt 0 view .LVU1249
 4499 000c 1346     		mov	r3, r2
 4500 000e 7B4A     		ldr	r2, .L310+8
 4501 0010 1360     		str	r3, [r2]
 693:Core/Src/main.c **** 			bwf2_inside = 0;
 4502              		.loc 1 693 4 is_stmt 1 view .LVU1250
 693:Core/Src/main.c **** 			bwf2_inside = 0;
 4503              		.loc 1 693 17 is_stmt 0 view .LVU1251
 4504 0012 7B4A     		ldr	r2, .L310+12
 4505 0014 1360     		str	r3, [r2]
 694:Core/Src/main.c **** 			bwf2_outside = 0;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 145


 4506              		.loc 1 694 4 is_stmt 1 view .LVU1252
 694:Core/Src/main.c **** 			bwf2_outside = 0;
 4507              		.loc 1 694 16 is_stmt 0 view .LVU1253
 4508 0016 7B4A     		ldr	r2, .L310+16
 4509 0018 1360     		str	r3, [r2]
 695:Core/Src/main.c **** 			return;
 4510              		.loc 1 695 4 is_stmt 1 view .LVU1254
 695:Core/Src/main.c **** 			return;
 4511              		.loc 1 695 17 is_stmt 0 view .LVU1255
 4512 001a 7B4A     		ldr	r2, .L310+20
 4513 001c 1360     		str	r3, [r2]
 696:Core/Src/main.c **** 		}
 4514              		.loc 1 696 4 is_stmt 1 view .LVU1256
 4515 001e 7047     		bx	lr
 4516              	.L305:
 687:Core/Src/main.c **** 
 4517              		.loc 1 687 17 is_stmt 0 view .LVU1257
 4518 0020 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4519              	.LCFI52:
 4520              		.cfi_def_cfa_offset 36
 4521              		.cfi_offset 4, -36
 4522              		.cfi_offset 5, -32
 4523              		.cfi_offset 6, -28
 4524              		.cfi_offset 7, -24
 4525              		.cfi_offset 8, -20
 4526              		.cfi_offset 9, -16
 4527              		.cfi_offset 10, -12
 4528              		.cfi_offset 11, -8
 4529              		.cfi_offset 14, -4
 4530 0024 B1B0     		sub	sp, sp, #196
 4531              	.LCFI53:
 4532              		.cfi_def_cfa_offset 232
 700:Core/Src/main.c ****     	RTC_DateTypeDef currDate = {0};
 4533              		.loc 1 700 6 is_stmt 1 view .LVU1258
 700:Core/Src/main.c ****     	RTC_DateTypeDef currDate = {0};
 4534              		.loc 1 700 22 is_stmt 0 view .LVU1259
 4535 0026 0024     		movs	r4, #0
 4536 0028 2B94     		str	r4, [sp, #172]
 4537 002a 2C94     		str	r4, [sp, #176]
 4538 002c 2D94     		str	r4, [sp, #180]
 4539 002e 2E94     		str	r4, [sp, #184]
 4540 0030 2F94     		str	r4, [sp, #188]
 701:Core/Src/main.c **** 
 4541              		.loc 1 701 6 is_stmt 1 view .LVU1260
 701:Core/Src/main.c **** 
 4542              		.loc 1 701 22 is_stmt 0 view .LVU1261
 4543 0032 2A94     		str	r4, [sp, #168]
 703:Core/Src/main.c **** 		HAL_RTC_GetDate(&hrtc, &currDate, RTC_FORMAT_BIN);
 4544              		.loc 1 703 3 is_stmt 1 view .LVU1262
 4545 0034 754D     		ldr	r5, .L310+24
 4546 0036 2246     		mov	r2, r4
 4547 0038 2BA9     		add	r1, sp, #172
 4548 003a 2846     		mov	r0, r5
 4549 003c FFF7FEFF 		bl	HAL_RTC_GetTime
 4550              	.LVL320:
 704:Core/Src/main.c **** 
 4551              		.loc 1 704 3 view .LVU1263
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 146


 4552 0040 2246     		mov	r2, r4
 4553 0042 2AA9     		add	r1, sp, #168
 4554 0044 2846     		mov	r0, r5
 4555 0046 FFF7FEFF 		bl	HAL_RTC_GetDate
 4556              	.LVL321:
 706:Core/Src/main.c **** 		Serial_Console(msg);
 4557              		.loc 1 706 3 view .LVU1264
 4558 004a DFF81C92 		ldr	r9, .L310+116
 4559 004e D9F80000 		ldr	r0, [r9]	@ float
 4560 0052 FFF7FEFF 		bl	__aeabi_f2d
 4561              	.LVL322:
 4562 0056 0246     		mov	r2, r0
 4563 0058 0B46     		mov	r3, r1
 4564 005a 6D4E     		ldr	r6, .L310+28
 4565 005c 6D49     		ldr	r1, .L310+32
 4566 005e 3046     		mov	r0, r6
 4567 0060 FFF7FEFF 		bl	sprintf
 4568              	.LVL323:
 707:Core/Src/main.c **** 		sprintf(msg, "M2: %.2f\r\n", M2_amp);
 4569              		.loc 1 707 3 view .LVU1265
 4570 0064 3046     		mov	r0, r6
 4571 0066 FFF7FEFF 		bl	Serial_Console
 4572              	.LVL324:
 708:Core/Src/main.c **** 		Serial_Console(msg);
 4573              		.loc 1 708 3 view .LVU1266
 4574 006a DFF800A2 		ldr	r10, .L310+120
 4575 006e DAF80000 		ldr	r0, [r10]	@ float
 4576 0072 FFF7FEFF 		bl	__aeabi_f2d
 4577              	.LVL325:
 4578 0076 0246     		mov	r2, r0
 4579 0078 0B46     		mov	r3, r1
 4580 007a 6749     		ldr	r1, .L310+36
 4581 007c 3046     		mov	r0, r6
 4582 007e FFF7FEFF 		bl	sprintf
 4583              	.LVL326:
 709:Core/Src/main.c **** 		sprintf(msg, "C1: %.2f\r\n", C1_amp);
 4584              		.loc 1 709 3 view .LVU1267
 4585 0082 3046     		mov	r0, r6
 4586 0084 FFF7FEFF 		bl	Serial_Console
 4587              	.LVL327:
 710:Core/Src/main.c **** 		Serial_Console(msg);
 4588              		.loc 1 710 3 view .LVU1268
 4589 0088 DFF8E4B1 		ldr	fp, .L310+124
 4590 008c DBF80000 		ldr	r0, [fp]	@ float
 4591 0090 FFF7FEFF 		bl	__aeabi_f2d
 4592              	.LVL328:
 4593 0094 0246     		mov	r2, r0
 4594 0096 0B46     		mov	r3, r1
 4595 0098 6049     		ldr	r1, .L310+40
 4596 009a 3046     		mov	r0, r6
 4597 009c FFF7FEFF 		bl	sprintf
 4598              	.LVL329:
 711:Core/Src/main.c **** 		sprintf(msg, "V1: %.2f\r\n", (Voltage / 1000));
 4599              		.loc 1 711 3 view .LVU1269
 4600 00a0 3046     		mov	r0, r6
 4601 00a2 FFF7FEFF 		bl	Serial_Console
 4602              	.LVL330:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 147


 712:Core/Src/main.c **** 		Serial_Console(msg);
 4603              		.loc 1 712 3 view .LVU1270
 712:Core/Src/main.c **** 		Serial_Console(msg);
 4604              		.loc 1 712 41 is_stmt 0 view .LVU1271
 4605 00a6 5E4F     		ldr	r7, .L310+44
 4606 00a8 97ED007A 		vldr.32	s14, [r7]
 712:Core/Src/main.c **** 		Serial_Console(msg);
 4607              		.loc 1 712 3 view .LVU1272
 4608 00ac DFED5D7A 		vldr.32	s15, .L310+48
 4609 00b0 C7EE277A 		vdiv.f32	s15, s14, s15
 4610 00b4 17EE900A 		vmov	r0, s15
 4611 00b8 FFF7FEFF 		bl	__aeabi_f2d
 4612              	.LVL331:
 4613 00bc 0246     		mov	r2, r0
 4614 00be 0B46     		mov	r3, r1
 4615 00c0 5949     		ldr	r1, .L310+52
 4616 00c2 3046     		mov	r0, r6
 4617 00c4 FFF7FEFF 		bl	sprintf
 4618              	.LVL332:
 713:Core/Src/main.c **** 		sprintf(msg,"Charger Connected: %d\r\n", ChargerConnect);
 4619              		.loc 1 713 3 is_stmt 1 view .LVU1273
 4620 00c8 3046     		mov	r0, r6
 4621 00ca FFF7FEFF 		bl	Serial_Console
 4622              	.LVL333:
 714:Core/Src/main.c **** 		Serial_Console(msg);
 4623              		.loc 1 714 3 view .LVU1274
 4624 00ce 574B     		ldr	r3, .L310+56
 4625 00d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4626 00d2 5749     		ldr	r1, .L310+60
 4627 00d4 3046     		mov	r0, r6
 4628 00d6 FFF7FEFF 		bl	sprintf
 4629              	.LVL334:
 715:Core/Src/main.c **** 		sprintf(msg,"IN-> BWF1: %d BWF2: %d\r\nOUT-> BWF1: %d BWF2: %d\r\n", bwf1_inside, bwf2_inside, bw
 4630              		.loc 1 715 3 view .LVU1275
 4631 00da 3046     		mov	r0, r6
 4632 00dc FFF7FEFF 		bl	Serial_Console
 4633              	.LVL335:
 716:Core/Src/main.c **** 		Serial_Console(msg);
 4634              		.loc 1 716 3 view .LVU1276
 4635 00e0 494D     		ldr	r5, .L310+20
 4636 00e2 2B68     		ldr	r3, [r5]
 4637 00e4 0193     		str	r3, [sp, #4]
 4638 00e6 DFF81881 		ldr	r8, .L310+12
 4639 00ea D8F80030 		ldr	r3, [r8]
 4640 00ee 0093     		str	r3, [sp]
 4641 00f0 444B     		ldr	r3, .L310+16
 4642 00f2 1B68     		ldr	r3, [r3]
 4643 00f4 414A     		ldr	r2, .L310+8
 4644 00f6 1268     		ldr	r2, [r2]
 4645 00f8 4E49     		ldr	r1, .L310+64
 4646 00fa 3046     		mov	r0, r6
 4647 00fc FFF7FEFF 		bl	sprintf
 4648              	.LVL336:
 717:Core/Src/main.c **** 		sprintf(msg, "Battery Fully Charged: %d\r\n", Battery_Ready);
 4649              		.loc 1 717 3 view .LVU1277
 4650 0100 3046     		mov	r0, r6
 4651 0102 FFF7FEFF 		bl	Serial_Console
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 148


 4652              	.LVL337:
 718:Core/Src/main.c **** 		Serial_Console(msg);
 4653              		.loc 1 718 3 view .LVU1278
 4654 0106 4C4B     		ldr	r3, .L310+68
 4655 0108 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4656 010a 4C49     		ldr	r1, .L310+72
 4657 010c 3046     		mov	r0, r6
 4658 010e FFF7FEFF 		bl	sprintf
 4659              	.LVL338:
 719:Core/Src/main.c **** 		sprintf(msg, "Roll: %.2f Pitch: %2.f Yaw: %2.f\r\n", roll, pitch, yaw);
 4660              		.loc 1 719 3 view .LVU1279
 4661 0112 3046     		mov	r0, r6
 4662 0114 FFF7FEFF 		bl	Serial_Console
 4663              	.LVL339:
 720:Core/Src/main.c **** 		Serial_Console(msg);
 4664              		.loc 1 720 3 view .LVU1280
 4665 0118 494B     		ldr	r3, .L310+76
 4666 011a 1868     		ldr	r0, [r3]	@ float
 4667 011c FFF7FEFF 		bl	__aeabi_f2d
 4668              	.LVL340:
 4669 0120 CDE90801 		strd	r0, [sp, #32]
 4670 0124 474B     		ldr	r3, .L310+80
 4671 0126 1868     		ldr	r0, [r3]	@ float
 4672 0128 FFF7FEFF 		bl	__aeabi_f2d
 4673              	.LVL341:
 4674 012c CDE90201 		strd	r0, [sp, #8]
 4675 0130 454B     		ldr	r3, .L310+84
 4676 0132 1868     		ldr	r0, [r3]	@ float
 4677 0134 FFF7FEFF 		bl	__aeabi_f2d
 4678              	.LVL342:
 4679 0138 CDE90001 		strd	r0, [sp]
 4680 013c DDE90823 		ldrd	r2, [sp, #32]
 4681 0140 4249     		ldr	r1, .L310+88
 4682 0142 3046     		mov	r0, r6
 4683 0144 FFF7FEFF 		bl	sprintf
 4684              	.LVL343:
 721:Core/Src/main.c **** 		sprintf(msg, "Time: %d:%d:%d\r\n", currTime.Hours, currTime.Minutes, currTime.Seconds);
 4685              		.loc 1 721 3 view .LVU1281
 4686 0148 3046     		mov	r0, r6
 4687 014a FFF7FEFF 		bl	Serial_Console
 4688              	.LVL344:
 722:Core/Src/main.c **** 		Serial_Console(msg);
 4689              		.loc 1 722 3 view .LVU1282
 722:Core/Src/main.c **** 		Serial_Console(msg);
 4690              		.loc 1 722 80 is_stmt 0 view .LVU1283
 4691 014e 9DF8AE30 		ldrb	r3, [sp, #174]	@ zero_extendqisi2
 722:Core/Src/main.c **** 		Serial_Console(msg);
 4692              		.loc 1 722 3 view .LVU1284
 4693 0152 0093     		str	r3, [sp]
 4694 0154 9DF8AD30 		ldrb	r3, [sp, #173]	@ zero_extendqisi2
 4695 0158 9DF8AC20 		ldrb	r2, [sp, #172]	@ zero_extendqisi2
 4696 015c 3C49     		ldr	r1, .L310+92
 4697 015e 3046     		mov	r0, r6
 4698 0160 FFF7FEFF 		bl	sprintf
 4699              	.LVL345:
 723:Core/Src/main.c **** 		sprintf(msg, "Date: 20%d-%d-%d\r\n", currDate.Year, currDate.Month, currDate.Date);
 4700              		.loc 1 723 3 is_stmt 1 view .LVU1285
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 149


 4701 0164 3046     		mov	r0, r6
 4702 0166 FFF7FEFF 		bl	Serial_Console
 4703              	.LVL346:
 724:Core/Src/main.c **** 		Serial_Console(msg);
 4704              		.loc 1 724 3 view .LVU1286
 724:Core/Src/main.c **** 		Serial_Console(msg);
 4705              		.loc 1 724 79 is_stmt 0 view .LVU1287
 4706 016a 9DF8AA30 		ldrb	r3, [sp, #170]	@ zero_extendqisi2
 724:Core/Src/main.c **** 		Serial_Console(msg);
 4707              		.loc 1 724 3 view .LVU1288
 4708 016e 0093     		str	r3, [sp]
 4709 0170 9DF8A930 		ldrb	r3, [sp, #169]	@ zero_extendqisi2
 4710 0174 9DF8AB20 		ldrb	r2, [sp, #171]	@ zero_extendqisi2
 4711 0178 3649     		ldr	r1, .L310+96
 4712 017a 3046     		mov	r0, r6
 4713 017c FFF7FEFF 		bl	sprintf
 4714              	.LVL347:
 725:Core/Src/main.c **** 
 4715              		.loc 1 725 3 is_stmt 1 view .LVU1289
 4716 0180 3046     		mov	r0, r6
 4717 0182 FFF7FEFF 		bl	Serial_Console
 4718              	.LVL348:
 727:Core/Src/main.c **** 
 4719              		.loc 1 727 3 view .LVU1290
 729:Core/Src/main.c **** 				      "M1 Current,%.2f\r\n"
 4720              		.loc 1 729 3 view .LVU1291
 4721 0186 3868     		ldr	r0, [r7]	@ float
 4722 0188 FFF7FEFF 		bl	__aeabi_f2d
 4723              	.LVL349:
 4724 018c 0646     		mov	r6, r0
 4725 018e 0F46     		mov	r7, r1
 4726 0190 314B     		ldr	r3, .L310+100
 4727 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4728 0194 0793     		str	r3, [sp, #28]
 4729 0196 314B     		ldr	r3, .L310+104
 4730 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4731 019a 0693     		str	r3, [sp, #24]
 4732 019c DBF80000 		ldr	r0, [fp]	@ float
 4733 01a0 FFF7FEFF 		bl	__aeabi_f2d
 4734              	.LVL350:
 4735 01a4 CDE90401 		strd	r0, [sp, #16]
 4736 01a8 DAF80000 		ldr	r0, [r10]	@ float
 4737 01ac FFF7FEFF 		bl	__aeabi_f2d
 4738              	.LVL351:
 4739 01b0 CDE90201 		strd	r0, [sp, #8]
 4740 01b4 D9F80000 		ldr	r0, [r9]	@ float
 4741 01b8 FFF7FEFF 		bl	__aeabi_f2d
 4742              	.LVL352:
 4743 01bc CDE90001 		strd	r0, [sp]
 4744 01c0 3246     		mov	r2, r6
 4745 01c2 3B46     		mov	r3, r7
 4746 01c4 2649     		ldr	r1, .L310+108
 4747 01c6 0AA8     		add	r0, sp, #40
 4748 01c8 FFF7FEFF 		bl	sprintf
 4749              	.LVL353:
 736:Core/Src/main.c **** 		bwf1_outside = 0;
 4750              		.loc 1 736 3 view .LVU1292
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 150


 736:Core/Src/main.c **** 		bwf1_outside = 0;
 4751              		.loc 1 736 15 is_stmt 0 view .LVU1293
 4752 01cc 0B4A     		ldr	r2, .L310+8
 4753 01ce 1460     		str	r4, [r2]
 737:Core/Src/main.c **** 		bwf2_inside = 0;
 4754              		.loc 1 737 3 is_stmt 1 view .LVU1294
 737:Core/Src/main.c **** 		bwf2_inside = 0;
 4755              		.loc 1 737 16 is_stmt 0 view .LVU1295
 4756 01d0 C8F80040 		str	r4, [r8]
 738:Core/Src/main.c **** 		bwf2_outside = 0;
 4757              		.loc 1 738 3 is_stmt 1 view .LVU1296
 738:Core/Src/main.c **** 		bwf2_outside = 0;
 4758              		.loc 1 738 15 is_stmt 0 view .LVU1297
 4759 01d4 0B4B     		ldr	r3, .L310+16
 4760 01d6 1C60     		str	r4, [r3]
 739:Core/Src/main.c **** 
 4761              		.loc 1 739 3 is_stmt 1 view .LVU1298
 739:Core/Src/main.c **** 
 4762              		.loc 1 739 16 is_stmt 0 view .LVU1299
 4763 01d8 2C60     		str	r4, [r5]
 741:Core/Src/main.c **** 
 4764              		.loc 1 741 3 is_stmt 1 view .LVU1300
 741:Core/Src/main.c **** 
 4765              		.loc 1 741 48 is_stmt 0 view .LVU1301
 4766 01da 0AA8     		add	r0, sp, #40
 4767 01dc FFF7FEFF 		bl	strlen
 4768              	.LVL354:
 741:Core/Src/main.c **** 
 4769              		.loc 1 741 3 view .LVU1302
 4770 01e0 6423     		movs	r3, #100
 4771 01e2 82B2     		uxth	r2, r0
 4772 01e4 0AA9     		add	r1, sp, #40
 4773 01e6 1F48     		ldr	r0, .L310+112
 4774 01e8 FFF7FEFF 		bl	HAL_UART_Transmit
 4775              	.LVL355:
 743:Core/Src/main.c **** 
 4776              		.loc 1 743 1 view .LVU1303
 4777 01ec 31B0     		add	sp, sp, #196
 4778              	.LCFI54:
 4779              		.cfi_def_cfa_offset 36
 4780              		@ sp needed
 4781 01ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4782              	.L311:
 4783 01f2 00BF     		.align	2
 4784              	.L310:
 4785 01f4 00000000 		.word	.LANCHOR60
 4786 01f8 00000000 		.word	.LANCHOR61
 4787 01fc 00000000 		.word	.LANCHOR21
 4788 0200 00000000 		.word	.LANCHOR23
 4789 0204 00000000 		.word	.LANCHOR25
 4790 0208 00000000 		.word	.LANCHOR26
 4791 020c 00000000 		.word	hrtc
 4792 0210 00000000 		.word	msg
 4793 0214 00000000 		.word	.LC7
 4794 0218 0C000000 		.word	.LC8
 4795 021c 18000000 		.word	.LC9
 4796 0220 00000000 		.word	.LANCHOR56
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 151


 4797 0224 00007A44 		.word	1148846080
 4798 0228 24000000 		.word	.LC10
 4799 022c 00000000 		.word	.LANCHOR57
 4800 0230 30000000 		.word	.LC11
 4801 0234 48000000 		.word	.LC12
 4802 0238 00000000 		.word	.LANCHOR32
 4803 023c 7C000000 		.word	.LC13
 4804 0240 00000000 		.word	.LANCHOR4
 4805 0244 00000000 		.word	.LANCHOR6
 4806 0248 00000000 		.word	.LANCHOR5
 4807 024c 98000000 		.word	.LC14
 4808 0250 BC000000 		.word	.LC15
 4809 0254 D0000000 		.word	.LC16
 4810 0258 00000000 		.word	.LANCHOR11
 4811 025c 00000000 		.word	.LANCHOR28
 4812 0260 E4000000 		.word	.LC17
 4813 0264 00000000 		.word	huart2
 4814 0268 00000000 		.word	M1_amp
 4815 026c 00000000 		.word	M2_amp
 4816 0270 00000000 		.word	.LANCHOR52
 4817              		.cfi_endproc
 4818              	.LFE288:
 4820              		.global	__aeabi_ui2d
 4821              		.global	__aeabi_dadd
 4822              		.global	__aeabi_d2uiz
 4823              		.section	.text.perimeterTracker,"ax",%progbits
 4824              		.align	1
 4825              		.syntax unified
 4826              		.thumb
 4827              		.thumb_func
 4828              		.fpu fpv4-sp-d16
 4830              	perimeterTracker:
 4831              	.LFB293:
 872:Core/Src/main.c **** 
 4832              		.loc 1 872 25 is_stmt 1 view -0
 4833              		.cfi_startproc
 4834              		@ args = 0, pretend = 0, frame = 0
 4835              		@ frame_needed = 0, uses_anonymous_args = 0
 4836 0000 2DE9F04D 		push	{r4, r5, r6, r7, r8, r10, fp, lr}
 4837              	.LCFI55:
 4838              		.cfi_def_cfa_offset 32
 4839              		.cfi_offset 4, -32
 4840              		.cfi_offset 5, -28
 4841              		.cfi_offset 6, -24
 4842              		.cfi_offset 7, -20
 4843              		.cfi_offset 8, -16
 4844              		.cfi_offset 10, -12
 4845              		.cfi_offset 11, -8
 4846              		.cfi_offset 14, -4
 4847 0004 2DED028B 		vpush.64	{d8}
 4848              	.LCFI56:
 4849              		.cfi_def_cfa_offset 40
 4850              		.cfi_offset 80, -40
 4851              		.cfi_offset 81, -36
 874:Core/Src/main.c **** 
 4852              		.loc 1 874 2 view .LVU1305
 4853 0008 FFF7FEFF 		bl	CheckSecurity
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 152


 4854              	.LVL356:
 876:Core/Src/main.c **** 
 4855              		.loc 1 876 2 view .LVU1306
 876:Core/Src/main.c **** 
 4856              		.loc 1 876 16 is_stmt 0 view .LVU1307
 4857 000c FFF7FEFF 		bl	HAL_GetTick
 4858              	.LVL357:
 876:Core/Src/main.c **** 
 4859              		.loc 1 876 30 view .LVU1308
 4860 0010 FFF7FEFF 		bl	__aeabi_ui2d
 4861              	.LVL358:
 4862 0014 844B     		ldr	r3, .L334+16
 4863 0016 D3E90023 		ldrd	r2, [r3]
 4864 001a FFF7FEFF 		bl	__aeabi_dsub
 4865              	.LVL359:
 4866 001e 0646     		mov	r6, r0
 4867 0020 0F46     		mov	r7, r1
 876:Core/Src/main.c **** 
 4868              		.loc 1 876 14 view .LVU1309
 4869 0022 824B     		ldr	r3, .L334+20
 4870 0024 C3E90067 		strd	r6, [r3]
 878:Core/Src/main.c ****     	Tick1 -= elapsedTime;
 4871              		.loc 1 878 5 is_stmt 1 view .LVU1310
 878:Core/Src/main.c ****     	Tick1 -= elapsedTime;
 4872              		.loc 1 878 21 is_stmt 0 view .LVU1311
 4873 0028 814B     		ldr	r3, .L334+24
 4874 002a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 878:Core/Src/main.c ****     	Tick1 -= elapsedTime;
 4875              		.loc 1 878 8 view .LVU1312
 4876 002c 022C     		cmp	r4, #2
 4877 002e 00F0A580 		beq	.L328
 4878              	.L313:
 883:Core/Src/main.c ****     	Tick2 -= elapsedTime;
 4879              		.loc 1 883 5 is_stmt 1 view .LVU1313
 883:Core/Src/main.c ****     	Tick2 -= elapsedTime;
 4880              		.loc 1 883 8 is_stmt 0 view .LVU1314
 4881 0032 012C     		cmp	r4, #1
 4882 0034 00F0B180 		beq	.L329
 4883              	.L314:
 888:Core/Src/main.c ****     cumError += error * elapsedTime;               // compute integral
 4884              		.loc 1 888 5 is_stmt 1 view .LVU1315
 888:Core/Src/main.c ****     cumError += error * elapsedTime;               // compute integral
 4885              		.loc 1 888 27 is_stmt 0 view .LVU1316
 4886 0038 7E4B     		ldr	r3, .L334+28
 4887 003a D3E90023 		ldrd	r2, [r3]
 4888 003e 7E49     		ldr	r1, .L334+32
 4889 0040 D1E90001 		ldrd	r0, [r1]
 4890 0044 FFF7FEFF 		bl	__aeabi_dadd
 4891              	.LVL360:
 4892 0048 0246     		mov	r2, r0
 4893 004a 0B46     		mov	r3, r1
 888:Core/Src/main.c ****     cumError += error * elapsedTime;               // compute integral
 4894              		.loc 1 888 18 view .LVU1317
 4895 004c 72A1     		adr	r1, .L334
 4896 004e D1E90001 		ldrd	r0, [r1]
 4897 0052 FFF7FEFF 		bl	__aeabi_dsub
 4898              	.LVL361:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 153


 4899 0056 0446     		mov	r4, r0
 4900 0058 0D46     		mov	r5, r1
 888:Core/Src/main.c ****     cumError += error * elapsedTime;               // compute integral
 4901              		.loc 1 888 11 view .LVU1318
 4902 005a 784B     		ldr	r3, .L334+36
 4903 005c C3E90045 		strd	r4, [r3]
 889:Core/Src/main.c ****     rateError = (error - lastError)/elapsedTime;   // compute derivative
 4904              		.loc 1 889 5 is_stmt 1 view .LVU1319
 889:Core/Src/main.c ****     rateError = (error - lastError)/elapsedTime;   // compute derivative
 4905              		.loc 1 889 23 is_stmt 0 view .LVU1320
 4906 0060 0246     		mov	r2, r0
 4907 0062 0B46     		mov	r3, r1
 4908 0064 3046     		mov	r0, r6
 4909 0066 3946     		mov	r1, r7
 4910 0068 FFF7FEFF 		bl	__aeabi_dmul
 4911              	.LVL362:
 889:Core/Src/main.c ****     rateError = (error - lastError)/elapsedTime;   // compute derivative
 4912              		.loc 1 889 14 view .LVU1321
 4913 006c DFF8E881 		ldr	r8, .L334+64
 4914 0070 D8E90023 		ldrd	r2, [r8]
 4915 0074 FFF7FEFF 		bl	__aeabi_dadd
 4916              	.LVL363:
 4917 0078 41EC180B 		vmov	d8, r0, r1
 4918 007c C8E90001 		strd	r0, [r8]
 890:Core/Src/main.c **** 
 4919              		.loc 1 890 5 is_stmt 1 view .LVU1322
 890:Core/Src/main.c **** 
 4920              		.loc 1 890 24 is_stmt 0 view .LVU1323
 4921 0080 DFF8D881 		ldr	r8, .L334+68
 4922 0084 D8E90023 		ldrd	r2, [r8]
 4923 0088 2046     		mov	r0, r4
 4924 008a 2946     		mov	r1, r5
 4925 008c FFF7FEFF 		bl	__aeabi_dsub
 4926              	.LVL364:
 890:Core/Src/main.c **** 
 4927              		.loc 1 890 36 view .LVU1324
 4928 0090 3246     		mov	r2, r6
 4929 0092 3B46     		mov	r3, r7
 4930 0094 FFF7FEFF 		bl	__aeabi_ddiv
 4931              	.LVL365:
 4932 0098 8246     		mov	r10, r0
 4933 009a 8B46     		mov	fp, r1
 890:Core/Src/main.c **** 
 4934              		.loc 1 890 15 view .LVU1325
 4935 009c 684B     		ldr	r3, .L334+40
 4936 009e C3E900AB 		strd	r10, [r3]
 892:Core/Src/main.c **** 
 4937              		.loc 1 892 5 is_stmt 1 view .LVU1326
 892:Core/Src/main.c **** 
 4938              		.loc 1 892 20 is_stmt 0 view .LVU1327
 4939 00a2 684B     		ldr	r3, .L334+44
 4940 00a4 1868     		ldr	r0, [r3]	@ float
 4941 00a6 FFF7FEFF 		bl	__aeabi_f2d
 4942              	.LVL366:
 4943 00aa 2246     		mov	r2, r4
 4944 00ac 2B46     		mov	r3, r5
 4945 00ae FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 154


 4946              	.LVL367:
 4947 00b2 0646     		mov	r6, r0
 4948 00b4 0F46     		mov	r7, r1
 892:Core/Src/main.c **** 
 4949              		.loc 1 892 31 view .LVU1328
 4950 00b6 644B     		ldr	r3, .L334+48
 4951 00b8 1868     		ldr	r0, [r3]	@ float
 4952 00ba FFF7FEFF 		bl	__aeabi_f2d
 4953              	.LVL368:
 4954 00be 53EC182B 		vmov	r2, r3, d8
 4955 00c2 FFF7FEFF 		bl	__aeabi_dmul
 4956              	.LVL369:
 4957 00c6 0246     		mov	r2, r0
 4958 00c8 0B46     		mov	r3, r1
 892:Core/Src/main.c **** 
 4959              		.loc 1 892 27 view .LVU1329
 4960 00ca 3046     		mov	r0, r6
 4961 00cc 3946     		mov	r1, r7
 4962 00ce FFF7FEFF 		bl	__aeabi_dadd
 4963              	.LVL370:
 4964 00d2 0646     		mov	r6, r0
 4965 00d4 0F46     		mov	r7, r1
 892:Core/Src/main.c **** 
 4966              		.loc 1 892 45 view .LVU1330
 4967 00d6 5D4B     		ldr	r3, .L334+52
 4968 00d8 1868     		ldr	r0, [r3]	@ float
 4969 00da FFF7FEFF 		bl	__aeabi_f2d
 4970              	.LVL371:
 4971 00de 5246     		mov	r2, r10
 4972 00e0 5B46     		mov	r3, fp
 4973 00e2 FFF7FEFF 		bl	__aeabi_dmul
 4974              	.LVL372:
 4975 00e6 0246     		mov	r2, r0
 4976 00e8 0B46     		mov	r3, r1
 892:Core/Src/main.c **** 
 4977              		.loc 1 892 12 view .LVU1331
 4978 00ea 3046     		mov	r0, r6
 4979 00ec 3946     		mov	r1, r7
 4980 00ee FFF7FEFF 		bl	__aeabi_dadd
 4981              	.LVL373:
 4982 00f2 41EC180B 		vmov	d8, r0, r1
 4983              	.LVL374:
 894:Core/Src/main.c ****     previousTime = HAL_GetTick();                  //remember current time
 4984              		.loc 1 894 5 is_stmt 1 view .LVU1332
 894:Core/Src/main.c ****     previousTime = HAL_GetTick();                  //remember current time
 4985              		.loc 1 894 15 is_stmt 0 view .LVU1333
 4986 00f6 C8E90045 		strd	r4, [r8]
 895:Core/Src/main.c **** 
 4987              		.loc 1 895 5 is_stmt 1 view .LVU1334
 895:Core/Src/main.c **** 
 4988              		.loc 1 895 20 is_stmt 0 view .LVU1335
 4989 00fa FFF7FEFF 		bl	HAL_GetTick
 4990              	.LVL375:
 895:Core/Src/main.c **** 
 4991              		.loc 1 895 18 view .LVU1336
 4992 00fe FFF7FEFF 		bl	__aeabi_ui2d
 4993              	.LVL376:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 155


 4994 0102 494B     		ldr	r3, .L334+16
 4995 0104 C3E90001 		strd	r0, [r3]
 897:Core/Src/main.c ****     int speedB = (2800 - round(out));
 4996              		.loc 1 897 5 is_stmt 1 view .LVU1337
 897:Core/Src/main.c ****     int speedB = (2800 - round(out));
 4997              		.loc 1 897 26 is_stmt 0 view .LVU1338
 4998 0108 B0EE480A 		vmov.f32	s0, s16
 4999 010c F0EE680A 		vmov.f32	s1, s17
 5000 0110 FFF7FEFF 		bl	round
 5001              	.LVL377:
 5002 0114 57EC106B 		vmov	r6, r7, d0
 897:Core/Src/main.c ****     int speedB = (2800 - round(out));
 5003              		.loc 1 897 24 view .LVU1339
 5004 0118 3FA3     		adr	r3, .L334
 5005 011a D3E90023 		ldrd	r2, [r3]
 5006 011e 10EE100A 		vmov	r0, s0	@ int
 5007 0122 3946     		mov	r1, r7
 5008 0124 FFF7FEFF 		bl	__aeabi_dadd
 5009              	.LVL378:
 897:Core/Src/main.c ****     int speedB = (2800 - round(out));
 5010              		.loc 1 897 9 view .LVU1340
 5011 0128 FFF7FEFF 		bl	__aeabi_d2iz
 5012              	.LVL379:
 5013 012c 0446     		mov	r4, r0
 5014              	.LVL380:
 898:Core/Src/main.c **** 
 5015              		.loc 1 898 5 is_stmt 1 view .LVU1341
 898:Core/Src/main.c **** 
 5016              		.loc 1 898 24 is_stmt 0 view .LVU1342
 5017 012e 3246     		mov	r2, r6
 5018 0130 3B46     		mov	r3, r7
 5019 0132 39A1     		adr	r1, .L334
 5020 0134 D1E90001 		ldrd	r0, [r1]
 5021              	.LVL381:
 898:Core/Src/main.c **** 
 5022              		.loc 1 898 24 view .LVU1343
 5023 0138 FFF7FEFF 		bl	__aeabi_dsub
 5024              	.LVL382:
 898:Core/Src/main.c **** 
 5025              		.loc 1 898 9 view .LVU1344
 5026 013c FFF7FEFF 		bl	__aeabi_d2iz
 5027              	.LVL383:
 900:Core/Src/main.c ****     if (speedB > 3200) speedB = 3200;
 5028              		.loc 1 900 5 is_stmt 1 view .LVU1345
 900:Core/Src/main.c ****     if (speedB > 3200) speedB = 3200;
 5029              		.loc 1 900 8 is_stmt 0 view .LVU1346
 5030 0140 B4F5486F 		cmp	r4, #3200
 5031 0144 01DD     		ble	.L315
 900:Core/Src/main.c ****     if (speedB > 3200) speedB = 3200;
 5032              		.loc 1 900 31 view .LVU1347
 5033 0146 4FF44864 		mov	r4, #3200
 5034              	.LVL384:
 5035              	.L315:
 901:Core/Src/main.c **** 
 5036              		.loc 1 901 5 is_stmt 1 view .LVU1348
 901:Core/Src/main.c **** 
 5037              		.loc 1 901 8 is_stmt 0 view .LVU1349
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 156


 5038 014a B0F5486F 		cmp	r0, #3200
 5039 014e 01DD     		ble	.L316
 901:Core/Src/main.c **** 
 5040              		.loc 1 901 31 view .LVU1350
 5041 0150 4FF44860 		mov	r0, #3200
 5042              	.LVL385:
 5043              	.L316:
 903:Core/Src/main.c ****     if (speedB < 1000) speedB = 1000;
 5044              		.loc 1 903 5 is_stmt 1 view .LVU1351
 903:Core/Src/main.c ****     if (speedB < 1000) speedB = 1000;
 5045              		.loc 1 903 8 is_stmt 0 view .LVU1352
 5046 0154 B4F57A7F 		cmp	r4, #1000
 5047 0158 01DA     		bge	.L317
 903:Core/Src/main.c ****     if (speedB < 1000) speedB = 1000;
 5048              		.loc 1 903 31 view .LVU1353
 5049 015a 4FF47A74 		mov	r4, #1000
 5050              	.LVL386:
 5051              	.L317:
 904:Core/Src/main.c **** 
 5052              		.loc 1 904 5 is_stmt 1 view .LVU1354
 904:Core/Src/main.c **** 
 5053              		.loc 1 904 8 is_stmt 0 view .LVU1355
 5054 015e B0F57A7F 		cmp	r0, #1000
 5055 0162 01DA     		bge	.L318
 904:Core/Src/main.c **** 
 5056              		.loc 1 904 31 view .LVU1356
 5057 0164 4FF47A70 		mov	r0, #1000
 5058              	.LVL387:
 5059              	.L318:
 906:Core/Src/main.c **** 
 5060              		.loc 1 906 5 is_stmt 1 view .LVU1357
 906:Core/Src/main.c **** 
 5061              		.loc 1 906 21 is_stmt 0 view .LVU1358
 5062 0168 314B     		ldr	r3, .L334+24
 5063 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 906:Core/Src/main.c **** 
 5064              		.loc 1 906 8 view .LVU1359
 5065 016c 022B     		cmp	r3, #2
 5066 016e 23D0     		beq	.L330
 5067              	.L319:
 922:Core/Src/main.c **** 		  TIM4->CCR1 = 0;
 5068              		.loc 1 922 5 is_stmt 1 view .LVU1360
 922:Core/Src/main.c **** 		  TIM4->CCR1 = 0;
 5069              		.loc 1 922 8 is_stmt 0 view .LVU1361
 5070 0170 012B     		cmp	r3, #1
 5071 0172 38D0     		beq	.L331
 5072              	.LVL388:
 5073              	.L312:
 930:Core/Src/main.c **** void parseCommand_Console(void) {
 5074              		.loc 1 930 1 view .LVU1362
 5075 0174 BDEC028B 		vldm	sp!, {d8}
 5076              	.LCFI57:
 5077              		.cfi_remember_state
 5078              		.cfi_restore 80
 5079              		.cfi_restore 81
 5080              		.cfi_def_cfa_offset 32
 5081              	.LVL389:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 157


 930:Core/Src/main.c **** void parseCommand_Console(void) {
 5082              		.loc 1 930 1 view .LVU1363
 5083 0178 BDE8F08D 		pop	{r4, r5, r6, r7, r8, r10, fp, pc}
 5084              	.LVL390:
 5085              	.L328:
 5086              	.LCFI58:
 5087              		.cfi_restore_state
 879:Core/Src/main.c ****     	Tick2 = 0;
 5088              		.loc 1 879 6 is_stmt 1 view .LVU1364
 879:Core/Src/main.c ****     	Tick2 = 0;
 5089              		.loc 1 879 12 is_stmt 0 view .LVU1365
 5090 017c 2E4D     		ldr	r5, .L334+32
 5091 017e 0246     		mov	r2, r0
 5092 0180 0B46     		mov	r3, r1
 5093 0182 D5E90001 		ldrd	r0, [r5]
 5094 0186 FFF7FEFF 		bl	__aeabi_dsub
 5095              	.LVL391:
 5096 018a C5E90001 		strd	r0, [r5]
 880:Core/Src/main.c ****     }
 5097              		.loc 1 880 6 is_stmt 1 view .LVU1366
 880:Core/Src/main.c ****     }
 5098              		.loc 1 880 12 is_stmt 0 view .LVU1367
 5099 018e 294B     		ldr	r3, .L334+28
 5100 0190 0020     		movs	r0, #0
 5101 0192 0021     		movs	r1, #0
 5102 0194 C3E90001 		strd	r0, [r3]
 5103 0198 4BE7     		b	.L313
 5104              	.L329:
 884:Core/Src/main.c ****     	Tick1 = 0;
 5105              		.loc 1 884 6 is_stmt 1 view .LVU1368
 884:Core/Src/main.c ****     	Tick1 = 0;
 5106              		.loc 1 884 12 is_stmt 0 view .LVU1369
 5107 019a 264C     		ldr	r4, .L334+28
 5108 019c 3246     		mov	r2, r6
 5109 019e 3B46     		mov	r3, r7
 5110 01a0 D4E90001 		ldrd	r0, [r4]
 5111 01a4 FFF7FEFF 		bl	__aeabi_dsub
 5112              	.LVL392:
 5113 01a8 C4E90001 		strd	r0, [r4]
 885:Core/Src/main.c ****     }
 5114              		.loc 1 885 6 is_stmt 1 view .LVU1370
 885:Core/Src/main.c ****     }
 5115              		.loc 1 885 12 is_stmt 0 view .LVU1371
 5116 01ac 224B     		ldr	r3, .L334+32
 5117 01ae 0020     		movs	r0, #0
 5118 01b0 0021     		movs	r1, #0
 5119 01b2 C3E90001 		strd	r0, [r3]
 5120 01b6 3FE7     		b	.L314
 5121              	.LVL393:
 5122              	.L330:
 908:Core/Src/main.c **** 			  TIM4->CCR1 = 2300;			// if both boundary sensors are OUTSIDE, reverse M1 motor, this logic nee
 5123              		.loc 1 908 5 is_stmt 1 view .LVU1372
 908:Core/Src/main.c **** 			  TIM4->CCR1 = 2300;			// if both boundary sensors are OUTSIDE, reverse M1 motor, this logic nee
 5124              		.loc 1 908 21 is_stmt 0 view .LVU1373
 5125 01b8 254A     		ldr	r2, .L334+56
 5126 01ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 908:Core/Src/main.c **** 			  TIM4->CCR1 = 2300;			// if both boundary sensors are OUTSIDE, reverse M1 motor, this logic nee
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 158


 5127              		.loc 1 908 8 view .LVU1374
 5128 01bc 022A     		cmp	r2, #2
 5129 01be 06D0     		beq	.L332
 912:Core/Src/main.c **** 			  TIM4->CCR1 = 0;
 5130              		.loc 1 912 10 is_stmt 1 view .LVU1375
 912:Core/Src/main.c **** 			  TIM4->CCR1 = 0;
 5131              		.loc 1 912 13 is_stmt 0 view .LVU1376
 5132 01c0 012A     		cmp	r2, #1
 5133 01c2 0BD0     		beq	.L333
 5134              	.L321:
 917:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5135              		.loc 1 917 5 is_stmt 1 view .LVU1377
 917:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5136              		.loc 1 917 16 is_stmt 0 view .LVU1378
 5137 01c4 234A     		ldr	r2, .L334+60
 5138 01c6 D463     		str	r4, [r2, #60]
 918:Core/Src/main.c **** 
 5139              		.loc 1 918 5 is_stmt 1 view .LVU1379
 918:Core/Src/main.c **** 
 5140              		.loc 1 918 16 is_stmt 0 view .LVU1380
 5141 01c8 0021     		movs	r1, #0
 5142 01ca 1164     		str	r1, [r2, #64]
 5143 01cc D0E7     		b	.L319
 5144              	.L332:
 909:Core/Src/main.c **** 			  TIM4->CCR2 = 0;
 5145              		.loc 1 909 6 is_stmt 1 view .LVU1381
 909:Core/Src/main.c **** 			  TIM4->CCR2 = 0;
 5146              		.loc 1 909 17 is_stmt 0 view .LVU1382
 5147 01ce 214A     		ldr	r2, .L334+60
 5148 01d0 40F6FC01 		movw	r1, #2300
 5149 01d4 5163     		str	r1, [r2, #52]
 910:Core/Src/main.c **** 		  }
 5150              		.loc 1 910 6 is_stmt 1 view .LVU1383
 910:Core/Src/main.c **** 		  }
 5151              		.loc 1 910 17 is_stmt 0 view .LVU1384
 5152 01d6 0021     		movs	r1, #0
 5153 01d8 9163     		str	r1, [r2, #56]
 5154 01da F3E7     		b	.L321
 5155              	.L333:
 913:Core/Src/main.c **** 			  TIM4->CCR2 = speedB;
 5156              		.loc 1 913 6 is_stmt 1 view .LVU1385
 913:Core/Src/main.c **** 			  TIM4->CCR2 = speedB;
 5157              		.loc 1 913 17 is_stmt 0 view .LVU1386
 5158 01dc 1D4A     		ldr	r2, .L334+60
 5159 01de 0021     		movs	r1, #0
 5160 01e0 5163     		str	r1, [r2, #52]
 914:Core/Src/main.c **** 		  }
 5161              		.loc 1 914 6 is_stmt 1 view .LVU1387
 914:Core/Src/main.c **** 		  }
 5162              		.loc 1 914 17 is_stmt 0 view .LVU1388
 5163 01e2 9063     		str	r0, [r2, #56]
 5164 01e4 EEE7     		b	.L321
 5165              	.L331:
 923:Core/Src/main.c **** 		  TIM4->CCR2 = speedA;
 5166              		.loc 1 923 5 is_stmt 1 view .LVU1389
 923:Core/Src/main.c **** 		  TIM4->CCR2 = speedA;
 5167              		.loc 1 923 16 is_stmt 0 view .LVU1390
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 159


 5168 01e6 1B4D     		ldr	r5, .L334+60
 5169 01e8 0026     		movs	r6, #0
 5170 01ea 6E63     		str	r6, [r5, #52]
 924:Core/Src/main.c **** 
 5171              		.loc 1 924 5 is_stmt 1 view .LVU1391
 924:Core/Src/main.c **** 
 5172              		.loc 1 924 16 is_stmt 0 view .LVU1392
 5173 01ec AC63     		str	r4, [r5, #56]
 926:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5174              		.loc 1 926 5 is_stmt 1 view .LVU1393
 926:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5175              		.loc 1 926 18 is_stmt 0 view .LVU1394
 5176 01ee FFF7FEFF 		bl	__aeabi_i2d
 5177              	.LVL394:
 926:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5178              		.loc 1 926 18 view .LVU1395
 5179 01f2 0BA3     		adr	r3, .L334+8
 5180 01f4 D3E90023 		ldrd	r2, [r3]
 5181 01f8 FFF7FEFF 		bl	__aeabi_dmul
 5182              	.LVL395:
 5183 01fc 41EC100B 		vmov	d0, r0, r1
 5184 0200 FFF7FEFF 		bl	round
 5185              	.LVL396:
 5186 0204 51EC100B 		vmov	r0, r1, d0
 926:Core/Src/main.c **** 		  TIM4->CCR4 = 0;
 5187              		.loc 1 926 16 view .LVU1396
 5188 0208 FFF7FEFF 		bl	__aeabi_d2uiz
 5189              	.LVL397:
 5190 020c E863     		str	r0, [r5, #60]
 927:Core/Src/main.c ****     }
 5191              		.loc 1 927 5 is_stmt 1 view .LVU1397
 927:Core/Src/main.c ****     }
 5192              		.loc 1 927 16 is_stmt 0 view .LVU1398
 5193 020e 2E64     		str	r6, [r5, #64]
 930:Core/Src/main.c **** void parseCommand_Console(void) {
 5194              		.loc 1 930 1 view .LVU1399
 5195 0210 B0E7     		b	.L312
 5196              	.L335:
 5197 0212 00BFAFF3 		.align	3
 5197      0080
 5198              	.L334:
 5199 0218 00000000 		.word	0
 5200 021c 00E0A540 		.word	1084612608
 5201 0220 66666666 		.word	1717986918
 5202 0224 6666EE3F 		.word	1072588390
 5203 0228 00000000 		.word	.LANCHOR62
 5204 022c 00000000 		.word	.LANCHOR63
 5205 0230 00000000 		.word	.LANCHOR24
 5206 0234 00000000 		.word	.LANCHOR65
 5207 0238 00000000 		.word	.LANCHOR64
 5208 023c 00000000 		.word	.LANCHOR66
 5209 0240 00000000 		.word	.LANCHOR68
 5210 0244 00000000 		.word	.LANCHOR69
 5211 0248 00000000 		.word	.LANCHOR70
 5212 024c 00000000 		.word	.LANCHOR71
 5213 0250 00000000 		.word	.LANCHOR18
 5214 0254 00080040 		.word	1073743872
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 160


 5215 0258 00000000 		.word	.LANCHOR67
 5216 025c 00000000 		.word	.LANCHOR34
 5217              		.cfi_endproc
 5218              	.LFE293:
 5220              		.section	.rodata.parseCommand_RPI.str1.4,"aMS",%progbits,1
 5221              		.align	2
 5222              	.LC18:
 5223 0000 25730D0A 		.ascii	"%s\015\012\000"
 5223      00
 5224 0005 000000   		.align	2
 5225              	.LC19:
 5226 0008 52554E00 		.ascii	"RUN\000"
 5227              		.align	2
 5228              	.LC20:
 5229 000c 53746174 		.ascii	"Status: RUN\015\012\000"
 5229      75733A20 
 5229      52554E0D 
 5229      0A00
 5230 001a 0000     		.align	2
 5231              	.LC21:
 5232 001c 41564F49 		.ascii	"AVOID_LEFT\000"
 5232      445F4C45 
 5232      465400
 5233 0027 00       		.align	2
 5234              	.LC22:
 5235 0028 41564F49 		.ascii	"AVOID_RIGHT\000"
 5235      445F5249 
 5235      47485400 
 5236              		.align	2
 5237              	.LC23:
 5238 0034 41564F49 		.ascii	"AVOID_FRONT\000"
 5238      445F4652 
 5238      4F4E5400 
 5239              		.align	2
 5240              	.LC24:
 5241 0040 474F484F 		.ascii	"GOHOME\000"
 5241      4D4500
 5242 0047 00       		.align	2
 5243              	.LC25:
 5244 0048 53544F50 		.ascii	"STOP\000"
 5244      00
 5245 004d 000000   		.align	2
 5246              	.LC26:
 5247 0050 53746174 		.ascii	"Status: STOP\015\012\000"
 5247      75733A20 
 5247      53544F50 
 5247      0D0A00
 5248              		.section	.text.parseCommand_RPI,"ax",%progbits
 5249              		.align	1
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu fpv4-sp-d16
 5255              	parseCommand_RPI:
 5256              	.LFB295:
1176:Core/Src/main.c **** 
 5257              		.loc 1 1176 25 is_stmt 1 view -0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 161


 5258              		.cfi_startproc
 5259              		@ args = 0, pretend = 0, frame = 64
 5260              		@ frame_needed = 0, uses_anonymous_args = 0
 5261 0000 10B5     		push	{r4, lr}
 5262              	.LCFI59:
 5263              		.cfi_def_cfa_offset 8
 5264              		.cfi_offset 4, -8
 5265              		.cfi_offset 14, -4
 5266 0002 90B0     		sub	sp, sp, #64
 5267              	.LCFI60:
 5268              		.cfi_def_cfa_offset 72
1180:Core/Src/main.c **** 
 5269              		.loc 1 1180 2 view .LVU1401
1180:Core/Src/main.c **** 
 5270              		.loc 1 1180 7 is_stmt 0 view .LVU1402
 5271 0004 0024     		movs	r4, #0
 5272 0006 0094     		str	r4, [sp]
 5273 0008 3C22     		movs	r2, #60
 5274 000a 2146     		mov	r1, r4
 5275 000c 01A8     		add	r0, sp, #4
 5276 000e FFF7FEFF 		bl	memset
 5277              	.LVL398:
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5278              		.loc 1 1182 2 is_stmt 1 view .LVU1403
 5279              	.LBB54:
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5280              		.loc 1 1182 7 view .LVU1404
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5281              		.loc 1 1182 15 is_stmt 0 view .LVU1405
 5282 0012 2246     		mov	r2, r4
 5283              	.LVL399:
 5284              	.L337:
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5285              		.loc 1 1182 22 is_stmt 1 discriminator 1 view .LVU1406
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5286              		.loc 1 1182 2 is_stmt 0 discriminator 1 view .LVU1407
 5287 0014 3F2A     		cmp	r2, #63
 5288 0016 42D8     		bhi	.L336
1183:Core/Src/main.c **** 			memcpy(Command,PIBuffer,x);
 5289              		.loc 1 1183 3 is_stmt 1 view .LVU1408
1183:Core/Src/main.c **** 			memcpy(Command,PIBuffer,x);
 5290              		.loc 1 1183 15 is_stmt 0 view .LVU1409
 5291 0018 334B     		ldr	r3, .L354
 5292 001a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
1183:Core/Src/main.c **** 			memcpy(Command,PIBuffer,x);
 5293              		.loc 1 1183 6 view .LVU1410
 5294 001c 0D2B     		cmp	r3, #13
 5295 001e 02D0     		beq	.L348
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5296              		.loc 1 1182 44 is_stmt 1 discriminator 2 view .LVU1411
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5297              		.loc 1 1182 45 is_stmt 0 discriminator 2 view .LVU1412
 5298 0020 0132     		adds	r2, r2, #1
 5299              	.LVL400:
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5300              		.loc 1 1182 45 discriminator 2 view .LVU1413
 5301 0022 D2B2     		uxtb	r2, r2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 162


 5302              	.LVL401:
1182:Core/Src/main.c **** 		if (PIBuffer[x] == 13) {
 5303              		.loc 1 1182 45 discriminator 2 view .LVU1414
 5304 0024 F6E7     		b	.L337
 5305              	.L348:
1184:Core/Src/main.c **** 			sprintf(msg,"%s\r\n", Command);
 5306              		.loc 1 1184 4 is_stmt 1 view .LVU1415
 5307 0026 3049     		ldr	r1, .L354
 5308 0028 6846     		mov	r0, sp
 5309 002a FFF7FEFF 		bl	memcpy
 5310              	.LVL402:
1185:Core/Src/main.c **** 			if (strcmp(Command, "RUN") == 0) {
 5311              		.loc 1 1185 4 view .LVU1416
 5312 002e 6A46     		mov	r2, sp
 5313 0030 2E49     		ldr	r1, .L354+4
 5314 0032 2F48     		ldr	r0, .L354+8
 5315 0034 FFF7FEFF 		bl	sprintf
 5316              	.LVL403:
1186:Core/Src/main.c **** 				MasterSwitch = 1;
 5317              		.loc 1 1186 4 view .LVU1417
1186:Core/Src/main.c **** 				MasterSwitch = 1;
 5318              		.loc 1 1186 8 is_stmt 0 view .LVU1418
 5319 0038 2E49     		ldr	r1, .L354+12
 5320 003a 6846     		mov	r0, sp
 5321 003c FFF7FEFF 		bl	strcmp
 5322              	.LVL404:
1186:Core/Src/main.c **** 				MasterSwitch = 1;
 5323              		.loc 1 1186 7 view .LVU1419
 5324 0040 78B3     		cbz	r0, .L349
 5325              	.L339:
1191:Core/Src/main.c **** 				AVOID_LEFT = 1;
 5326              		.loc 1 1191 4 is_stmt 1 view .LVU1420
1191:Core/Src/main.c **** 				AVOID_LEFT = 1;
 5327              		.loc 1 1191 8 is_stmt 0 view .LVU1421
 5328 0042 2D49     		ldr	r1, .L354+16
 5329 0044 6846     		mov	r0, sp
 5330 0046 FFF7FEFF 		bl	strcmp
 5331              	.LVL405:
1191:Core/Src/main.c **** 				AVOID_LEFT = 1;
 5332              		.loc 1 1191 7 view .LVU1422
 5333 004a 18B9     		cbnz	r0, .L340
1191:Core/Src/main.c **** 				AVOID_LEFT = 1;
 5334              		.loc 1 1191 52 discriminator 1 view .LVU1423
 5335 004c 2B4B     		ldr	r3, .L354+20
 5336 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1191:Core/Src/main.c **** 				AVOID_LEFT = 1;
 5337              		.loc 1 1191 43 discriminator 1 view .LVU1424
 5338 0050 012B     		cmp	r3, #1
 5339 0052 31D0     		beq	.L350
 5340              	.L340:
1194:Core/Src/main.c **** 				AVOID_RIGHT = 1;
 5341              		.loc 1 1194 4 is_stmt 1 view .LVU1425
1194:Core/Src/main.c **** 				AVOID_RIGHT = 1;
 5342              		.loc 1 1194 8 is_stmt 0 view .LVU1426
 5343 0054 2A49     		ldr	r1, .L354+24
 5344 0056 6846     		mov	r0, sp
 5345 0058 FFF7FEFF 		bl	strcmp
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 163


 5346              	.LVL406:
1194:Core/Src/main.c **** 				AVOID_RIGHT = 1;
 5347              		.loc 1 1194 7 view .LVU1427
 5348 005c 18B9     		cbnz	r0, .L341
1194:Core/Src/main.c **** 				AVOID_RIGHT = 1;
 5349              		.loc 1 1194 53 discriminator 1 view .LVU1428
 5350 005e 274B     		ldr	r3, .L354+20
 5351 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1194:Core/Src/main.c **** 				AVOID_RIGHT = 1;
 5352              		.loc 1 1194 44 discriminator 1 view .LVU1429
 5353 0062 012B     		cmp	r3, #1
 5354 0064 2CD0     		beq	.L351
 5355              	.L341:
1197:Core/Src/main.c **** 				AVOID_FRONT = 1;
 5356              		.loc 1 1197 4 is_stmt 1 view .LVU1430
1197:Core/Src/main.c **** 				AVOID_FRONT = 1;
 5357              		.loc 1 1197 8 is_stmt 0 view .LVU1431
 5358 0066 2749     		ldr	r1, .L354+28
 5359 0068 6846     		mov	r0, sp
 5360 006a FFF7FEFF 		bl	strcmp
 5361              	.LVL407:
1197:Core/Src/main.c **** 				AVOID_FRONT = 1;
 5362              		.loc 1 1197 7 view .LVU1432
 5363 006e 18B9     		cbnz	r0, .L342
1197:Core/Src/main.c **** 				AVOID_FRONT = 1;
 5364              		.loc 1 1197 53 discriminator 1 view .LVU1433
 5365 0070 224B     		ldr	r3, .L354+20
 5366 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1197:Core/Src/main.c **** 				AVOID_FRONT = 1;
 5367              		.loc 1 1197 44 discriminator 1 view .LVU1434
 5368 0074 012B     		cmp	r3, #1
 5369 0076 27D0     		beq	.L352
 5370              	.L342:
1200:Core/Src/main.c **** 				perimeterTracking = 1;
 5371              		.loc 1 1200 4 is_stmt 1 view .LVU1435
1200:Core/Src/main.c **** 				perimeterTracking = 1;
 5372              		.loc 1 1200 8 is_stmt 0 view .LVU1436
 5373 0078 2349     		ldr	r1, .L354+32
 5374 007a 6846     		mov	r0, sp
 5375 007c FFF7FEFF 		bl	strcmp
 5376              	.LVL408:
1200:Core/Src/main.c **** 				perimeterTracking = 1;
 5377              		.loc 1 1200 7 view .LVU1437
 5378 0080 10B9     		cbnz	r0, .L343
1201:Core/Src/main.c **** 			}
 5379              		.loc 1 1201 5 is_stmt 1 view .LVU1438
1201:Core/Src/main.c **** 			}
 5380              		.loc 1 1201 23 is_stmt 0 view .LVU1439
 5381 0082 224B     		ldr	r3, .L354+36
 5382 0084 0122     		movs	r2, #1
 5383 0086 1A70     		strb	r2, [r3]
 5384              	.L343:
1203:Core/Src/main.c **** 				MasterSwitch = 0;
 5385              		.loc 1 1203 4 is_stmt 1 view .LVU1440
1203:Core/Src/main.c **** 				MasterSwitch = 0;
 5386              		.loc 1 1203 8 is_stmt 0 view .LVU1441
 5387 0088 2149     		ldr	r1, .L354+40
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 164


 5388 008a 6846     		mov	r0, sp
 5389 008c FFF7FEFF 		bl	strcmp
 5390              	.LVL409:
1203:Core/Src/main.c **** 				MasterSwitch = 0;
 5391              		.loc 1 1203 7 view .LVU1442
 5392 0090 F0B1     		cbz	r0, .L353
 5393              	.L344:
1209:Core/Src/main.c **** 			UART2_ready = 0;
 5394              		.loc 1 1209 4 is_stmt 1 view .LVU1443
 5395 0092 1748     		ldr	r0, .L354+8
 5396 0094 FFF7FEFF 		bl	Serial_Console
 5397              	.LVL410:
1210:Core/Src/main.c **** 
 5398              		.loc 1 1210 4 view .LVU1444
1210:Core/Src/main.c **** 
 5399              		.loc 1 1210 16 is_stmt 0 view .LVU1445
 5400 0098 1E4B     		ldr	r3, .L354+44
 5401 009a 0022     		movs	r2, #0
 5402 009c 1A70     		strb	r2, [r3]
1212:Core/Src/main.c **** 		}
 5403              		.loc 1 1212 4 is_stmt 1 view .LVU1446
 5404              	.L336:
 5405              	.LBE54:
1215:Core/Src/main.c **** 
 5406              		.loc 1 1215 1 is_stmt 0 view .LVU1447
 5407 009e 10B0     		add	sp, sp, #64
 5408              	.LCFI61:
 5409              		.cfi_remember_state
 5410              		.cfi_def_cfa_offset 8
 5411              		@ sp needed
 5412 00a0 10BD     		pop	{r4, pc}
 5413              	.L349:
 5414              	.LCFI62:
 5415              		.cfi_restore_state
 5416              	.LBB55:
1187:Core/Src/main.c **** 				Serial_RPi("Status: RUN\r\n");
 5417              		.loc 1 1187 5 is_stmt 1 view .LVU1448
1187:Core/Src/main.c **** 				Serial_RPi("Status: RUN\r\n");
 5418              		.loc 1 1187 18 is_stmt 0 view .LVU1449
 5419 00a2 1D4B     		ldr	r3, .L354+48
 5420 00a4 0122     		movs	r2, #1
 5421 00a6 1A70     		strb	r2, [r3]
1188:Core/Src/main.c **** 				Serial_Console("Status: RUN\r\n");
 5422              		.loc 1 1188 5 is_stmt 1 view .LVU1450
 5423 00a8 1C4C     		ldr	r4, .L354+52
 5424 00aa 2046     		mov	r0, r4
 5425 00ac FFF7FEFF 		bl	Serial_RPi
 5426              	.LVL411:
1189:Core/Src/main.c **** 			}
 5427              		.loc 1 1189 5 view .LVU1451
 5428 00b0 2046     		mov	r0, r4
 5429 00b2 FFF7FEFF 		bl	Serial_Console
 5430              	.LVL412:
 5431 00b6 C4E7     		b	.L339
 5432              	.L350:
1192:Core/Src/main.c **** 			}
 5433              		.loc 1 1192 5 view .LVU1452
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 165


1192:Core/Src/main.c **** 			}
 5434              		.loc 1 1192 16 is_stmt 0 view .LVU1453
 5435 00b8 194B     		ldr	r3, .L354+56
 5436 00ba 0122     		movs	r2, #1
 5437 00bc 1A70     		strb	r2, [r3]
 5438 00be C9E7     		b	.L340
 5439              	.L351:
1195:Core/Src/main.c **** 			}
 5440              		.loc 1 1195 5 is_stmt 1 view .LVU1454
1195:Core/Src/main.c **** 			}
 5441              		.loc 1 1195 17 is_stmt 0 view .LVU1455
 5442 00c0 184B     		ldr	r3, .L354+60
 5443 00c2 0122     		movs	r2, #1
 5444 00c4 1A70     		strb	r2, [r3]
 5445 00c6 CEE7     		b	.L341
 5446              	.L352:
1198:Core/Src/main.c **** 			}
 5447              		.loc 1 1198 5 is_stmt 1 view .LVU1456
1198:Core/Src/main.c **** 			}
 5448              		.loc 1 1198 17 is_stmt 0 view .LVU1457
 5449 00c8 174B     		ldr	r3, .L354+64
 5450 00ca 0122     		movs	r2, #1
 5451 00cc 1A70     		strb	r2, [r3]
 5452 00ce D3E7     		b	.L342
 5453              	.L353:
1204:Core/Src/main.c **** 
 5454              		.loc 1 1204 5 is_stmt 1 view .LVU1458
1204:Core/Src/main.c **** 
 5455              		.loc 1 1204 18 is_stmt 0 view .LVU1459
 5456 00d0 114B     		ldr	r3, .L354+48
 5457 00d2 0022     		movs	r2, #0
 5458 00d4 1A70     		strb	r2, [r3]
1206:Core/Src/main.c **** 				Serial_Console("Status: STOP\r\n");
 5459              		.loc 1 1206 5 is_stmt 1 view .LVU1460
 5460 00d6 154C     		ldr	r4, .L354+68
 5461 00d8 2046     		mov	r0, r4
 5462 00da FFF7FEFF 		bl	Serial_RPi
 5463              	.LVL413:
1207:Core/Src/main.c **** 			}
 5464              		.loc 1 1207 5 view .LVU1461
 5465 00de 2046     		mov	r0, r4
 5466 00e0 FFF7FEFF 		bl	Serial_Console
 5467              	.LVL414:
 5468 00e4 D5E7     		b	.L344
 5469              	.L355:
 5470 00e6 00BF     		.align	2
 5471              	.L354:
 5472 00e8 00000000 		.word	PIBuffer
 5473 00ec 00000000 		.word	.LC18
 5474 00f0 00000000 		.word	msg
 5475 00f4 08000000 		.word	.LC19
 5476 00f8 1C000000 		.word	.LC21
 5477 00fc 00000000 		.word	.LANCHOR11
 5478 0100 28000000 		.word	.LC22
 5479 0104 34000000 		.word	.LC23
 5480 0108 40000000 		.word	.LC24
 5481 010c 00000000 		.word	.LANCHOR35
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 166


 5482 0110 48000000 		.word	.LC25
 5483 0114 00000000 		.word	.LANCHOR75
 5484 0118 00000000 		.word	.LANCHOR54
 5485 011c 0C000000 		.word	.LC20
 5486 0120 00000000 		.word	.LANCHOR72
 5487 0124 00000000 		.word	.LANCHOR73
 5488 0128 00000000 		.word	.LANCHOR74
 5489 012c 50000000 		.word	.LC26
 5490              	.LBE55:
 5491              		.cfi_endproc
 5492              	.LFE295:
 5494              		.section	.text.BootLoaderInit,"ax",%progbits
 5495              		.align	1
 5496              		.syntax unified
 5497              		.thumb
 5498              		.thumb_func
 5499              		.fpu fpv4-sp-d16
 5501              	BootLoaderInit:
 5502              	.LVL415:
 5503              	.LFB274:
 375:Core/Src/main.c ****   SysMemBootJump = (void (*)(void)) (*((unsigned long *) 0x1fff0004));
 5504              		.loc 1 375 1 view -0
 5505              		.cfi_startproc
 5506              		@ args = 0, pretend = 0, frame = 0
 5507              		@ frame_needed = 0, uses_anonymous_args = 0
 375:Core/Src/main.c ****   SysMemBootJump = (void (*)(void)) (*((unsigned long *) 0x1fff0004));
 5508              		.loc 1 375 1 is_stmt 0 view .LVU1463
 5509 0000 08B5     		push	{r3, lr}
 5510              	.LCFI63:
 5511              		.cfi_def_cfa_offset 8
 5512              		.cfi_offset 3, -8
 5513              		.cfi_offset 14, -4
 376:Core/Src/main.c ****   if (BootLoaderStatus == 1)
 5514              		.loc 1 376 3 is_stmt 1 view .LVU1464
 376:Core/Src/main.c ****   if (BootLoaderStatus == 1)
 5515              		.loc 1 376 38 is_stmt 0 view .LVU1465
 5516 0002 0C4B     		ldr	r3, .L361
 5517 0004 1A68     		ldr	r2, [r3]
 376:Core/Src/main.c ****   if (BootLoaderStatus == 1)
 5518              		.loc 1 376 18 view .LVU1466
 5519 0006 0C4B     		ldr	r3, .L361+4
 5520 0008 1A60     		str	r2, [r3]
 377:Core/Src/main.c ****   {
 5521              		.loc 1 377 3 is_stmt 1 view .LVU1467
 377:Core/Src/main.c ****   {
 5522              		.loc 1 377 6 is_stmt 0 view .LVU1468
 5523 000a 0128     		cmp	r0, #1
 5524 000c 00D0     		beq	.L360
 389:Core/Src/main.c **** 
 5525              		.loc 1 389 1 view .LVU1469
 5526 000e 08BD     		pop	{r3, pc}
 5527              	.L360:
 380:Core/Src/main.c ****     SysTick->CTRL = 0;
 5528              		.loc 1 380 5 is_stmt 1 view .LVU1470
 5529 0010 FFF7FEFF 		bl	HAL_DeInit
 5530              	.LVL416:
 381:Core/Src/main.c ****     SysTick->LOAD = 0;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 167


 5531              		.loc 1 381 5 view .LVU1471
 381:Core/Src/main.c ****     SysTick->LOAD = 0;
 5532              		.loc 1 381 19 is_stmt 0 view .LVU1472
 5533 0014 094B     		ldr	r3, .L361+8
 5534 0016 0022     		movs	r2, #0
 5535 0018 1A60     		str	r2, [r3]
 382:Core/Src/main.c ****     SysTick->VAL = 0;
 5536              		.loc 1 382 5 is_stmt 1 view .LVU1473
 382:Core/Src/main.c ****     SysTick->VAL = 0;
 5537              		.loc 1 382 19 is_stmt 0 view .LVU1474
 5538 001a 5A60     		str	r2, [r3, #4]
 383:Core/Src/main.c ****     __set_PRIMASK(1);
 5539              		.loc 1 383 5 is_stmt 1 view .LVU1475
 383:Core/Src/main.c ****     __set_PRIMASK(1);
 5540              		.loc 1 383 18 is_stmt 0 view .LVU1476
 5541 001c 9A60     		str	r2, [r3, #8]
 384:Core/Src/main.c ****     __set_MSP(0x20001000);
 5542              		.loc 1 384 5 is_stmt 1 view .LVU1477
 5543              	.LVL417:
 5544              	.LBB56:
 5545              	.LBI56:
 5546              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 168


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 169


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 170


 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 171


 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 172


 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 173


 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 174


 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 5547              		.loc 2 412 27 view .LVU1478
 5548              	.LBB57:
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 5549              		.loc 2 414 3 view .LVU1479
 5550 001e 0123     		movs	r3, #1
 5551              		.syntax unified
 5552              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5553 0020 83F31088 		MSR primask, r3
 5554              	@ 0 "" 2
 5555              	.LVL418:
 5556              		.loc 2 414 3 is_stmt 0 view .LVU1480
 5557              		.thumb
 5558              		.syntax unified
 5559              	.LBE57:
 5560              	.LBE56:
 385:Core/Src/main.c ****     SysMemBootJump();
 5561              		.loc 1 385 5 is_stmt 1 view .LVU1481
 5562              	.LBB58:
 5563              	.LBI58:
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5564              		.loc 2 331 27 view .LVU1482
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 175


 5565              	.LBB59:
 333:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5566              		.loc 2 333 3 view .LVU1483
 5567 0024 064B     		ldr	r3, .L361+12
 5568              		.syntax unified
 5569              	@ 333 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5570 0026 83F30888 		MSR msp, r3
 5571              	@ 0 "" 2
 5572              	.LVL419:
 333:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5573              		.loc 2 333 3 is_stmt 0 view .LVU1484
 5574              		.thumb
 5575              		.syntax unified
 5576              	.LBE59:
 5577              	.LBE58:
 386:Core/Src/main.c ****     while(1);
 5578              		.loc 1 386 5 is_stmt 1 view .LVU1485
 5579 002a 034B     		ldr	r3, .L361+4
 5580 002c 1B68     		ldr	r3, [r3]
 5581 002e 9847     		blx	r3
 5582              	.LVL420:
 5583              	.L358:
 387:Core/Src/main.c ****   }
 5584              		.loc 1 387 5 discriminator 1 view .LVU1486
 387:Core/Src/main.c ****   }
 5585              		.loc 1 387 13 discriminator 1 view .LVU1487
 387:Core/Src/main.c ****   }
 5586              		.loc 1 387 10 discriminator 1 view .LVU1488
 5587 0030 FEE7     		b	.L358
 5588              	.L362:
 5589 0032 00BF     		.align	2
 5590              	.L361:
 5591 0034 0400FF1F 		.word	536805380
 5592 0038 00000000 		.word	.LANCHOR76
 5593 003c 10E000E0 		.word	-536813552
 5594 0040 00100020 		.word	536875008
 5595              		.cfi_endproc
 5596              	.LFE274:
 5598              		.section	.text.setDate,"ax",%progbits
 5599              		.align	1
 5600              		.syntax unified
 5601              		.thumb
 5602              		.thumb_func
 5603              		.fpu fpv4-sp-d16
 5605              	setDate:
 5606              	.LVL421:
 5607              	.LFB273:
 360:Core/Src/main.c **** 
 5608              		.loc 1 360 73 view -0
 5609              		.cfi_startproc
 5610              		@ args = 0, pretend = 0, frame = 8
 5611              		@ frame_needed = 0, uses_anonymous_args = 0
 360:Core/Src/main.c **** 
 5612              		.loc 1 360 73 is_stmt 0 view .LVU1490
 5613 0000 70B5     		push	{r4, r5, r6, lr}
 5614              	.LCFI64:
 5615              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 176


 5616              		.cfi_offset 4, -16
 5617              		.cfi_offset 5, -12
 5618              		.cfi_offset 6, -8
 5619              		.cfi_offset 14, -4
 5620 0002 82B0     		sub	sp, sp, #8
 5621              	.LCFI65:
 5622              		.cfi_def_cfa_offset 24
 5623 0004 0446     		mov	r4, r0
 5624 0006 0E46     		mov	r6, r1
 5625 0008 1546     		mov	r5, r2
 362:Core/Src/main.c **** 
 5626              		.loc 1 362 2 is_stmt 1 view .LVU1491
 362:Core/Src/main.c **** 
 5627              		.loc 1 362 18 is_stmt 0 view .LVU1492
 5628 000a 0022     		movs	r2, #0
 5629              	.LVL422:
 362:Core/Src/main.c **** 
 5630              		.loc 1 362 18 view .LVU1493
 5631 000c 0192     		str	r2, [sp, #4]
 364:Core/Src/main.c **** 	sDate.Month = RTC_ByteToBcd2(month);
 5632              		.loc 1 364 2 is_stmt 1 view .LVU1494
 364:Core/Src/main.c **** 	sDate.Month = RTC_ByteToBcd2(month);
 5633              		.loc 1 364 18 is_stmt 0 view .LVU1495
 5634 000e 1846     		mov	r0, r3
 5635              	.LVL423:
 364:Core/Src/main.c **** 	sDate.Month = RTC_ByteToBcd2(month);
 5636              		.loc 1 364 18 view .LVU1496
 5637 0010 FFF7FEFF 		bl	RTC_ByteToBcd2
 5638              	.LVL424:
 364:Core/Src/main.c **** 	sDate.Month = RTC_ByteToBcd2(month);
 5639              		.loc 1 364 16 view .LVU1497
 5640 0014 8DF80400 		strb	r0, [sp, #4]
 365:Core/Src/main.c **** 	sDate.Date = RTC_ByteToBcd2(day);
 5641              		.loc 1 365 2 is_stmt 1 view .LVU1498
 365:Core/Src/main.c **** 	sDate.Date = RTC_ByteToBcd2(day);
 5642              		.loc 1 365 16 is_stmt 0 view .LVU1499
 5643 0018 3046     		mov	r0, r6
 5644 001a FFF7FEFF 		bl	RTC_ByteToBcd2
 5645              	.LVL425:
 365:Core/Src/main.c **** 	sDate.Date = RTC_ByteToBcd2(day);
 5646              		.loc 1 365 14 view .LVU1500
 5647 001e 8DF80500 		strb	r0, [sp, #5]
 366:Core/Src/main.c **** 	sDate.Year = RTC_ByteToBcd2(year);
 5648              		.loc 1 366 2 is_stmt 1 view .LVU1501
 366:Core/Src/main.c **** 	sDate.Year = RTC_ByteToBcd2(year);
 5649              		.loc 1 366 15 is_stmt 0 view .LVU1502
 5650 0022 2846     		mov	r0, r5
 5651 0024 FFF7FEFF 		bl	RTC_ByteToBcd2
 5652              	.LVL426:
 366:Core/Src/main.c **** 	sDate.Year = RTC_ByteToBcd2(year);
 5653              		.loc 1 366 13 view .LVU1503
 5654 0028 8DF80600 		strb	r0, [sp, #6]
 367:Core/Src/main.c **** 	HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD);
 5655              		.loc 1 367 2 is_stmt 1 view .LVU1504
 367:Core/Src/main.c **** 	HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD);
 5656              		.loc 1 367 15 is_stmt 0 view .LVU1505
 5657 002c 2046     		mov	r0, r4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 177


 5658 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 5659              	.LVL427:
 367:Core/Src/main.c **** 	HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD);
 5660              		.loc 1 367 13 view .LVU1506
 5661 0032 8DF80700 		strb	r0, [sp, #7]
 368:Core/Src/main.c **** 
 5662              		.loc 1 368 2 is_stmt 1 view .LVU1507
 5663 0036 0122     		movs	r2, #1
 5664 0038 01A9     		add	r1, sp, #4
 5665 003a 0248     		ldr	r0, .L365
 5666 003c FFF7FEFF 		bl	HAL_RTC_SetDate
 5667              	.LVL428:
 370:Core/Src/main.c **** 
 5668              		.loc 1 370 1 is_stmt 0 view .LVU1508
 5669 0040 02B0     		add	sp, sp, #8
 5670              	.LCFI66:
 5671              		.cfi_def_cfa_offset 16
 5672              		@ sp needed
 5673 0042 70BD     		pop	{r4, r5, r6, pc}
 5674              	.L366:
 5675              		.align	2
 5676              	.L365:
 5677 0044 00000000 		.word	hrtc
 5678              		.cfi_endproc
 5679              	.LFE273:
 5681              		.section	.text.setTime,"ax",%progbits
 5682              		.align	1
 5683              		.syntax unified
 5684              		.thumb
 5685              		.thumb_func
 5686              		.fpu fpv4-sp-d16
 5688              	setTime:
 5689              	.LVL429:
 5690              	.LFB272:
 348:Core/Src/main.c **** 
 5691              		.loc 1 348 60 is_stmt 1 view -0
 5692              		.cfi_startproc
 5693              		@ args = 0, pretend = 0, frame = 24
 5694              		@ frame_needed = 0, uses_anonymous_args = 0
 348:Core/Src/main.c **** 
 5695              		.loc 1 348 60 is_stmt 0 view .LVU1510
 5696 0000 70B5     		push	{r4, r5, r6, lr}
 5697              	.LCFI67:
 5698              		.cfi_def_cfa_offset 16
 5699              		.cfi_offset 4, -16
 5700              		.cfi_offset 5, -12
 5701              		.cfi_offset 6, -8
 5702              		.cfi_offset 14, -4
 5703 0002 86B0     		sub	sp, sp, #24
 5704              	.LCFI68:
 5705              		.cfi_def_cfa_offset 40
 5706 0004 0E46     		mov	r6, r1
 5707 0006 1546     		mov	r5, r2
 350:Core/Src/main.c **** 
 5708              		.loc 1 350 2 is_stmt 1 view .LVU1511
 350:Core/Src/main.c **** 
 5709              		.loc 1 350 18 is_stmt 0 view .LVU1512
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 178


 5710 0008 0024     		movs	r4, #0
 5711 000a 0194     		str	r4, [sp, #4]
 5712 000c 0294     		str	r4, [sp, #8]
 5713 000e 0394     		str	r4, [sp, #12]
 5714 0010 0494     		str	r4, [sp, #16]
 5715 0012 0594     		str	r4, [sp, #20]
 352:Core/Src/main.c **** 	sTime.Minutes = RTC_ByteToBcd2(minute);
 5716              		.loc 1 352 2 is_stmt 1 view .LVU1513
 352:Core/Src/main.c **** 	sTime.Minutes = RTC_ByteToBcd2(minute);
 5717              		.loc 1 352 16 is_stmt 0 view .LVU1514
 5718 0014 FFF7FEFF 		bl	RTC_ByteToBcd2
 5719              	.LVL430:
 352:Core/Src/main.c **** 	sTime.Minutes = RTC_ByteToBcd2(minute);
 5720              		.loc 1 352 14 view .LVU1515
 5721 0018 8DF80400 		strb	r0, [sp, #4]
 353:Core/Src/main.c **** 	sTime.Seconds = RTC_ByteToBcd2(second);
 5722              		.loc 1 353 2 is_stmt 1 view .LVU1516
 353:Core/Src/main.c **** 	sTime.Seconds = RTC_ByteToBcd2(second);
 5723              		.loc 1 353 18 is_stmt 0 view .LVU1517
 5724 001c 3046     		mov	r0, r6
 5725 001e FFF7FEFF 		bl	RTC_ByteToBcd2
 5726              	.LVL431:
 353:Core/Src/main.c **** 	sTime.Seconds = RTC_ByteToBcd2(second);
 5727              		.loc 1 353 16 view .LVU1518
 5728 0022 8DF80500 		strb	r0, [sp, #5]
 354:Core/Src/main.c **** 	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 5729              		.loc 1 354 2 is_stmt 1 view .LVU1519
 354:Core/Src/main.c **** 	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 5730              		.loc 1 354 18 is_stmt 0 view .LVU1520
 5731 0026 2846     		mov	r0, r5
 5732 0028 FFF7FEFF 		bl	RTC_ByteToBcd2
 5733              	.LVL432:
 354:Core/Src/main.c **** 	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 5734              		.loc 1 354 16 view .LVU1521
 5735 002c 8DF80600 		strb	r0, [sp, #6]
 355:Core/Src/main.c **** 	sTime.StoreOperation = RTC_STOREOPERATION_SET;
 5736              		.loc 1 355 2 is_stmt 1 view .LVU1522
 355:Core/Src/main.c **** 	sTime.StoreOperation = RTC_STOREOPERATION_SET;
 5737              		.loc 1 355 23 is_stmt 0 view .LVU1523
 5738 0030 0494     		str	r4, [sp, #16]
 356:Core/Src/main.c **** 	HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD);
 5739              		.loc 1 356 2 is_stmt 1 view .LVU1524
 356:Core/Src/main.c **** 	HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD);
 5740              		.loc 1 356 23 is_stmt 0 view .LVU1525
 5741 0032 4FF48023 		mov	r3, #262144
 5742 0036 0593     		str	r3, [sp, #20]
 357:Core/Src/main.c **** 
 5743              		.loc 1 357 2 is_stmt 1 view .LVU1526
 5744 0038 0122     		movs	r2, #1
 5745 003a 01A9     		add	r1, sp, #4
 5746 003c 0248     		ldr	r0, .L369
 5747 003e FFF7FEFF 		bl	HAL_RTC_SetTime
 5748              	.LVL433:
 359:Core/Src/main.c **** void setDate(uint8_t year, uint8_t month, uint8_t day, uint8_t weekday) {
 5749              		.loc 1 359 1 is_stmt 0 view .LVU1527
 5750 0042 06B0     		add	sp, sp, #24
 5751              	.LCFI69:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 179


 5752              		.cfi_def_cfa_offset 16
 5753              		@ sp needed
 5754 0044 70BD     		pop	{r4, r5, r6, pc}
 5755              	.L370:
 5756 0046 00BF     		.align	2
 5757              	.L369:
 5758 0048 00000000 		.word	hrtc
 5759              		.cfi_endproc
 5760              	.LFE272:
 5762              		.section	.rodata.parseCommand_Console.str1.4,"aMS",%progbits,1
 5763              		.align	2
 5764              	.LC27:
 5765 0000 44495341 		.ascii	"DISABLE\000"
 5765      424C4500 
 5766              		.align	2
 5767              	.LC28:
 5768 0008 48454C4C 		.ascii	"HELLO\000"
 5768      4F00
 5769 000e 0000     		.align	2
 5770              	.LC29:
 5771 0010 48656C6C 		.ascii	"Hello fellow user! Welcome to RazorBoard!\015\012\000"
 5771      6F206665 
 5771      6C6C6F77 
 5771      20757365 
 5771      72212057 
 5772              		.align	2
 5773              	.LC30:
 5774 003c 56455253 		.ascii	"VERSION\000"
 5774      494F4E00 
 5775              		.align	2
 5776              	.LC31:
 5777 0044 44454255 		.ascii	"DEBUG ON\000"
 5777      47204F4E 
 5777      00
 5778 004d 000000   		.align	2
 5779              	.LC32:
 5780 0050 44454255 		.ascii	"DEBUG is now ON\015\012\000"
 5780      47206973 
 5780      206E6F77 
 5780      204F4E0D 
 5780      0A00
 5781 0062 0000     		.align	2
 5782              	.LC33:
 5783 0064 44454255 		.ascii	"DEBUG OFF\000"
 5783      47204F46 
 5783      4600
 5784 006e 0000     		.align	2
 5785              	.LC34:
 5786 0070 44454255 		.ascii	"DEBUG is now OFF\015\012\000"
 5786      47206973 
 5786      206E6F77 
 5786      204F4646 
 5786      0D0A00
 5787 0083 00       		.align	2
 5788              	.LC35:
 5789 0084 564F4C54 		.ascii	"VOLTAGE\000"
 5789      41474500 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 180


 5790              		.align	2
 5791              	.LC36:
 5792 008c 252E3266 		.ascii	"%.2f\015\012\000"
 5792      0D0A00
 5793 0093 00       		.align	2
 5794              	.LC37:
 5795 0094 55504752 		.ascii	"UPGRADE\000"
 5795      41444500 
 5796              		.align	2
 5797              	.LC38:
 5798 009c 456E7465 		.ascii	"Entering Bootloader...\015\012\000"
 5798      72696E67 
 5798      20426F6F 
 5798      746C6F61 
 5798      6465722E 
 5799 00b5 000000   		.align	2
 5800              	.LC39:
 5801 00b8 53484F57 		.ascii	"SHOW SIG\000"
 5801      20534947 
 5801      00
 5802 00c1 000000   		.align	2
 5803              	.LC40:
 5804 00c4 5369676E 		.ascii	"Signature will be printed in 8 seconds, please star"
 5804      61747572 
 5804      65207769 
 5804      6C6C2062 
 5804      65207072 
 5805 00f7 7420796F 		.ascii	"t your plotter before.\015\012\000"
 5805      75722070 
 5805      6C6F7474 
 5805      65722062 
 5805      65666F72 
 5806              		.align	2
 5807              	.LC41:
 5808 0110 25660D0A 		.ascii	"%f\015\012\000"
 5808      00
 5809 0115 000000   		.align	2
 5810              	.LC42:
 5811 0118 4558504F 		.ascii	"EXPORT SIG\000"
 5811      52542053 
 5811      494700
 5812 0123 00       		.align	2
 5813              	.LC43:
 5814 0124 5369676E 		.ascii	"Signature exported as an array\015\012\000"
 5814      61747572 
 5814      65206578 
 5814      706F7274 
 5814      65642061 
 5815 0145 000000   		.align	2
 5816              	.LC44:
 5817 0148 7B2000   		.ascii	"{ \000"
 5818 014b 00       		.align	2
 5819              	.LC45:
 5820 014c 25662C00 		.ascii	"%f,\000"
 5821              		.align	2
 5822              	.LC46:
 5823 0150 207D3B0D 		.ascii	" };\015\012\000"
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 181


 5823      0A00
 5824 0156 0000     		.align	2
 5825              	.LC47:
 5826 0158 5245434F 		.ascii	"RECORD SIG\000"
 5826      52442053 
 5826      494700
 5827 0163 00       		.align	2
 5828              	.LC48:
 5829 0164 446F6E65 		.ascii	"Done!\015\012\000"
 5829      210D0A00 
 5830              		.align	2
 5831              	.LC49:
 5832 016c 54455354 		.ascii	"TEST LEFT MOTOR\000"
 5832      204C4546 
 5832      54204D4F 
 5832      544F5200 
 5833              		.align	2
 5834              	.LC50:
 5835 017c 446F6E65 		.ascii	"Done.\015\012\000"
 5835      2E0D0A00 
 5836              		.align	2
 5837              	.LC51:
 5838 0184 54455354 		.ascii	"TEST RIGHT MOTOR\000"
 5838      20524947 
 5838      4854204D 
 5838      4F544F52 
 5838      00
 5839 0195 000000   		.align	2
 5840              	.LC52:
 5841 0198 5245424F 		.ascii	"REBOOT\000"
 5841      4F5400
 5842 019f 00       		.align	2
 5843              	.LC53:
 5844 01a0 5265626F 		.ascii	"Rebooting...\015\012\000"
 5844      6F74696E 
 5844      672E2E2E 
 5844      0D0A00
 5845 01af 00       		.align	2
 5846              	.LC54:
 5847 01b0 53484F57 		.ascii	"SHOW CURRENT\000"
 5847      20435552 
 5847      52454E54 
 5847      00
 5848 01bd 000000   		.align	2
 5849              	.LC55:
 5850 01c0 4D313A20 		.ascii	"M1: %.2f\015\012M2: %.2f\015\012C1: %.2f\015\012\000"
 5850      252E3266 
 5850      0D0A4D32 
 5850      3A20252E 
 5850      32660D0A 
 5851 01df 00       		.align	2
 5852              	.LC56:
 5853 01e0 53544F50 		.ascii	"STOP MOTORS\000"
 5853      204D4F54 
 5853      4F525300 
 5854              		.align	2
 5855              	.LC57:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 182


 5856 01ec 52554E20 		.ascii	"RUN MOTORS FORWARD\000"
 5856      4D4F544F 
 5856      52532046 
 5856      4F525741 
 5856      524400
 5857 01ff 00       		.align	2
 5858              	.LC58:
 5859 0200 52554E20 		.ascii	"RUN MOTORS REVERSE\000"
 5859      4D4F544F 
 5859      52532052 
 5859      45564552 
 5859      534500
 5860 0213 00       		.align	2
 5861              	.LC59:
 5862 0214 53455420 		.ascii	"SET DATE\000"
 5862      44415445 
 5862      00
 5863 021d 000000   		.align	2
 5864              	.LC60:
 5865 0220 25732025 		.ascii	"%s %s %d %d %d %d\000"
 5865      73202564 
 5865      20256420 
 5865      25642025 
 5865      6400
 5866 0232 0000     		.align	2
 5867              	.LC61:
 5868 0234 53455420 		.ascii	"SET TIME\000"
 5868      54494D45 
 5868      00
 5869 023d 000000   		.align	2
 5870              	.LC62:
 5871 0240 25732025 		.ascii	"%s %s %d %d %d\000"
 5871      73202564 
 5871      20256420 
 5871      256400
 5872 024f 00       		.align	2
 5873              	.LC63:
 5874 0250 53455420 		.ascii	"SET KP\000"
 5874      4B5000
 5875 0257 00       		.align	2
 5876              	.LC64:
 5877 0258 25732025 		.ascii	"%s %s %f\000"
 5877      73202566 
 5877      00
 5878 0261 000000   		.align	2
 5879              	.LC65:
 5880 0264 53455420 		.ascii	"SET KI\000"
 5880      4B4900
 5881 026b 00       		.align	2
 5882              	.LC66:
 5883 026c 53455420 		.ascii	"SET KD\000"
 5883      4B4400
 5884 0273 00       		.align	2
 5885              	.LC67:
 5886 0274 52617A6F 		.ascii	"RazorBoard DISABLED.\015\012\000"
 5886      72426F61 
 5886      72642044 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 183


 5886      49534142 
 5886      4C45442E 
 5887 028b 00       		.align	2
 5888              	.LC68:
 5889 028c 506C6561 		.ascii	"Please type <help> to see available commands\015\012"
 5889      73652074 
 5889      79706520 
 5889      3C68656C 
 5889      703E2074 
 5890 02ba 00       		.ascii	"\000"
 5891 02bb 00       		.align	2
 5892              	.LC69:
 5893 02bc 454E4142 		.ascii	"ENABLE\000"
 5893      4C4500
 5894 02c3 00       		.align	2
 5895              	.LC70:
 5896 02c4 52617A6F 		.ascii	"RazorBoard ENABLED. STEP AWAY FROM THE VEHICLE!\015"
 5896      72426F61 
 5896      72642045 
 5896      4E41424C 
 5896      45442E20 
 5897 02f4 0A00     		.ascii	"\012\000"
 5898 02f6 0000     		.align	2
 5899              	.LC71:
 5900 02f8 54524143 		.ascii	"TRACK PERIMETER\000"
 5900      4B205045 
 5900      52494D45 
 5900      54455200 
 5901              		.align	2
 5902              	.LC72:
 5903 0308 50657269 		.ascii	"Perimeter tracking ENABLED\015\012\000"
 5903      6D657465 
 5903      72207472 
 5903      61636B69 
 5903      6E672045 
 5904 0325 000000   		.align	2
 5905              	.LC73:
 5906 0328 53484F57 		.ascii	"SHOW PID TRACKING\000"
 5906      20504944 
 5906      20545241 
 5906      434B494E 
 5906      4700
 5907 033a 0000     		.align	2
 5908              	.LC74:
 5909 033c 4B503A20 		.ascii	"KP: %f KI: %f KD: %f\015\012\000"
 5909      2566204B 
 5909      493A2025 
 5909      66204B44 
 5909      3A202566 
 5910 0353 00       		.align	2
 5911              	.LC75:
 5912 0354 53455420 		.ascii	"SET WORKING START\000"
 5912      574F524B 
 5912      494E4720 
 5912      53544152 
 5912      5400
 5913 0366 0000     		.align	2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 184


 5914              	.LC76:
 5915 0368 25732025 		.ascii	"%s %s %s %d\000"
 5915      73202573 
 5915      20256400 
 5916              		.align	2
 5917              	.LC77:
 5918 0374 53455420 		.ascii	"SET WORKING END\000"
 5918      574F524B 
 5918      494E4720 
 5918      454E4400 
 5919              		.align	2
 5920              	.LC78:
 5921 0384 53484F57 		.ascii	"SHOW WORKINGHOURS\000"
 5921      20574F52 
 5921      4B494E47 
 5921      484F5552 
 5921      5300
 5922 0396 0000     		.align	2
 5923              	.LC79:
 5924 0398 53544152 		.ascii	"START: %d END: %d\015\012\000"
 5924      543A2025 
 5924      6420454E 
 5924      443A2025 
 5924      640D0A00 
 5925              		.align	2
 5926              	.LC80:
 5927 03ac 48454C50 		.ascii	"HELP\000"
 5927      00
 5928 03b1 000000   		.align	2
 5929              	.LC81:
 5930 03b4 41766169 		.ascii	"Available commands:\015\012\015\012\000"
 5930      6C61626C 
 5930      6520636F 
 5930      6D6D616E 
 5930      64733A0D 
 5931              		.align	2
 5932              	.LC82:
 5933 03cc 48454C4C 		.ascii	"HELLO             \011- Welcome message\015\012\000"
 5933      4F202020 
 5933      20202020 
 5933      20202020 
 5933      2020092D 
 5934 03f3 00       		.align	2
 5935              	.LC83:
 5936 03f4 5245424F 		.ascii	"REBOOT                  - Reboot Razorboard\015\012"
 5936      4F542020 
 5936      20202020 
 5936      20202020 
 5936      20202020 
 5937 0421 00       		.ascii	"\000"
 5938 0422 0000     		.align	2
 5939              	.LC84:
 5940 0424 44495341 		.ascii	"DISABLE                 - Disable Razorboard\015\012"
 5940      424C4520 
 5940      20202020 
 5940      20202020 
 5940      20202020 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 185


 5941 0452 00       		.ascii	"\000"
 5942 0453 00       		.align	2
 5943              	.LC85:
 5944 0454 454E4142 		.ascii	"ENABLE                  - Enable Razorboard\015\012"
 5944      4C452020 
 5944      20202020 
 5944      20202020 
 5944      20202020 
 5945 0481 00       		.ascii	"\000"
 5946 0482 0000     		.align	2
 5947              	.LC86:
 5948 0484 56455253 		.ascii	"VERSION           \011- Show version of board\015\012"
 5948      494F4E20 
 5948      20202020 
 5948      20202020 
 5948      2020092D 
 5949 04b0 00       		.ascii	"\000"
 5950 04b1 000000   		.align	2
 5951              	.LC87:
 5952 04b4 44454255 		.ascii	"DEBUG ON          \011- Enable debug messages\015\012"
 5952      47204F4E 
 5952      20202020 
 5952      20202020 
 5952      2020092D 
 5953 04e0 00       		.ascii	"\000"
 5954 04e1 000000   		.align	2
 5955              	.LC88:
 5956 04e4 44454255 		.ascii	"DEBUG OFF         \011- Disable debug messages\015\012"
 5956      47204F46 
 5956      46202020 
 5956      20202020 
 5956      2020092D 
 5957 0511 00       		.ascii	"\000"
 5958 0512 0000     		.align	2
 5959              	.LC89:
 5960 0514 564F4C54 		.ascii	"VOLTAGE           \011- Show current voltage\015\012"
 5960      41474520 
 5960      20202020 
 5960      20202020 
 5960      2020092D 
 5961 053f 00       		.ascii	"\000"
 5962              		.align	2
 5963              	.LC90:
 5964 0540 55504752 		.ascii	"UPGRADE           \011- Enter bootloader\015\012\000"
 5964      41444520 
 5964      20202020 
 5964      20202020 
 5964      2020092D 
 5965              		.align	2
 5966              	.LC91:
 5967 0568 53484F57 		.ascii	"SHOW SIG          \011- Show reference BWF signatur"
 5967      20534947 
 5967      20202020 
 5967      20202020 
 5967      2020092D 
 5968 0598 650D0A00 		.ascii	"e\015\012\000"
 5969              		.align	2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 186


 5970              	.LC92:
 5971 059c 4558504F 		.ascii	"EXPORT SIG          \011- Export reference BWF sign"
 5971      52542053 
 5971      49472020 
 5971      20202020 
 5971      20202020 
 5972 05cc 61747572 		.ascii	"ature as an array\015\012\000"
 5972      65206173 
 5972      20616E20 
 5972      61727261 
 5972      790D0A00 
 5973              		.align	2
 5974              	.LC93:
 5975 05e0 5245434F 		.ascii	"RECORD SIG              - Record a new signature\015"
 5975      52442053 
 5975      49472020 
 5975      20202020 
 5975      20202020 
 5976 0611 0A00     		.ascii	"\012\000"
 5977 0613 00       		.align	2
 5978              	.LC94:
 5979 0614 54455354 		.ascii	"TEST LEFT MOTOR   \011- Test left motor (M1)\015\012"
 5979      204C4546 
 5979      54204D4F 
 5979      544F5220 
 5979      2020092D 
 5980 063f 00       		.ascii	"\000"
 5981              		.align	2
 5982              	.LC95:
 5983 0640 54455354 		.ascii	"TEST RIGHT MOTOR  \011- Test right motor (M2)\015\012"
 5983      20524947 
 5983      4854204D 
 5983      4F544F52 
 5983      2020092D 
 5984 066c 00       		.ascii	"\000"
 5985 066d 000000   		.align	2
 5986              	.LC96:
 5987 0670 53484F57 		.ascii	"SHOW CURRENT      \011- Show current sensors M1, M2"
 5987      20435552 
 5987      52454E54 
 5987      20202020 
 5987      2020092D 
 5988 06a0 2C204331 		.ascii	", C1\015\012\000"
 5988      0D0A00
 5989 06a7 00       		.align	2
 5990              	.LC97:
 5991 06a8 53544F50 		.ascii	"STOP MOTORS       \011- Stop motors\015\012\000"
 5991      204D4F54 
 5991      4F525320 
 5991      20202020 
 5991      2020092D 
 5992 06cb 00       		.align	2
 5993              	.LC98:
 5994 06cc 52554E20 		.ascii	"RUN MOTORS FORWARD\011- Run motors forward\015\012\000"
 5994      4D4F544F 
 5994      52532046 
 5994      4F525741 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 187


 5994      5244092D 
 5995 06f6 0000     		.align	2
 5996              	.LC99:
 5997 06f8 52554E20 		.ascii	"RUN MOTORS REVERSE\011- Run motors backward\015\012"
 5997      4D4F544F 
 5997      52532052 
 5997      45564552 
 5997      5345092D 
 5998 0722 00       		.ascii	"\000"
 5999 0723 00       		.align	2
 6000              	.LC100:
 6001 0724 53455420 		.ascii	"SET TIME\011\011- Set current time for RTC\015\012\000"
 6001      54494D45 
 6001      09092D20 
 6001      53657420 
 6001      63757272 
 6002 074b 00       		.align	2
 6003              	.LC101:
 6004 074c 53455420 		.ascii	"SET DATE\011\011- Set current date for RTC\015\012\000"
 6004      44415445 
 6004      09092D20 
 6004      53657420 
 6004      63757272 
 6005 0773 00       		.align	2
 6006              	.LC102:
 6007 0774 09090944 		.ascii	"\011\011\011Date must be set in a special order:\015"
 6007      61746520 
 6007      6D757374 
 6007      20626520 
 6007      73657420 
 6008 079c 0A00     		.ascii	"\012\000"
 6009 079e 0000     		.align	2
 6010              	.LC103:
 6011 07a0 09090959 		.ascii	"\011\011\011Year Month Day Weekday -> 21 3 31 2 (2 "
 6011      65617220 
 6011      4D6F6E74 
 6011      68204461 
 6011      79205765 
 6012 07ca 3D205765 		.ascii	"= Wednesday)\015\012\000"
 6012      646E6573 
 6012      64617929 
 6012      0D0A00
 6013 07d9 000000   		.align	2
 6014              	.LC104:
 6015 07dc 54524143 		.ascii	"TRACK PERIMETER \011- Track perimeter next time it "
 6015      4B205045 
 6015      52494D45 
 6015      54455220 
 6015      092D2054 
 6016 080c 63726F73 		.ascii	"crosses\015\012\000"
 6016      7365730D 
 6016      0A00
 6017 0816 0000     		.align	2
 6018              	.LC105:
 6019 0818 53455420 		.ascii	"SET KP\011\011\011- PID Controller KP for Perimeter"
 6019      4B500909 
 6019      092D2050 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 188


 6019      49442043 
 6019      6F6E7472 
 6020 0842 20547261 		.ascii	" Tracking\015\012\000"
 6020      636B696E 
 6020      670D0A00 
 6021 084e 0000     		.align	2
 6022              	.LC106:
 6023 0850 53455420 		.ascii	"SET KI\011\011\011- PID Controller KI for Perimeter"
 6023      4B490909 
 6023      092D2050 
 6023      49442043 
 6023      6F6E7472 
 6024 087a 20547261 		.ascii	" Tracking\015\012\000"
 6024      636B696E 
 6024      670D0A00 
 6025 0886 0000     		.align	2
 6026              	.LC107:
 6027 0888 53455420 		.ascii	"SET KD\011\011\011- PID Controller KD for Perimeter"
 6027      4B440909 
 6027      092D2050 
 6027      49442043 
 6027      6F6E7472 
 6028 08b2 20547261 		.ascii	" Tracking\015\012\000"
 6028      636B696E 
 6028      670D0A00 
 6029 08be 0000     		.align	2
 6030              	.LC108:
 6031 08c0 53484F57 		.ascii	"SHOW PID TRACKING\011- Export current settings for "
 6031      20504944 
 6031      20545241 
 6031      434B494E 
 6031      47092D20 
 6032 08f0 74726163 		.ascii	"tracking PID\015\012\000"
 6032      6B696E67 
 6032      20504944 
 6032      0D0A00
 6033 08ff 00       		.align	2
 6034              	.LC109:
 6035 0900 53455420 		.ascii	"SET WORKING START\011- Set Working Hour START\015\012"
 6035      574F524B 
 6035      494E4720 
 6035      53544152 
 6035      54092D20 
 6036 092c 00       		.ascii	"\000"
 6037 092d 000000   		.align	2
 6038              	.LC110:
 6039 0930 53455420 		.ascii	"SET WORKING END   - Set Working Hour END\015\012\000"
 6039      574F524B 
 6039      494E4720 
 6039      454E4420 
 6039      20202D20 
 6040 095b 00       		.align	2
 6041              	.LC111:
 6042 095c 53484F57 		.ascii	"SHOW WORKINGHOURS\011- Show current set working hou"
 6042      20574F52 
 6042      4B494E47 
 6042      484F5552 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 189


 6042      53092D20 
 6043 098c 72730D0A 		.ascii	"rs\015\012\000"
 6043      00
 6044              		.section	.text.parseCommand_Console,"ax",%progbits
 6045              		.align	1
 6046              		.syntax unified
 6047              		.thumb
 6048              		.thumb_func
 6049              		.fpu fpv4-sp-d16
 6051              	parseCommand_Console:
 6052              	.LFB294:
 931:Core/Src/main.c **** 
 6053              		.loc 1 931 33 is_stmt 1 view -0
 6054              		.cfi_startproc
 6055              		@ args = 0, pretend = 0, frame = 96
 6056              		@ frame_needed = 0, uses_anonymous_args = 0
 6057 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6058              	.LCFI70:
 6059              		.cfi_def_cfa_offset 20
 6060              		.cfi_offset 4, -20
 6061              		.cfi_offset 5, -16
 6062              		.cfi_offset 6, -12
 6063              		.cfi_offset 7, -8
 6064              		.cfi_offset 14, -4
 6065 0002 9DB0     		sub	sp, sp, #116
 6066              	.LCFI71:
 6067              		.cfi_def_cfa_offset 136
 935:Core/Src/main.c **** 
 6068              		.loc 1 935 2 view .LVU1529
 935:Core/Src/main.c **** 
 6069              		.loc 1 935 7 is_stmt 0 view .LVU1530
 6070 0004 0024     		movs	r4, #0
 6071 0006 0C94     		str	r4, [sp, #48]
 6072 0008 3C22     		movs	r2, #60
 6073 000a 2146     		mov	r1, r4
 6074 000c 0DA8     		add	r0, sp, #52
 6075 000e FFF7FEFF 		bl	memset
 6076              	.LVL434:
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6077              		.loc 1 937 2 is_stmt 1 view .LVU1531
 6078              	.LBB79:
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6079              		.loc 1 937 7 view .LVU1532
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6080              		.loc 1 937 15 is_stmt 0 view .LVU1533
 6081 0012 2246     		mov	r2, r4
 6082              	.LVL435:
 6083              	.L372:
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6084              		.loc 1 937 22 is_stmt 1 discriminator 1 view .LVU1534
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6085              		.loc 1 937 2 is_stmt 0 discriminator 1 view .LVU1535
 6086 0014 3F2A     		cmp	r2, #63
 6087 0016 00F21C81 		bhi	.L443
 938:Core/Src/main.c **** 			if (ConsoleBuffer[0] == 13) memcpy(Command, "DISABLE", 7);
 6088              		.loc 1 938 3 is_stmt 1 view .LVU1536
 938:Core/Src/main.c **** 			if (ConsoleBuffer[0] == 13) memcpy(Command, "DISABLE", 7);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 190


 6089              		.loc 1 938 20 is_stmt 0 view .LVU1537
 6090 001a B34B     		ldr	r3, .L476
 6091 001c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 938:Core/Src/main.c **** 			if (ConsoleBuffer[0] == 13) memcpy(Command, "DISABLE", 7);
 6092              		.loc 1 938 6 view .LVU1538
 6093 001e 0D2B     		cmp	r3, #13
 6094 0020 02D0     		beq	.L446
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6095              		.loc 1 937 49 is_stmt 1 discriminator 2 view .LVU1539
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6096              		.loc 1 937 50 is_stmt 0 discriminator 2 view .LVU1540
 6097 0022 0132     		adds	r2, r2, #1
 6098              	.LVL436:
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6099              		.loc 1 937 50 discriminator 2 view .LVU1541
 6100 0024 D2B2     		uxtb	r2, r2
 6101              	.LVL437:
 937:Core/Src/main.c **** 		if (ConsoleBuffer[x] == 13) {
 6102              		.loc 1 937 50 discriminator 2 view .LVU1542
 6103 0026 F5E7     		b	.L372
 6104              	.L446:
 939:Core/Src/main.c **** 			else {
 6105              		.loc 1 939 4 is_stmt 1 view .LVU1543
 939:Core/Src/main.c **** 			else {
 6106              		.loc 1 939 21 is_stmt 0 view .LVU1544
 6107 0028 AF4B     		ldr	r3, .L476
 6108 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939:Core/Src/main.c **** 			else {
 6109              		.loc 1 939 7 view .LVU1545
 6110 002c 0D2B     		cmp	r3, #13
 6111 002e 0ED0     		beq	.L447
 941:Core/Src/main.c **** 			}
 6112              		.loc 1 941 5 is_stmt 1 view .LVU1546
 6113 0030 AD49     		ldr	r1, .L476
 6114 0032 0CA8     		add	r0, sp, #48
 6115 0034 FFF7FEFF 		bl	memcpy
 6116              	.LVL438:
 6117              	.L375:
 943:Core/Src/main.c **** 			Serial_Console(msg);
 6118              		.loc 1 943 4 view .LVU1547
 6119 0038 AC4C     		ldr	r4, .L476+4
 6120 003a 0CAA     		add	r2, sp, #48
 6121 003c AC49     		ldr	r1, .L476+8
 6122 003e 2046     		mov	r0, r4
 6123 0040 FFF7FEFF 		bl	sprintf
 6124              	.LVL439:
 944:Core/Src/main.c **** 			for (uint8_t i = 0; i < CONSOLE_BFR_SIZE; i++) {
 6125              		.loc 1 944 4 view .LVU1548
 6126 0044 2046     		mov	r0, r4
 6127 0046 FFF7FEFF 		bl	Serial_Console
 6128              	.LVL440:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6129              		.loc 1 945 4 view .LVU1549
 6130              	.LBB80:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6131              		.loc 1 945 9 view .LVU1550
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 191


 6132              		.loc 1 945 17 is_stmt 0 view .LVU1551
 6133 004a 0023     		movs	r3, #0
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6134              		.loc 1 945 4 view .LVU1552
 6135 004c 0FE0     		b	.L376
 6136              	.LVL441:
 6137              	.L447:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6138              		.loc 1 945 4 view .LVU1553
 6139              	.LBE80:
 939:Core/Src/main.c **** 			else {
 6140              		.loc 1 939 32 is_stmt 1 discriminator 1 view .LVU1554
 6141 004e A94B     		ldr	r3, .L476+12
 6142 0050 93E80300 		ldm	r3, {r0, r1}
 6143 0054 0C90     		str	r0, [sp, #48]
 6144 0056 ADF83410 		strh	r1, [sp, #52]	@ movhi
 6145 005a 090C     		lsrs	r1, r1, #16
 6146 005c 8DF83610 		strb	r1, [sp, #54]
 6147 0060 EAE7     		b	.L375
 6148              	.LVL442:
 6149              	.L378:
 6150              	.LBB82:
 946:Core/Src/main.c **** 			}
 6151              		.loc 1 946 16 is_stmt 0 discriminator 4 view .LVU1555
 6152 0062 1CA8     		add	r0, sp, #112
 6153              	.LVL443:
 946:Core/Src/main.c **** 			}
 6154              		.loc 1 946 16 discriminator 4 view .LVU1556
 6155 0064 0144     		add	r1, r1, r0
 6156              	.LVL444:
 946:Core/Src/main.c **** 			}
 6157              		.loc 1 946 16 discriminator 4 view .LVU1557
 6158 0066 01F8402C 		strb	r2, [r1, #-64]
 6159              	.LVL445:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6160              		.loc 1 945 46 is_stmt 1 discriminator 4 view .LVU1558
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6161              		.loc 1 945 47 is_stmt 0 discriminator 4 view .LVU1559
 6162 006a 0133     		adds	r3, r3, #1
 6163              	.LVL446:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6164              		.loc 1 945 47 discriminator 4 view .LVU1560
 6165 006c DBB2     		uxtb	r3, r3
 6166              	.LVL447:
 6167              	.L376:
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6168              		.loc 1 945 24 is_stmt 1 discriminator 2 view .LVU1561
 945:Core/Src/main.c **** 				Command[i] = toupper(Command[i]);
 6169              		.loc 1 945 4 is_stmt 0 discriminator 2 view .LVU1562
 6170 006e 3F2B     		cmp	r3, #63
 6171 0070 0CD8     		bhi	.L448
 946:Core/Src/main.c **** 			}
 6172              		.loc 1 946 5 is_stmt 1 view .LVU1563
 6173              	.LBB81:
 946:Core/Src/main.c **** 			}
 6174              		.loc 1 946 18 view .LVU1564
 6175 0072 1946     		mov	r1, r3
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 192


 6176 0074 1CAA     		add	r2, sp, #112
 6177 0076 1A44     		add	r2, r2, r3
 6178 0078 12F8402C 		ldrb	r2, [r2, #-64]	@ zero_extendqisi2
 6179              	.LVL448:
 946:Core/Src/main.c **** 			}
 6180              		.loc 1 946 18 view .LVU1565
 6181 007c 9E48     		ldr	r0, .L476+16
 6182 007e 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 6183 0080 00F00300 		and	r0, r0, #3
 6184 0084 0228     		cmp	r0, #2
 6185 0086 ECD1     		bne	.L378
 946:Core/Src/main.c **** 			}
 6186              		.loc 1 946 18 is_stmt 0 discriminator 1 view .LVU1566
 6187 0088 203A     		subs	r2, r2, #32
 6188              	.LVL449:
 946:Core/Src/main.c **** 			}
 6189              		.loc 1 946 18 discriminator 1 view .LVU1567
 6190 008a EAE7     		b	.L378
 6191              	.LVL450:
 6192              	.L448:
 946:Core/Src/main.c **** 			}
 6193              		.loc 1 946 18 discriminator 1 view .LVU1568
 6194              	.LBE81:
 6195              	.LBE82:
 949:Core/Src/main.c **** 				Serial_Console("Hello fellow user! Welcome to RazorBoard!\r\n");
 6196              		.loc 1 949 4 is_stmt 1 view .LVU1569
 949:Core/Src/main.c **** 				Serial_Console("Hello fellow user! Welcome to RazorBoard!\r\n");
 6197              		.loc 1 949 8 is_stmt 0 view .LVU1570
 6198 008c 9B49     		ldr	r1, .L476+20
 6199 008e 0CA8     		add	r0, sp, #48
 6200 0090 FFF7FEFF 		bl	strcmp
 6201              	.LVL451:
 949:Core/Src/main.c **** 				Serial_Console("Hello fellow user! Welcome to RazorBoard!\r\n");
 6202              		.loc 1 949 7 view .LVU1571
 6203 0094 0028     		cmp	r0, #0
 6204 0096 00F0E180 		beq	.L449
 6205              	.L380:
 952:Core/Src/main.c **** 				sprintf(msg, "%s\r\n", VERSION);
 6206              		.loc 1 952 4 is_stmt 1 view .LVU1572
 952:Core/Src/main.c **** 				sprintf(msg, "%s\r\n", VERSION);
 6207              		.loc 1 952 8 is_stmt 0 view .LVU1573
 6208 009a 9949     		ldr	r1, .L476+24
 6209 009c 0CA8     		add	r0, sp, #48
 6210 009e FFF7FEFF 		bl	strcmp
 6211              	.LVL452:
 952:Core/Src/main.c **** 				sprintf(msg, "%s\r\n", VERSION);
 6212              		.loc 1 952 7 view .LVU1574
 6213 00a2 0028     		cmp	r0, #0
 6214 00a4 00F0DE80 		beq	.L450
 6215              	.L381:
 956:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 1;
 6216              		.loc 1 956 4 is_stmt 1 view .LVU1575
 956:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 1;
 6217              		.loc 1 956 8 is_stmt 0 view .LVU1576
 6218 00a8 9649     		ldr	r1, .L476+28
 6219 00aa 0CA8     		add	r0, sp, #48
 6220 00ac FFF7FEFF 		bl	strcmp
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 193


 6221              	.LVL453:
 956:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 1;
 6222              		.loc 1 956 7 view .LVU1577
 6223 00b0 0028     		cmp	r0, #0
 6224 00b2 00F0E180 		beq	.L451
 6225              	.L382:
 960:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 0;
 6226              		.loc 1 960 4 is_stmt 1 view .LVU1578
 960:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 0;
 6227              		.loc 1 960 8 is_stmt 0 view .LVU1579
 6228 00b6 9449     		ldr	r1, .L476+32
 6229 00b8 0CA8     		add	r0, sp, #48
 6230 00ba FFF7FEFF 		bl	strcmp
 6231              	.LVL454:
 960:Core/Src/main.c **** 				DEBUG_RAZORBOARD = 0;
 6232              		.loc 1 960 7 view .LVU1580
 6233 00be 0028     		cmp	r0, #0
 6234 00c0 00F0E180 		beq	.L452
 6235              	.L383:
 964:Core/Src/main.c **** 				float volt = Voltage / 1000;
 6236              		.loc 1 964 4 is_stmt 1 view .LVU1581
 964:Core/Src/main.c **** 				float volt = Voltage / 1000;
 6237              		.loc 1 964 8 is_stmt 0 view .LVU1582
 6238 00c4 9149     		ldr	r1, .L476+36
 6239 00c6 0CA8     		add	r0, sp, #48
 6240 00c8 FFF7FEFF 		bl	strcmp
 6241              	.LVL455:
 964:Core/Src/main.c **** 				float volt = Voltage / 1000;
 6242              		.loc 1 964 7 view .LVU1583
 6243 00cc 0028     		cmp	r0, #0
 6244 00ce 00F0E180 		beq	.L453
 6245              	.L384:
 969:Core/Src/main.c **** 				Serial_Console("Entering Bootloader...\r\n");
 6246              		.loc 1 969 4 is_stmt 1 view .LVU1584
 969:Core/Src/main.c **** 				Serial_Console("Entering Bootloader...\r\n");
 6247              		.loc 1 969 8 is_stmt 0 view .LVU1585
 6248 00d2 8F49     		ldr	r1, .L476+40
 6249 00d4 0CA8     		add	r0, sp, #48
 6250 00d6 FFF7FEFF 		bl	strcmp
 6251              	.LVL456:
 969:Core/Src/main.c **** 				Serial_Console("Entering Bootloader...\r\n");
 6252              		.loc 1 969 7 view .LVU1586
 6253 00da 0028     		cmp	r0, #0
 6254 00dc 00F0F080 		beq	.L454
 6255              	.L385:
 974:Core/Src/main.c **** 				Serial_Console("Signature will be printed in 8 seconds, please start your plotter before.\r\n")
 6256              		.loc 1 974 4 is_stmt 1 view .LVU1587
 974:Core/Src/main.c **** 				Serial_Console("Signature will be printed in 8 seconds, please start your plotter before.\r\n")
 6257              		.loc 1 974 8 is_stmt 0 view .LVU1588
 6258 00e0 8C49     		ldr	r1, .L476+44
 6259 00e2 0CA8     		add	r0, sp, #48
 6260 00e4 FFF7FEFF 		bl	strcmp
 6261              	.LVL457:
 974:Core/Src/main.c **** 				Serial_Console("Signature will be printed in 8 seconds, please start your plotter before.\r\n")
 6262              		.loc 1 974 7 view .LVU1589
 6263 00e8 0446     		mov	r4, r0
 6264 00ea 0028     		cmp	r0, #0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 194


 6265 00ec 00F0F380 		beq	.L455
 6266              	.L386:
 982:Core/Src/main.c **** 				Serial_Console("Signature exported as an array\r\n");
 6267              		.loc 1 982 4 is_stmt 1 view .LVU1590
 982:Core/Src/main.c **** 				Serial_Console("Signature exported as an array\r\n");
 6268              		.loc 1 982 8 is_stmt 0 view .LVU1591
 6269 00f0 8949     		ldr	r1, .L476+48
 6270 00f2 0CA8     		add	r0, sp, #48
 6271 00f4 FFF7FEFF 		bl	strcmp
 6272              	.LVL458:
 982:Core/Src/main.c **** 				Serial_Console("Signature exported as an array\r\n");
 6273              		.loc 1 982 7 view .LVU1592
 6274 00f8 0446     		mov	r4, r0
 6275 00fa 0028     		cmp	r0, #0
 6276 00fc 00F06281 		beq	.L456
 6277              	.L389:
 991:Core/Src/main.c **** 				Signature_Record = TRUE;
 6278              		.loc 1 991 4 is_stmt 1 view .LVU1593
 991:Core/Src/main.c **** 				Signature_Record = TRUE;
 6279              		.loc 1 991 8 is_stmt 0 view .LVU1594
 6280 0100 8649     		ldr	r1, .L476+52
 6281 0102 0CA8     		add	r0, sp, #48
 6282 0104 FFF7FEFF 		bl	strcmp
 6283              	.LVL459:
 991:Core/Src/main.c **** 				Signature_Record = TRUE;
 6284              		.loc 1 991 7 view .LVU1595
 6285 0108 0028     		cmp	r0, #0
 6286 010a 00F07981 		beq	.L457
 6287              	.L392:
 995:Core/Src/main.c **** 				  TIM4->CCR1 = 0;
 6288              		.loc 1 995 4 is_stmt 1 view .LVU1596
 995:Core/Src/main.c **** 				  TIM4->CCR1 = 0;
 6289              		.loc 1 995 8 is_stmt 0 view .LVU1597
 6290 010e 8449     		ldr	r1, .L476+56
 6291 0110 0CA8     		add	r0, sp, #48
 6292 0112 FFF7FEFF 		bl	strcmp
 6293              	.LVL460:
 995:Core/Src/main.c **** 				  TIM4->CCR1 = 0;
 6294              		.loc 1 995 7 view .LVU1598
 6295 0116 0028     		cmp	r0, #0
 6296 0118 00F07981 		beq	.L458
 6297              	.L393:
1002:Core/Src/main.c **** 				  TIM4->CCR3 = 2000;
 6298              		.loc 1 1002 4 is_stmt 1 view .LVU1599
1002:Core/Src/main.c **** 				  TIM4->CCR3 = 2000;
 6299              		.loc 1 1002 8 is_stmt 0 view .LVU1600
 6300 011c 8149     		ldr	r1, .L476+60
 6301 011e 0CA8     		add	r0, sp, #48
 6302 0120 FFF7FEFF 		bl	strcmp
 6303              	.LVL461:
1002:Core/Src/main.c **** 				  TIM4->CCR3 = 2000;
 6304              		.loc 1 1002 7 view .LVU1601
 6305 0124 0028     		cmp	r0, #0
 6306 0126 00F08281 		beq	.L459
 6307              	.L394:
1009:Core/Src/main.c **** 				Serial_Console("Rebooting...\r\n");
 6308              		.loc 1 1009 4 is_stmt 1 view .LVU1602
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 195


1009:Core/Src/main.c **** 				Serial_Console("Rebooting...\r\n");
 6309              		.loc 1 1009 8 is_stmt 0 view .LVU1603
 6310 012a 7F49     		ldr	r1, .L476+64
 6311 012c 0CA8     		add	r0, sp, #48
 6312 012e FFF7FEFF 		bl	strcmp
 6313              	.LVL462:
1009:Core/Src/main.c **** 				Serial_Console("Rebooting...\r\n");
 6314              		.loc 1 1009 7 view .LVU1604
 6315 0132 0028     		cmp	r0, #0
 6316 0134 00F08B81 		beq	.L460
1015:Core/Src/main.c **** 				sprintf(msg, "M1: %.2f\r\nM2: %.2f\r\nC1: %.2f\r\n", M1_amp, M2_amp, C1_amp);
 6317              		.loc 1 1015 4 is_stmt 1 view .LVU1605
1015:Core/Src/main.c **** 				sprintf(msg, "M1: %.2f\r\nM2: %.2f\r\nC1: %.2f\r\n", M1_amp, M2_amp, C1_amp);
 6318              		.loc 1 1015 8 is_stmt 0 view .LVU1606
 6319 0138 7C49     		ldr	r1, .L476+68
 6320 013a 0CA8     		add	r0, sp, #48
 6321 013c FFF7FEFF 		bl	strcmp
 6322              	.LVL463:
1015:Core/Src/main.c **** 				sprintf(msg, "M1: %.2f\r\nM2: %.2f\r\nC1: %.2f\r\n", M1_amp, M2_amp, C1_amp);
 6323              		.loc 1 1015 7 view .LVU1607
 6324 0140 0028     		cmp	r0, #0
 6325 0142 00F09881 		beq	.L461
 6326              	.L397:
1019:Core/Src/main.c **** 				MotorStop();
 6327              		.loc 1 1019 4 is_stmt 1 view .LVU1608
1019:Core/Src/main.c **** 				MotorStop();
 6328              		.loc 1 1019 8 is_stmt 0 view .LVU1609
 6329 0146 7A49     		ldr	r1, .L476+72
 6330 0148 0CA8     		add	r0, sp, #48
 6331 014a FFF7FEFF 		bl	strcmp
 6332              	.LVL464:
1019:Core/Src/main.c **** 				MotorStop();
 6333              		.loc 1 1019 7 view .LVU1610
 6334 014e 0028     		cmp	r0, #0
 6335 0150 00F0AE81 		beq	.L462
 6336              	.L398:
1022:Core/Src/main.c **** 				TIM4->CCR1 = 0;
 6337              		.loc 1 1022 4 is_stmt 1 view .LVU1611
1022:Core/Src/main.c **** 				TIM4->CCR1 = 0;
 6338              		.loc 1 1022 8 is_stmt 0 view .LVU1612
 6339 0154 7749     		ldr	r1, .L476+76
 6340 0156 0CA8     		add	r0, sp, #48
 6341 0158 FFF7FEFF 		bl	strcmp
 6342              	.LVL465:
1022:Core/Src/main.c **** 				TIM4->CCR1 = 0;
 6343              		.loc 1 1022 7 view .LVU1613
 6344 015c 38B9     		cbnz	r0, .L399
1023:Core/Src/main.c **** 				TIM4->CCR2 = 2000;
 6345              		.loc 1 1023 5 is_stmt 1 view .LVU1614
1023:Core/Src/main.c **** 				TIM4->CCR2 = 2000;
 6346              		.loc 1 1023 16 is_stmt 0 view .LVU1615
 6347 015e 764B     		ldr	r3, .L476+80
 6348 0160 0022     		movs	r2, #0
 6349 0162 5A63     		str	r2, [r3, #52]
1024:Core/Src/main.c **** 				TIM4->CCR3 = 2000;
 6350              		.loc 1 1024 5 is_stmt 1 view .LVU1616
1024:Core/Src/main.c **** 				TIM4->CCR3 = 2000;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 196


 6351              		.loc 1 1024 16 is_stmt 0 view .LVU1617
 6352 0164 4FF4FA61 		mov	r1, #2000
 6353 0168 9963     		str	r1, [r3, #56]
1025:Core/Src/main.c **** 				TIM4->CCR4 = 0;
 6354              		.loc 1 1025 5 is_stmt 1 view .LVU1618
1025:Core/Src/main.c **** 				TIM4->CCR4 = 0;
 6355              		.loc 1 1025 16 is_stmt 0 view .LVU1619
 6356 016a D963     		str	r1, [r3, #60]
1026:Core/Src/main.c **** 			}
 6357              		.loc 1 1026 5 is_stmt 1 view .LVU1620
1026:Core/Src/main.c **** 			}
 6358              		.loc 1 1026 16 is_stmt 0 view .LVU1621
 6359 016c 1A64     		str	r2, [r3, #64]
 6360              	.L399:
1028:Core/Src/main.c **** 				TIM4->CCR1 = 2000;
 6361              		.loc 1 1028 4 is_stmt 1 view .LVU1622
1028:Core/Src/main.c **** 				TIM4->CCR1 = 2000;
 6362              		.loc 1 1028 8 is_stmt 0 view .LVU1623
 6363 016e 7349     		ldr	r1, .L476+84
 6364 0170 0CA8     		add	r0, sp, #48
 6365 0172 FFF7FEFF 		bl	strcmp
 6366              	.LVL466:
1028:Core/Src/main.c **** 				TIM4->CCR1 = 2000;
 6367              		.loc 1 1028 7 view .LVU1624
 6368 0176 38B9     		cbnz	r0, .L400
1029:Core/Src/main.c **** 				TIM4->CCR2 = 0;
 6369              		.loc 1 1029 5 is_stmt 1 view .LVU1625
1029:Core/Src/main.c **** 				TIM4->CCR2 = 0;
 6370              		.loc 1 1029 16 is_stmt 0 view .LVU1626
 6371 0178 6F4B     		ldr	r3, .L476+80
 6372 017a 4FF4FA62 		mov	r2, #2000
 6373 017e 5A63     		str	r2, [r3, #52]
1030:Core/Src/main.c **** 				TIM4->CCR3 = 0;
 6374              		.loc 1 1030 5 is_stmt 1 view .LVU1627
1030:Core/Src/main.c **** 				TIM4->CCR3 = 0;
 6375              		.loc 1 1030 16 is_stmt 0 view .LVU1628
 6376 0180 0021     		movs	r1, #0
 6377 0182 9963     		str	r1, [r3, #56]
1031:Core/Src/main.c **** 				TIM4->CCR4 = 2000;
 6378              		.loc 1 1031 5 is_stmt 1 view .LVU1629
1031:Core/Src/main.c **** 				TIM4->CCR4 = 2000;
 6379              		.loc 1 1031 16 is_stmt 0 view .LVU1630
 6380 0184 D963     		str	r1, [r3, #60]
1032:Core/Src/main.c **** 			}
 6381              		.loc 1 1032 5 is_stmt 1 view .LVU1631
1032:Core/Src/main.c **** 			}
 6382              		.loc 1 1032 16 is_stmt 0 view .LVU1632
 6383 0186 1A64     		str	r2, [r3, #64]
 6384              	.L400:
1034:Core/Src/main.c **** 				int year = 0, month = 0, day = 0, weekday = 0;
 6385              		.loc 1 1034 4 is_stmt 1 view .LVU1633
1034:Core/Src/main.c **** 				int year = 0, month = 0, day = 0, weekday = 0;
 6386              		.loc 1 1034 8 is_stmt 0 view .LVU1634
 6387 0188 0822     		movs	r2, #8
 6388 018a 6D49     		ldr	r1, .L476+88
 6389 018c 0CA8     		add	r0, sp, #48
 6390 018e FFF7FEFF 		bl	strncmp
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 197


 6391              	.LVL467:
1034:Core/Src/main.c **** 				int year = 0, month = 0, day = 0, weekday = 0;
 6392              		.loc 1 1034 7 view .LVU1635
 6393 0192 0028     		cmp	r0, #0
 6394 0194 00F08F81 		beq	.L463
 6395              	.L401:
1041:Core/Src/main.c **** 				int hour = 0, minute = 0, second = 0;
 6396              		.loc 1 1041 4 is_stmt 1 view .LVU1636
1041:Core/Src/main.c **** 				int hour = 0, minute = 0, second = 0;
 6397              		.loc 1 1041 8 is_stmt 0 view .LVU1637
 6398 0198 0822     		movs	r2, #8
 6399 019a 6A49     		ldr	r1, .L476+92
 6400 019c 0CA8     		add	r0, sp, #48
 6401 019e FFF7FEFF 		bl	strncmp
 6402              	.LVL468:
1041:Core/Src/main.c **** 				int hour = 0, minute = 0, second = 0;
 6403              		.loc 1 1041 7 view .LVU1638
 6404 01a2 0028     		cmp	r0, #0
 6405 01a4 00F0A581 		beq	.L464
 6406              	.L402:
1047:Core/Src/main.c **** 				float pid_kp;
 6407              		.loc 1 1047 4 is_stmt 1 view .LVU1639
1047:Core/Src/main.c **** 				float pid_kp;
 6408              		.loc 1 1047 8 is_stmt 0 view .LVU1640
 6409 01a8 0622     		movs	r2, #6
 6410 01aa 6749     		ldr	r1, .L476+96
 6411 01ac 0CA8     		add	r0, sp, #48
 6412 01ae FFF7FEFF 		bl	strncmp
 6413              	.LVL469:
1047:Core/Src/main.c **** 				float pid_kp;
 6414              		.loc 1 1047 7 view .LVU1641
 6415 01b2 0028     		cmp	r0, #0
 6416 01b4 00F0B681 		beq	.L465
 6417              	.L403:
1053:Core/Src/main.c **** 				float pid_ki;
 6418              		.loc 1 1053 4 is_stmt 1 view .LVU1642
1053:Core/Src/main.c **** 				float pid_ki;
 6419              		.loc 1 1053 8 is_stmt 0 view .LVU1643
 6420 01b8 0622     		movs	r2, #6
 6421 01ba 6449     		ldr	r1, .L476+100
 6422 01bc 0CA8     		add	r0, sp, #48
 6423 01be FFF7FEFF 		bl	strncmp
 6424              	.LVL470:
1053:Core/Src/main.c **** 				float pid_ki;
 6425              		.loc 1 1053 7 view .LVU1644
 6426 01c2 0028     		cmp	r0, #0
 6427 01c4 00F0BA81 		beq	.L466
 6428              	.L404:
1059:Core/Src/main.c **** 				float pid_kd;
 6429              		.loc 1 1059 4 is_stmt 1 view .LVU1645
1059:Core/Src/main.c **** 				float pid_kd;
 6430              		.loc 1 1059 8 is_stmt 0 view .LVU1646
 6431 01c8 0622     		movs	r2, #6
 6432 01ca 6149     		ldr	r1, .L476+104
 6433 01cc 0CA8     		add	r0, sp, #48
 6434 01ce FFF7FEFF 		bl	strncmp
 6435              	.LVL471:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 198


1059:Core/Src/main.c **** 				float pid_kd;
 6436              		.loc 1 1059 7 view .LVU1647
 6437 01d2 0028     		cmp	r0, #0
 6438 01d4 00F0BE81 		beq	.L467
 6439              	.L405:
1066:Core/Src/main.c **** 				MasterSwitch = 0;
 6440              		.loc 1 1066 4 is_stmt 1 view .LVU1648
1066:Core/Src/main.c **** 				MasterSwitch = 0;
 6441              		.loc 1 1066 8 is_stmt 0 view .LVU1649
 6442 01d8 4649     		ldr	r1, .L476+12
 6443 01da 0CA8     		add	r0, sp, #48
 6444 01dc FFF7FEFF 		bl	strcmp
 6445              	.LVL472:
1066:Core/Src/main.c **** 				MasterSwitch = 0;
 6446              		.loc 1 1066 7 view .LVU1650
 6447 01e0 0028     		cmp	r0, #0
 6448 01e2 00F0C381 		beq	.L468
 6449              	.L406:
1072:Core/Src/main.c **** 				MasterSwitch = 1;
 6450              		.loc 1 1072 4 is_stmt 1 view .LVU1651
1072:Core/Src/main.c **** 				MasterSwitch = 1;
 6451              		.loc 1 1072 8 is_stmt 0 view .LVU1652
 6452 01e6 5B49     		ldr	r1, .L476+108
 6453 01e8 0CA8     		add	r0, sp, #48
 6454 01ea FFF7FEFF 		bl	strcmp
 6455              	.LVL473:
1072:Core/Src/main.c **** 				MasterSwitch = 1;
 6456              		.loc 1 1072 7 view .LVU1653
 6457 01ee 0028     		cmp	r0, #0
 6458 01f0 00F0C681 		beq	.L469
 6459              	.L407:
1078:Core/Src/main.c **** 				perimeterTracking = 1;
 6460              		.loc 1 1078 4 is_stmt 1 view .LVU1654
1078:Core/Src/main.c **** 				perimeterTracking = 1;
 6461              		.loc 1 1078 8 is_stmt 0 view .LVU1655
 6462 01f4 5849     		ldr	r1, .L476+112
 6463 01f6 0CA8     		add	r0, sp, #48
 6464 01f8 FFF7FEFF 		bl	strcmp
 6465              	.LVL474:
1078:Core/Src/main.c **** 				perimeterTracking = 1;
 6466              		.loc 1 1078 7 view .LVU1656
 6467 01fc 0028     		cmp	r0, #0
 6468 01fe 00F0C981 		beq	.L470
 6469              	.L408:
1083:Core/Src/main.c **** 				sprintf(msg, "KP: %f KI: %f KD: %f\r\n", kp, ki, kd);
 6470              		.loc 1 1083 4 is_stmt 1 view .LVU1657
1083:Core/Src/main.c **** 				sprintf(msg, "KP: %f KI: %f KD: %f\r\n", kp, ki, kd);
 6471              		.loc 1 1083 8 is_stmt 0 view .LVU1658
 6472 0202 5649     		ldr	r1, .L476+116
 6473 0204 0CA8     		add	r0, sp, #48
 6474 0206 FFF7FEFF 		bl	strcmp
 6475              	.LVL475:
1083:Core/Src/main.c **** 				sprintf(msg, "KP: %f KI: %f KD: %f\r\n", kp, ki, kd);
 6476              		.loc 1 1083 7 view .LVU1659
 6477 020a 0028     		cmp	r0, #0
 6478 020c 00F0CB81 		beq	.L471
 6479              	.L409:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 199


1087:Core/Src/main.c **** 				int start;
 6480              		.loc 1 1087 4 is_stmt 1 view .LVU1660
1087:Core/Src/main.c **** 				int start;
 6481              		.loc 1 1087 8 is_stmt 0 view .LVU1661
 6482 0210 1122     		movs	r2, #17
 6483 0212 5349     		ldr	r1, .L476+120
 6484 0214 0CA8     		add	r0, sp, #48
 6485 0216 FFF7FEFF 		bl	strncmp
 6486              	.LVL476:
1087:Core/Src/main.c **** 				int start;
 6487              		.loc 1 1087 7 view .LVU1662
 6488 021a 0028     		cmp	r0, #0
 6489 021c 00F0E081 		beq	.L472
 6490              	.L410:
1093:Core/Src/main.c **** 				int end;
 6491              		.loc 1 1093 4 is_stmt 1 view .LVU1663
1093:Core/Src/main.c **** 				int end;
 6492              		.loc 1 1093 8 is_stmt 0 view .LVU1664
 6493 0220 0F22     		movs	r2, #15
 6494 0222 5049     		ldr	r1, .L476+124
 6495 0224 0CA8     		add	r0, sp, #48
 6496 0226 FFF7FEFF 		bl	strncmp
 6497              	.LVL477:
1093:Core/Src/main.c **** 				int end;
 6498              		.loc 1 1093 7 view .LVU1665
 6499 022a 0028     		cmp	r0, #0
 6500 022c 00F0E681 		beq	.L473
 6501              	.L411:
1099:Core/Src/main.c **** 				sprintf(msg, "START: %d END: %d\r\n", WorkingHourStart, WorkingHourEnd);
 6502              		.loc 1 1099 4 is_stmt 1 view .LVU1666
1099:Core/Src/main.c **** 				sprintf(msg, "START: %d END: %d\r\n", WorkingHourStart, WorkingHourEnd);
 6503              		.loc 1 1099 8 is_stmt 0 view .LVU1667
 6504 0230 4D49     		ldr	r1, .L476+128
 6505 0232 0CA8     		add	r0, sp, #48
 6506 0234 FFF7FEFF 		bl	strcmp
 6507              	.LVL478:
1099:Core/Src/main.c **** 				sprintf(msg, "START: %d END: %d\r\n", WorkingHourStart, WorkingHourEnd);
 6508              		.loc 1 1099 7 view .LVU1668
 6509 0238 0028     		cmp	r0, #0
 6510 023a 00F0ED81 		beq	.L474
 6511              	.L412:
1103:Core/Src/main.c **** 				sprintf(msg, "Available commands:\r\n\r\n");
 6512              		.loc 1 1103 4 is_stmt 1 view .LVU1669
1103:Core/Src/main.c **** 				sprintf(msg, "Available commands:\r\n\r\n");
 6513              		.loc 1 1103 8 is_stmt 0 view .LVU1670
 6514 023e 4B49     		ldr	r1, .L476+132
 6515 0240 0CA8     		add	r0, sp, #48
 6516 0242 FFF7FEFF 		bl	strcmp
 6517              	.LVL479:
1103:Core/Src/main.c **** 				sprintf(msg, "Available commands:\r\n\r\n");
 6518              		.loc 1 1103 7 view .LVU1671
 6519 0246 0028     		cmp	r0, #0
 6520 0248 00F03C82 		beq	.L475
 6521              	.L413:
1168:Core/Src/main.c **** 
 6522              		.loc 1 1168 4 is_stmt 1 view .LVU1672
 6523 024c 264B     		ldr	r3, .L476
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 200


 6524 024e 0022     		movs	r2, #0
 6525 0250 1A60     		str	r2, [r3]	@ unaligned
1170:Core/Src/main.c **** 			break;
 6526              		.loc 1 1170 4 view .LVU1673
1171:Core/Src/main.c **** 			}
 6527              		.loc 1 1171 4 view .LVU1674
 6528              	.L443:
1171:Core/Src/main.c **** 			}
 6529              		.loc 1 1171 4 is_stmt 0 view .LVU1675
 6530              	.LBE79:
1174:Core/Src/main.c **** }
 6531              		.loc 1 1174 2 is_stmt 1 view .LVU1676
1174:Core/Src/main.c **** }
 6532              		.loc 1 1174 14 is_stmt 0 view .LVU1677
 6533 0252 474B     		ldr	r3, .L476+136
 6534 0254 0022     		movs	r2, #0
 6535 0256 1A70     		strb	r2, [r3]
1175:Core/Src/main.c **** void parseCommand_RPI() {
 6536              		.loc 1 1175 1 view .LVU1678
 6537 0258 1DB0     		add	sp, sp, #116
 6538              	.LCFI72:
 6539              		.cfi_remember_state
 6540              		.cfi_def_cfa_offset 20
 6541              		@ sp needed
 6542 025a F0BD     		pop	{r4, r5, r6, r7, pc}
 6543              	.L449:
 6544              	.LCFI73:
 6545              		.cfi_restore_state
 6546              	.LBB99:
 950:Core/Src/main.c **** 				}
 6547              		.loc 1 950 5 is_stmt 1 view .LVU1679
 6548 025c 4548     		ldr	r0, .L476+140
 6549 025e FFF7FEFF 		bl	Serial_Console
 6550              	.LVL480:
 6551 0262 1AE7     		b	.L380
 6552              	.L450:
 953:Core/Src/main.c **** 				Serial_Console(msg);
 6553              		.loc 1 953 5 view .LVU1680
 6554 0264 214C     		ldr	r4, .L476+4
 6555 0266 444A     		ldr	r2, .L476+144
 6556 0268 2149     		ldr	r1, .L476+8
 6557 026a 2046     		mov	r0, r4
 6558 026c FFF7FEFF 		bl	sprintf
 6559              	.LVL481:
 954:Core/Src/main.c **** 				}
 6560              		.loc 1 954 5 view .LVU1681
 6561 0270 2046     		mov	r0, r4
 6562 0272 FFF7FEFF 		bl	Serial_Console
 6563              	.LVL482:
 6564 0276 17E7     		b	.L381
 6565              	.L451:
 957:Core/Src/main.c **** 				Serial_Console("DEBUG is now ON\r\n");
 6566              		.loc 1 957 5 view .LVU1682
 957:Core/Src/main.c **** 				Serial_Console("DEBUG is now ON\r\n");
 6567              		.loc 1 957 22 is_stmt 0 view .LVU1683
 6568 0278 404B     		ldr	r3, .L476+148
 6569 027a 0122     		movs	r2, #1
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 201


 6570 027c 1A70     		strb	r2, [r3]
 958:Core/Src/main.c **** 				}
 6571              		.loc 1 958 5 is_stmt 1 view .LVU1684
 6572 027e 4048     		ldr	r0, .L476+152
 6573 0280 FFF7FEFF 		bl	Serial_Console
 6574              	.LVL483:
 6575 0284 17E7     		b	.L382
 6576              	.L452:
 961:Core/Src/main.c **** 				Serial_Console("DEBUG is now OFF\r\n");
 6577              		.loc 1 961 5 view .LVU1685
 961:Core/Src/main.c **** 				Serial_Console("DEBUG is now OFF\r\n");
 6578              		.loc 1 961 22 is_stmt 0 view .LVU1686
 6579 0286 3D4B     		ldr	r3, .L476+148
 6580 0288 0022     		movs	r2, #0
 6581 028a 1A70     		strb	r2, [r3]
 962:Core/Src/main.c **** 				}
 6582              		.loc 1 962 5 is_stmt 1 view .LVU1687
 6583 028c 3D48     		ldr	r0, .L476+156
 6584 028e FFF7FEFF 		bl	Serial_Console
 6585              	.LVL484:
 6586 0292 17E7     		b	.L383
 6587              	.L453:
 6588              	.LBB83:
 965:Core/Src/main.c **** 				sprintf(msg, "%.2f\r\n", volt);
 6589              		.loc 1 965 5 view .LVU1688
 965:Core/Src/main.c **** 				sprintf(msg, "%.2f\r\n", volt);
 6590              		.loc 1 965 26 is_stmt 0 view .LVU1689
 6591 0294 3C4B     		ldr	r3, .L476+160
 6592 0296 93ED007A 		vldr.32	s14, [r3]
 6593              	.LVL485:
 966:Core/Src/main.c **** 				Serial_Console(msg);
 6594              		.loc 1 966 5 is_stmt 1 view .LVU1690
 6595 029a DFED3C7A 		vldr.32	s15, .L476+164
 6596 029e C7EE277A 		vdiv.f32	s15, s14, s15
 6597              	.LVL486:
 966:Core/Src/main.c **** 				Serial_Console(msg);
 6598              		.loc 1 966 5 is_stmt 0 view .LVU1691
 6599 02a2 17EE900A 		vmov	r0, s15
 6600 02a6 FFF7FEFF 		bl	__aeabi_f2d
 6601              	.LVL487:
 966:Core/Src/main.c **** 				Serial_Console(msg);
 6602              		.loc 1 966 5 view .LVU1692
 6603 02aa 0246     		mov	r2, r0
 6604 02ac 0B46     		mov	r3, r1
 6605 02ae 0F4C     		ldr	r4, .L476+4
 6606 02b0 3749     		ldr	r1, .L476+168
 6607 02b2 2046     		mov	r0, r4
 6608 02b4 FFF7FEFF 		bl	sprintf
 6609              	.LVL488:
 967:Core/Src/main.c **** 				}
 6610              		.loc 1 967 5 is_stmt 1 view .LVU1693
 6611 02b8 2046     		mov	r0, r4
 6612 02ba FFF7FEFF 		bl	Serial_Console
 6613              	.LVL489:
 6614 02be 08E7     		b	.L384
 6615              	.L454:
 967:Core/Src/main.c **** 				}
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 202


 6616              		.loc 1 967 5 is_stmt 0 view .LVU1694
 6617              	.LBE83:
 970:Core/Src/main.c **** 				HAL_Delay(500);
 6618              		.loc 1 970 5 is_stmt 1 view .LVU1695
 6619 02c0 3448     		ldr	r0, .L476+172
 6620 02c2 FFF7FEFF 		bl	Serial_Console
 6621              	.LVL490:
 971:Core/Src/main.c **** 				BootLoaderInit(1);
 6622              		.loc 1 971 5 view .LVU1696
 6623 02c6 4FF4FA70 		mov	r0, #500
 6624 02ca FFF7FEFF 		bl	HAL_Delay
 6625              	.LVL491:
 972:Core/Src/main.c **** 			}
 6626              		.loc 1 972 5 view .LVU1697
 6627 02ce 0120     		movs	r0, #1
 6628 02d0 FFF7FEFF 		bl	BootLoaderInit
 6629              	.LVL492:
 6630 02d4 04E7     		b	.L385
 6631              	.L455:
 975:Core/Src/main.c **** 				HAL_Delay(8000);
 6632              		.loc 1 975 5 view .LVU1698
 6633 02d6 3048     		ldr	r0, .L476+176
 6634 02d8 FFF7FEFF 		bl	Serial_Console
 6635              	.LVL493:
 976:Core/Src/main.c **** 				for (int x = 0; x < SIGNATURE_LEN; x++) {
 6636              		.loc 1 976 5 view .LVU1699
 6637 02dc 4FF4FA50 		mov	r0, #8000
 6638 02e0 FFF7FEFF 		bl	HAL_Delay
 6639              	.LVL494:
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6640              		.loc 1 977 5 view .LVU1700
 6641              	.LBB84:
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6642              		.loc 1 977 10 view .LVU1701
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6643              		.loc 1 977 5 is_stmt 0 view .LVU1702
 6644 02e4 6BE0     		b	.L387
 6645              	.L477:
 6646 02e6 00BF     		.align	2
 6647              	.L476:
 6648 02e8 00000000 		.word	ConsoleBuffer
 6649 02ec 00000000 		.word	msg
 6650 02f0 00000000 		.word	.LC18
 6651 02f4 00000000 		.word	.LC27
 6652 02f8 01000000 		.word	_ctype_+1
 6653 02fc 08000000 		.word	.LC28
 6654 0300 3C000000 		.word	.LC30
 6655 0304 44000000 		.word	.LC31
 6656 0308 64000000 		.word	.LC33
 6657 030c 84000000 		.word	.LC35
 6658 0310 94000000 		.word	.LC37
 6659 0314 B8000000 		.word	.LC39
 6660 0318 18010000 		.word	.LC42
 6661 031c 58010000 		.word	.LC47
 6662 0320 6C010000 		.word	.LC49
 6663 0324 84010000 		.word	.LC51
 6664 0328 98010000 		.word	.LC52
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 203


 6665 032c B0010000 		.word	.LC54
 6666 0330 E0010000 		.word	.LC56
 6667 0334 EC010000 		.word	.LC57
 6668 0338 00080040 		.word	1073743872
 6669 033c 00020000 		.word	.LC58
 6670 0340 14020000 		.word	.LC59
 6671 0344 34020000 		.word	.LC61
 6672 0348 50020000 		.word	.LC63
 6673 034c 64020000 		.word	.LC65
 6674 0350 6C020000 		.word	.LC66
 6675 0354 BC020000 		.word	.LC69
 6676 0358 F8020000 		.word	.LC71
 6677 035c 28030000 		.word	.LC73
 6678 0360 54030000 		.word	.LC75
 6679 0364 74030000 		.word	.LC77
 6680 0368 84030000 		.word	.LC78
 6681 036c AC030000 		.word	.LC80
 6682 0370 00000000 		.word	.LANCHOR78
 6683 0374 10000000 		.word	.LC29
 6684 0378 00000000 		.word	.LANCHOR77
 6685 037c 00000000 		.word	.LANCHOR61
 6686 0380 50000000 		.word	.LC32
 6687 0384 70000000 		.word	.LC34
 6688 0388 00000000 		.word	.LANCHOR56
 6689 038c 00007A44 		.word	1148846080
 6690 0390 8C000000 		.word	.LC36
 6691 0394 9C000000 		.word	.LC38
 6692 0398 C4000000 		.word	.LC40
 6693              	.LVL495:
 6694              	.L388:
 978:Core/Src/main.c **** 					Serial_Console(msg);
 6695              		.loc 1 978 6 is_stmt 1 discriminator 3 view .LVU1703
 978:Core/Src/main.c **** 					Serial_Console(msg);
 6696              		.loc 1 978 42 is_stmt 0 discriminator 3 view .LVU1704
 6697 039c A54B     		ldr	r3, .L478
 6698 039e 03EB8403 		add	r3, r3, r4, lsl #2
 978:Core/Src/main.c **** 					Serial_Console(msg);
 6699              		.loc 1 978 6 discriminator 3 view .LVU1705
 6700 03a2 1868     		ldr	r0, [r3]	@ float
 6701 03a4 FFF7FEFF 		bl	__aeabi_f2d
 6702              	.LVL496:
 6703 03a8 0246     		mov	r2, r0
 6704 03aa 0B46     		mov	r3, r1
 6705 03ac A24D     		ldr	r5, .L478+4
 6706 03ae A349     		ldr	r1, .L478+8
 6707 03b0 2846     		mov	r0, r5
 6708 03b2 FFF7FEFF 		bl	sprintf
 6709              	.LVL497:
 979:Core/Src/main.c **** 				}
 6710              		.loc 1 979 6 is_stmt 1 discriminator 3 view .LVU1706
 6711 03b6 2846     		mov	r0, r5
 6712 03b8 FFF7FEFF 		bl	Serial_Console
 6713              	.LVL498:
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6714              		.loc 1 977 40 discriminator 3 view .LVU1707
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6715              		.loc 1 977 41 is_stmt 0 discriminator 3 view .LVU1708
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 204


 6716 03bc 0134     		adds	r4, r4, #1
 6717              	.LVL499:
 6718              	.L387:
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6719              		.loc 1 977 21 is_stmt 1 discriminator 1 view .LVU1709
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6720              		.loc 1 977 5 is_stmt 0 discriminator 1 view .LVU1710
 6721 03be 5F2C     		cmp	r4, #95
 6722 03c0 ECDD     		ble	.L388
 6723 03c2 95E6     		b	.L386
 6724              	.LVL500:
 6725              	.L456:
 977:Core/Src/main.c **** 					sprintf(msg,"%f\r\n", validSignature[x]);
 6726              		.loc 1 977 5 discriminator 1 view .LVU1711
 6727              	.LBE84:
 983:Core/Src/main.c **** 				Serial_Console("{ ");
 6728              		.loc 1 983 5 is_stmt 1 view .LVU1712
 6729 03c4 9E48     		ldr	r0, .L478+12
 6730 03c6 FFF7FEFF 		bl	Serial_Console
 6731              	.LVL501:
 984:Core/Src/main.c **** 				for (int x = 0; x < SIGNATURE_LEN; x++) {
 6732              		.loc 1 984 5 view .LVU1713
 6733 03ca 9E48     		ldr	r0, .L478+16
 6734 03cc FFF7FEFF 		bl	Serial_Console
 6735              	.LVL502:
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6736              		.loc 1 985 5 view .LVU1714
 6737              	.LBB85:
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6738              		.loc 1 985 10 view .LVU1715
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6739              		.loc 1 985 5 is_stmt 0 view .LVU1716
 6740 03d0 10E0     		b	.L390
 6741              	.LVL503:
 6742              	.L391:
 986:Core/Src/main.c **** 					Serial_Console(msg);
 6743              		.loc 1 986 6 is_stmt 1 discriminator 3 view .LVU1717
 986:Core/Src/main.c **** 					Serial_Console(msg);
 6744              		.loc 1 986 39 is_stmt 0 discriminator 3 view .LVU1718
 6745 03d2 984B     		ldr	r3, .L478
 6746 03d4 03EB8403 		add	r3, r3, r4, lsl #2
 986:Core/Src/main.c **** 					Serial_Console(msg);
 6747              		.loc 1 986 6 discriminator 3 view .LVU1719
 6748 03d8 1868     		ldr	r0, [r3]	@ float
 6749 03da FFF7FEFF 		bl	__aeabi_f2d
 6750              	.LVL504:
 6751 03de 0246     		mov	r2, r0
 6752 03e0 0B46     		mov	r3, r1
 6753 03e2 954D     		ldr	r5, .L478+4
 6754 03e4 9849     		ldr	r1, .L478+20
 6755 03e6 2846     		mov	r0, r5
 6756 03e8 FFF7FEFF 		bl	sprintf
 6757              	.LVL505:
 987:Core/Src/main.c **** 				}
 6758              		.loc 1 987 6 is_stmt 1 discriminator 3 view .LVU1720
 6759 03ec 2846     		mov	r0, r5
 6760 03ee FFF7FEFF 		bl	Serial_Console
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 205


 6761              	.LVL506:
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6762              		.loc 1 985 40 discriminator 3 view .LVU1721
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6763              		.loc 1 985 41 is_stmt 0 discriminator 3 view .LVU1722
 6764 03f2 0134     		adds	r4, r4, #1
 6765              	.LVL507:
 6766              	.L390:
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6767              		.loc 1 985 21 is_stmt 1 discriminator 1 view .LVU1723
 985:Core/Src/main.c **** 					sprintf(msg,"%f,", validSignature[x]);
 6768              		.loc 1 985 5 is_stmt 0 discriminator 1 view .LVU1724
 6769 03f4 5F2C     		cmp	r4, #95
 6770 03f6 ECDD     		ble	.L391
 6771              	.LBE85:
 989:Core/Src/main.c **** 			}
 6772              		.loc 1 989 5 is_stmt 1 view .LVU1725
 6773 03f8 9448     		ldr	r0, .L478+24
 6774 03fa FFF7FEFF 		bl	Serial_Console
 6775              	.LVL508:
 6776 03fe 7FE6     		b	.L389
 6777              	.LVL509:
 6778              	.L457:
 992:Core/Src/main.c **** 				Serial_Console("Done!\r\n");
 6779              		.loc 1 992 5 view .LVU1726
 992:Core/Src/main.c **** 				Serial_Console("Done!\r\n");
 6780              		.loc 1 992 22 is_stmt 0 view .LVU1727
 6781 0400 934B     		ldr	r3, .L478+28
 6782 0402 0122     		movs	r2, #1
 6783 0404 1A70     		strb	r2, [r3]
 993:Core/Src/main.c **** 			}
 6784              		.loc 1 993 5 is_stmt 1 view .LVU1728
 6785 0406 9348     		ldr	r0, .L478+32
 6786 0408 FFF7FEFF 		bl	Serial_Console
 6787              	.LVL510:
 6788 040c 7FE6     		b	.L392
 6789              	.L458:
 996:Core/Src/main.c **** 				  TIM4->CCR2 = 2000;
 6790              		.loc 1 996 7 view .LVU1729
 996:Core/Src/main.c **** 				  TIM4->CCR2 = 2000;
 6791              		.loc 1 996 18 is_stmt 0 view .LVU1730
 6792 040e 924B     		ldr	r3, .L478+36
 6793 0410 0022     		movs	r2, #0
 6794 0412 5A63     		str	r2, [r3, #52]
 997:Core/Src/main.c **** 				  HAL_Delay(3000);
 6795              		.loc 1 997 7 is_stmt 1 view .LVU1731
 997:Core/Src/main.c **** 				  HAL_Delay(3000);
 6796              		.loc 1 997 18 is_stmt 0 view .LVU1732
 6797 0414 4FF4FA62 		mov	r2, #2000
 6798 0418 9A63     		str	r2, [r3, #56]
 998:Core/Src/main.c **** 				  MotorStop();
 6799              		.loc 1 998 7 is_stmt 1 view .LVU1733
 6800 041a 40F6B830 		movw	r0, #3000
 6801 041e FFF7FEFF 		bl	HAL_Delay
 6802              	.LVL511:
 999:Core/Src/main.c **** 				  Serial_Console("Done.\r\n");
 6803              		.loc 1 999 7 view .LVU1734
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 206


 6804 0422 FFF7FEFF 		bl	MotorStop
 6805              	.LVL512:
1000:Core/Src/main.c **** 			}
 6806              		.loc 1 1000 7 view .LVU1735
 6807 0426 8D48     		ldr	r0, .L478+40
 6808 0428 FFF7FEFF 		bl	Serial_Console
 6809              	.LVL513:
 6810 042c 76E6     		b	.L393
 6811              	.L459:
1003:Core/Src/main.c **** 				  TIM4->CCR4 = 0;
 6812              		.loc 1 1003 7 view .LVU1736
1003:Core/Src/main.c **** 				  TIM4->CCR4 = 0;
 6813              		.loc 1 1003 18 is_stmt 0 view .LVU1737
 6814 042e 8A4B     		ldr	r3, .L478+36
 6815 0430 4FF4FA62 		mov	r2, #2000
 6816 0434 DA63     		str	r2, [r3, #60]
1004:Core/Src/main.c **** 				  HAL_Delay(3000);
 6817              		.loc 1 1004 7 is_stmt 1 view .LVU1738
1004:Core/Src/main.c **** 				  HAL_Delay(3000);
 6818              		.loc 1 1004 18 is_stmt 0 view .LVU1739
 6819 0436 0022     		movs	r2, #0
 6820 0438 1A64     		str	r2, [r3, #64]
1005:Core/Src/main.c **** 				  MotorStop();
 6821              		.loc 1 1005 7 is_stmt 1 view .LVU1740
 6822 043a 40F6B830 		movw	r0, #3000
 6823 043e FFF7FEFF 		bl	HAL_Delay
 6824              	.LVL514:
1006:Core/Src/main.c **** 				  Serial_Console("Done.\r\n");
 6825              		.loc 1 1006 7 view .LVU1741
 6826 0442 FFF7FEFF 		bl	MotorStop
 6827              	.LVL515:
1007:Core/Src/main.c **** 			}
 6828              		.loc 1 1007 7 view .LVU1742
 6829 0446 8548     		ldr	r0, .L478+40
 6830 0448 FFF7FEFF 		bl	Serial_Console
 6831              	.LVL516:
 6832 044c 6DE6     		b	.L394
 6833              	.L460:
1010:Core/Src/main.c **** 				HAL_Delay(500);
 6834              		.loc 1 1010 5 view .LVU1743
 6835 044e 8448     		ldr	r0, .L478+44
 6836 0450 FFF7FEFF 		bl	Serial_Console
 6837              	.LVL517:
1011:Core/Src/main.c **** 				NVIC_SystemReset();
 6838              		.loc 1 1011 5 view .LVU1744
 6839 0454 4FF4FA70 		mov	r0, #500
 6840 0458 FFF7FEFF 		bl	HAL_Delay
 6841              	.LVL518:
1012:Core/Src/main.c **** 
 6842              		.loc 1 1012 5 view .LVU1745
 6843              	.LBB86:
 6844              	.LBI86:
 6845              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.0.8
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 207


   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 208


  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 209


 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 210


 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 211


 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:Drivers/CMSIS/Include/core_cm4.h **** {
 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 212


 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 213


 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:Drivers/CMSIS/Include/core_cm4.h ****   {
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 214


 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 215


 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 216


 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 217


 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 218


 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 219


 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
 716:Drivers/CMSIS/Include/core_cm4.h **** /**
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 220


 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Drivers/CMSIS/Include/core_cm4.h **** 
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 221


 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 846:Drivers/CMSIS/Include/core_cm4.h **** 
 847:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** 
 851:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 222


 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** 
 879:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:Drivers/CMSIS/Include/core_cm4.h **** 
 887:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:Drivers/CMSIS/Include/core_cm4.h **** 
 895:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:Drivers/CMSIS/Include/core_cm4.h **** 
 898:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:Drivers/CMSIS/Include/core_cm4.h **** 
 903:Drivers/CMSIS/Include/core_cm4.h **** 
 904:Drivers/CMSIS/Include/core_cm4.h **** /**
 905:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:Drivers/CMSIS/Include/core_cm4.h ****   @{
 909:Drivers/CMSIS/Include/core_cm4.h ****  */
 910:Drivers/CMSIS/Include/core_cm4.h **** 
 911:Drivers/CMSIS/Include/core_cm4.h **** /**
 912:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:Drivers/CMSIS/Include/core_cm4.h ****  */
 914:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 915:Drivers/CMSIS/Include/core_cm4.h **** {
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 223


 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 224


 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:Drivers/CMSIS/Include/core_cm4.h **** 
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:Drivers/CMSIS/Include/core_cm4.h **** 
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:Drivers/CMSIS/Include/core_cm4.h **** 
 996:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:Drivers/CMSIS/Include/core_cm4.h **** 
1000:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:Drivers/CMSIS/Include/core_cm4.h **** 
1004:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:Drivers/CMSIS/Include/core_cm4.h **** 
1008:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:Drivers/CMSIS/Include/core_cm4.h **** 
1016:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 225


1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:Drivers/CMSIS/Include/core_cm4.h **** 
1039:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:Drivers/CMSIS/Include/core_cm4.h **** 
1042:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:Drivers/CMSIS/Include/core_cm4.h **** 
1045:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:Drivers/CMSIS/Include/core_cm4.h **** 
1050:Drivers/CMSIS/Include/core_cm4.h **** 
1051:Drivers/CMSIS/Include/core_cm4.h **** /**
1052:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:Drivers/CMSIS/Include/core_cm4.h ****   @{
1056:Drivers/CMSIS/Include/core_cm4.h ****  */
1057:Drivers/CMSIS/Include/core_cm4.h **** 
1058:Drivers/CMSIS/Include/core_cm4.h **** /**
1059:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:Drivers/CMSIS/Include/core_cm4.h ****  */
1061:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1062:Drivers/CMSIS/Include/core_cm4.h **** {
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 226


1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:Drivers/CMSIS/Include/core_cm4.h **** 
1093:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:Drivers/CMSIS/Include/core_cm4.h **** 
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:Drivers/CMSIS/Include/core_cm4.h **** 
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:Drivers/CMSIS/Include/core_cm4.h **** 
1117:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:Drivers/CMSIS/Include/core_cm4.h **** 
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:Drivers/CMSIS/Include/core_cm4.h **** 
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** 
1143:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 227


1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:Drivers/CMSIS/Include/core_cm4.h **** 
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:Drivers/CMSIS/Include/core_cm4.h **** 
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:Drivers/CMSIS/Include/core_cm4.h **** 
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:Drivers/CMSIS/Include/core_cm4.h **** 
1179:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** 
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** 
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 228


1202:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:Drivers/CMSIS/Include/core_cm4.h **** 
1206:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:Drivers/CMSIS/Include/core_cm4.h **** 
1209:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:Drivers/CMSIS/Include/core_cm4.h **** 
1211:Drivers/CMSIS/Include/core_cm4.h **** 
1212:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:Drivers/CMSIS/Include/core_cm4.h **** /**
1214:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:Drivers/CMSIS/Include/core_cm4.h ****   @{
1218:Drivers/CMSIS/Include/core_cm4.h ****  */
1219:Drivers/CMSIS/Include/core_cm4.h **** 
1220:Drivers/CMSIS/Include/core_cm4.h **** /**
1221:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:Drivers/CMSIS/Include/core_cm4.h ****  */
1223:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1224:Drivers/CMSIS/Include/core_cm4.h **** {
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1237:Drivers/CMSIS/Include/core_cm4.h **** 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 229


1259:Drivers/CMSIS/Include/core_cm4.h **** 
1260:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:Drivers/CMSIS/Include/core_cm4.h **** 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:Drivers/CMSIS/Include/core_cm4.h **** 
1296:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:Drivers/CMSIS/Include/core_cm4.h **** 
1302:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:Drivers/CMSIS/Include/core_cm4.h **** 
1305:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:Drivers/CMSIS/Include/core_cm4.h **** 
1308:Drivers/CMSIS/Include/core_cm4.h **** 
1309:Drivers/CMSIS/Include/core_cm4.h **** /**
1310:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:Drivers/CMSIS/Include/core_cm4.h ****   @{
1314:Drivers/CMSIS/Include/core_cm4.h ****  */
1315:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 230


1316:Drivers/CMSIS/Include/core_cm4.h **** /**
1317:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:Drivers/CMSIS/Include/core_cm4.h ****  */
1319:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1320:Drivers/CMSIS/Include/core_cm4.h **** {
1321:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1328:Drivers/CMSIS/Include/core_cm4.h **** 
1329:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:Drivers/CMSIS/Include/core_cm4.h **** 
1361:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:Drivers/CMSIS/Include/core_cm4.h **** 
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:Drivers/CMSIS/Include/core_cm4.h **** 
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 231


1373:Drivers/CMSIS/Include/core_cm4.h **** 
1374:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** 
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** 
1399:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:Drivers/CMSIS/Include/core_cm4.h **** 
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:Drivers/CMSIS/Include/core_cm4.h **** 
1409:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:Drivers/CMSIS/Include/core_cm4.h **** 
1412:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:Drivers/CMSIS/Include/core_cm4.h **** 
1414:Drivers/CMSIS/Include/core_cm4.h **** 
1415:Drivers/CMSIS/Include/core_cm4.h **** /**
1416:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:Drivers/CMSIS/Include/core_cm4.h ****   @{
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** /**
1423:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:Drivers/CMSIS/Include/core_cm4.h ****  */
1425:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1426:Drivers/CMSIS/Include/core_cm4.h **** {
1427:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 232


1430:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:Drivers/CMSIS/Include/core_cm4.h **** 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:Drivers/CMSIS/Include/core_cm4.h **** 
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** 
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** 
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 233


1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:Drivers/CMSIS/Include/core_cm4.h **** 
1517:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:Drivers/CMSIS/Include/core_cm4.h **** 
1519:Drivers/CMSIS/Include/core_cm4.h **** 
1520:Drivers/CMSIS/Include/core_cm4.h **** /**
1521:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:Drivers/CMSIS/Include/core_cm4.h ****   @{
1525:Drivers/CMSIS/Include/core_cm4.h ****  */
1526:Drivers/CMSIS/Include/core_cm4.h **** 
1527:Drivers/CMSIS/Include/core_cm4.h **** /**
1528:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1532:Drivers/CMSIS/Include/core_cm4.h **** */
1533:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:Drivers/CMSIS/Include/core_cm4.h **** 
1535:Drivers/CMSIS/Include/core_cm4.h **** /**
1536:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:Drivers/CMSIS/Include/core_cm4.h **** */
1541:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:Drivers/CMSIS/Include/core_cm4.h **** 
1543:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 234


1544:Drivers/CMSIS/Include/core_cm4.h **** 
1545:Drivers/CMSIS/Include/core_cm4.h **** 
1546:Drivers/CMSIS/Include/core_cm4.h **** /**
1547:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:Drivers/CMSIS/Include/core_cm4.h ****   @{
1551:Drivers/CMSIS/Include/core_cm4.h ****  */
1552:Drivers/CMSIS/Include/core_cm4.h **** 
1553:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:Drivers/CMSIS/Include/core_cm4.h **** 
1572:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:Drivers/CMSIS/Include/core_cm4.h **** #endif
1576:Drivers/CMSIS/Include/core_cm4.h **** 
1577:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1581:Drivers/CMSIS/Include/core_cm4.h **** 
1582:Drivers/CMSIS/Include/core_cm4.h **** 
1583:Drivers/CMSIS/Include/core_cm4.h **** 
1584:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1585:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1586:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1587:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1588:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1589:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1590:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1591:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1592:Drivers/CMSIS/Include/core_cm4.h **** /**
1593:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:Drivers/CMSIS/Include/core_cm4.h **** */
1595:Drivers/CMSIS/Include/core_cm4.h **** 
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** 
1598:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:Drivers/CMSIS/Include/core_cm4.h **** /**
1600:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 235


1601:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:Drivers/CMSIS/Include/core_cm4.h ****   @{
1604:Drivers/CMSIS/Include/core_cm4.h ****  */
1605:Drivers/CMSIS/Include/core_cm4.h **** 
1606:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1610:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:Drivers/CMSIS/Include/core_cm4.h **** #else
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:Drivers/CMSIS/Include/core_cm4.h **** 
1626:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:Drivers/CMSIS/Include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1630:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:Drivers/CMSIS/Include/core_cm4.h **** #else
1632:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:Drivers/CMSIS/Include/core_cm4.h **** 
1636:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:Drivers/CMSIS/Include/core_cm4.h **** 
1647:Drivers/CMSIS/Include/core_cm4.h **** 
1648:Drivers/CMSIS/Include/core_cm4.h **** /**
1649:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1650:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1653:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:Drivers/CMSIS/Include/core_cm4.h ****  */
1657:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 236


1658:Drivers/CMSIS/Include/core_cm4.h **** {
1659:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1660:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:Drivers/CMSIS/Include/core_cm4.h **** }
1669:Drivers/CMSIS/Include/core_cm4.h **** 
1670:Drivers/CMSIS/Include/core_cm4.h **** 
1671:Drivers/CMSIS/Include/core_cm4.h **** /**
1672:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1673:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:Drivers/CMSIS/Include/core_cm4.h ****  */
1676:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:Drivers/CMSIS/Include/core_cm4.h **** {
1678:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1679:Drivers/CMSIS/Include/core_cm4.h **** }
1680:Drivers/CMSIS/Include/core_cm4.h **** 
1681:Drivers/CMSIS/Include/core_cm4.h **** 
1682:Drivers/CMSIS/Include/core_cm4.h **** /**
1683:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1684:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1687:Drivers/CMSIS/Include/core_cm4.h ****  */
1688:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:Drivers/CMSIS/Include/core_cm4.h **** {
1690:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:Drivers/CMSIS/Include/core_cm4.h ****   {
1692:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:Drivers/CMSIS/Include/core_cm4.h ****   }
1694:Drivers/CMSIS/Include/core_cm4.h **** }
1695:Drivers/CMSIS/Include/core_cm4.h **** 
1696:Drivers/CMSIS/Include/core_cm4.h **** 
1697:Drivers/CMSIS/Include/core_cm4.h **** /**
1698:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1704:Drivers/CMSIS/Include/core_cm4.h ****  */
1705:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:Drivers/CMSIS/Include/core_cm4.h **** {
1707:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:Drivers/CMSIS/Include/core_cm4.h ****   {
1709:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:Drivers/CMSIS/Include/core_cm4.h ****   }
1711:Drivers/CMSIS/Include/core_cm4.h ****   else
1712:Drivers/CMSIS/Include/core_cm4.h ****   {
1713:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1714:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 237


1715:Drivers/CMSIS/Include/core_cm4.h **** }
1716:Drivers/CMSIS/Include/core_cm4.h **** 
1717:Drivers/CMSIS/Include/core_cm4.h **** 
1718:Drivers/CMSIS/Include/core_cm4.h **** /**
1719:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1720:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1723:Drivers/CMSIS/Include/core_cm4.h ****  */
1724:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:Drivers/CMSIS/Include/core_cm4.h **** {
1726:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:Drivers/CMSIS/Include/core_cm4.h ****   {
1728:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1730:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1731:Drivers/CMSIS/Include/core_cm4.h ****   }
1732:Drivers/CMSIS/Include/core_cm4.h **** }
1733:Drivers/CMSIS/Include/core_cm4.h **** 
1734:Drivers/CMSIS/Include/core_cm4.h **** 
1735:Drivers/CMSIS/Include/core_cm4.h **** /**
1736:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1737:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1741:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1742:Drivers/CMSIS/Include/core_cm4.h ****  */
1743:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:Drivers/CMSIS/Include/core_cm4.h **** {
1745:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:Drivers/CMSIS/Include/core_cm4.h ****   {
1747:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:Drivers/CMSIS/Include/core_cm4.h ****   }
1749:Drivers/CMSIS/Include/core_cm4.h ****   else
1750:Drivers/CMSIS/Include/core_cm4.h ****   {
1751:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1752:Drivers/CMSIS/Include/core_cm4.h ****   }
1753:Drivers/CMSIS/Include/core_cm4.h **** }
1754:Drivers/CMSIS/Include/core_cm4.h **** 
1755:Drivers/CMSIS/Include/core_cm4.h **** 
1756:Drivers/CMSIS/Include/core_cm4.h **** /**
1757:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1758:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1761:Drivers/CMSIS/Include/core_cm4.h ****  */
1762:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:Drivers/CMSIS/Include/core_cm4.h **** {
1764:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:Drivers/CMSIS/Include/core_cm4.h ****   {
1766:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:Drivers/CMSIS/Include/core_cm4.h ****   }
1768:Drivers/CMSIS/Include/core_cm4.h **** }
1769:Drivers/CMSIS/Include/core_cm4.h **** 
1770:Drivers/CMSIS/Include/core_cm4.h **** 
1771:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 238


1772:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1776:Drivers/CMSIS/Include/core_cm4.h ****  */
1777:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:Drivers/CMSIS/Include/core_cm4.h **** {
1779:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:Drivers/CMSIS/Include/core_cm4.h ****   {
1781:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:Drivers/CMSIS/Include/core_cm4.h ****   }
1783:Drivers/CMSIS/Include/core_cm4.h **** }
1784:Drivers/CMSIS/Include/core_cm4.h **** 
1785:Drivers/CMSIS/Include/core_cm4.h **** 
1786:Drivers/CMSIS/Include/core_cm4.h **** /**
1787:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1788:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1792:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1793:Drivers/CMSIS/Include/core_cm4.h ****  */
1794:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:Drivers/CMSIS/Include/core_cm4.h **** {
1796:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:Drivers/CMSIS/Include/core_cm4.h ****   {
1798:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:Drivers/CMSIS/Include/core_cm4.h ****   }
1800:Drivers/CMSIS/Include/core_cm4.h ****   else
1801:Drivers/CMSIS/Include/core_cm4.h ****   {
1802:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1803:Drivers/CMSIS/Include/core_cm4.h ****   }
1804:Drivers/CMSIS/Include/core_cm4.h **** }
1805:Drivers/CMSIS/Include/core_cm4.h **** 
1806:Drivers/CMSIS/Include/core_cm4.h **** 
1807:Drivers/CMSIS/Include/core_cm4.h **** /**
1808:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1809:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:Drivers/CMSIS/Include/core_cm4.h ****  */
1816:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:Drivers/CMSIS/Include/core_cm4.h **** {
1818:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1819:Drivers/CMSIS/Include/core_cm4.h ****   {
1820:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1821:Drivers/CMSIS/Include/core_cm4.h ****   }
1822:Drivers/CMSIS/Include/core_cm4.h ****   else
1823:Drivers/CMSIS/Include/core_cm4.h ****   {
1824:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:Drivers/CMSIS/Include/core_cm4.h ****   }
1826:Drivers/CMSIS/Include/core_cm4.h **** }
1827:Drivers/CMSIS/Include/core_cm4.h **** 
1828:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 239


1829:Drivers/CMSIS/Include/core_cm4.h **** /**
1830:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1831:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1834:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1836:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:Drivers/CMSIS/Include/core_cm4.h ****  */
1838:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:Drivers/CMSIS/Include/core_cm4.h **** {
1840:Drivers/CMSIS/Include/core_cm4.h **** 
1841:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:Drivers/CMSIS/Include/core_cm4.h ****   {
1843:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:Drivers/CMSIS/Include/core_cm4.h ****   }
1845:Drivers/CMSIS/Include/core_cm4.h ****   else
1846:Drivers/CMSIS/Include/core_cm4.h ****   {
1847:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:Drivers/CMSIS/Include/core_cm4.h ****   }
1849:Drivers/CMSIS/Include/core_cm4.h **** }
1850:Drivers/CMSIS/Include/core_cm4.h **** 
1851:Drivers/CMSIS/Include/core_cm4.h **** 
1852:Drivers/CMSIS/Include/core_cm4.h **** /**
1853:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1854:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1856:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:Drivers/CMSIS/Include/core_cm4.h ****  */
1863:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:Drivers/CMSIS/Include/core_cm4.h **** {
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1866:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1868:Drivers/CMSIS/Include/core_cm4.h **** 
1869:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1870:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1871:Drivers/CMSIS/Include/core_cm4.h **** 
1872:Drivers/CMSIS/Include/core_cm4.h ****   return (
1873:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1874:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1875:Drivers/CMSIS/Include/core_cm4.h ****          );
1876:Drivers/CMSIS/Include/core_cm4.h **** }
1877:Drivers/CMSIS/Include/core_cm4.h **** 
1878:Drivers/CMSIS/Include/core_cm4.h **** 
1879:Drivers/CMSIS/Include/core_cm4.h **** /**
1880:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1881:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1883:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 240


1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:Drivers/CMSIS/Include/core_cm4.h ****  */
1890:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:Drivers/CMSIS/Include/core_cm4.h **** {
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1895:Drivers/CMSIS/Include/core_cm4.h **** 
1896:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1897:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:Drivers/CMSIS/Include/core_cm4.h **** 
1899:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:Drivers/CMSIS/Include/core_cm4.h **** }
1902:Drivers/CMSIS/Include/core_cm4.h **** 
1903:Drivers/CMSIS/Include/core_cm4.h **** 
1904:Drivers/CMSIS/Include/core_cm4.h **** /**
1905:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1906:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1907:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1909:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:Drivers/CMSIS/Include/core_cm4.h ****  */
1913:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:Drivers/CMSIS/Include/core_cm4.h **** {
1915:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:Drivers/CMSIS/Include/core_cm4.h **** }
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** 
1920:Drivers/CMSIS/Include/core_cm4.h **** /**
1921:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1922:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1927:Drivers/CMSIS/Include/core_cm4.h ****  */
1928:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:Drivers/CMSIS/Include/core_cm4.h **** {
1930:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:Drivers/CMSIS/Include/core_cm4.h **** }
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** 
1935:Drivers/CMSIS/Include/core_cm4.h **** /**
1936:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1937:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:Drivers/CMSIS/Include/core_cm4.h ****  */
1939:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 6846              		.loc 3 1939 34 view .LVU1746
 6847              	.LBB87:
1940:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 241


1941:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 6848              		.loc 3 1941 3 view .LVU1747
 6849              	.LBB88:
 6850              	.LBI88:
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 242


 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 243


 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 244


 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 245


 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 246


 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 247


 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 248


 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 249


 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 6851              		.loc 2 877 27 view .LVU1748
 6852              	.LBB89:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 6853              		.loc 2 879 3 view .LVU1749
 6854              		.syntax unified
 6855              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6856 045c BFF34F8F 		dsb 0xF
 6857              	@ 0 "" 2
 6858              		.thumb
 6859              		.syntax unified
 6860              	.LBE89:
 6861              	.LBE88:
1942:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1943:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 6862              		.loc 3 1943 3 view .LVU1750
1944:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 6863              		.loc 3 1944 32 is_stmt 0 view .LVU1751
 6864 0460 8049     		ldr	r1, .L478+48
 6865 0462 CA68     		ldr	r2, [r1, #12]
 6866              		.loc 3 1944 40 view .LVU1752
 6867 0464 02F4E062 		and	r2, r2, #1792
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 6868              		.loc 3 1943 17 view .LVU1753
 6869 0468 7F4B     		ldr	r3, .L478+52
 6870 046a 1343     		orrs	r3, r3, r2
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 6871              		.loc 3 1943 15 view .LVU1754
 6872 046c CB60     		str	r3, [r1, #12]
1945:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1946:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 6873              		.loc 3 1946 3 is_stmt 1 view .LVU1755
 6874              	.LBB90:
 6875              	.LBI90:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6876              		.loc 2 877 27 view .LVU1756
 6877              	.LBB91:
 6878              		.loc 2 879 3 view .LVU1757
 6879              		.syntax unified
 6880              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6881 046e BFF34F8F 		dsb 0xF
 6882              	@ 0 "" 2
 6883              		.thumb
 6884              		.syntax unified
 6885              	.L396:
 6886              	.LBE91:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 250


 6887              	.LBE90:
1947:Drivers/CMSIS/Include/core_cm4.h **** 
1948:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 6888              		.loc 3 1948 3 view .LVU1758
1949:Drivers/CMSIS/Include/core_cm4.h ****   {
1950:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
 6889              		.loc 3 1950 5 view .LVU1759
 6890              		.syntax unified
 6891              	@ 1950 "Drivers/CMSIS/Include/core_cm4.h" 1
 6892 0472 00BF     		nop
 6893              	@ 0 "" 2
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
 6894              		.loc 3 1948 8 view .LVU1760
 6895              		.thumb
 6896              		.syntax unified
 6897 0474 FDE7     		b	.L396
 6898              	.L461:
 6899              	.LBE87:
 6900              	.LBE86:
1016:Core/Src/main.c **** 				Serial_Console(msg);
 6901              		.loc 1 1016 5 view .LVU1761
 6902 0476 7D4B     		ldr	r3, .L478+56
 6903 0478 1868     		ldr	r0, [r3]	@ float
 6904 047a FFF7FEFF 		bl	__aeabi_f2d
 6905              	.LVL519:
 6906 047e 0446     		mov	r4, r0
 6907 0480 0D46     		mov	r5, r1
 6908 0482 6D4E     		ldr	r6, .L478+4
 6909 0484 7A4B     		ldr	r3, .L478+60
 6910 0486 1868     		ldr	r0, [r3]	@ float
 6911 0488 FFF7FEFF 		bl	__aeabi_f2d
 6912              	.LVL520:
 6913 048c CDE90201 		strd	r0, [sp, #8]
 6914 0490 784B     		ldr	r3, .L478+64
 6915 0492 1868     		ldr	r0, [r3]	@ float
 6916 0494 FFF7FEFF 		bl	__aeabi_f2d
 6917              	.LVL521:
 6918 0498 CDE90001 		strd	r0, [sp]
 6919 049c 2246     		mov	r2, r4
 6920 049e 2B46     		mov	r3, r5
 6921 04a0 7549     		ldr	r1, .L478+68
 6922 04a2 3046     		mov	r0, r6
 6923 04a4 FFF7FEFF 		bl	sprintf
 6924              	.LVL522:
1017:Core/Src/main.c **** 			}
 6925              		.loc 1 1017 5 view .LVU1762
 6926 04a8 3046     		mov	r0, r6
 6927 04aa FFF7FEFF 		bl	Serial_Console
 6928              	.LVL523:
 6929 04ae 4AE6     		b	.L397
 6930              	.L462:
1020:Core/Src/main.c **** 			}
 6931              		.loc 1 1020 5 view .LVU1763
 6932 04b0 FFF7FEFF 		bl	MotorStop
 6933              	.LVL524:
 6934 04b4 4EE6     		b	.L398
 6935              	.L463:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 251


 6936              	.LBB92:
1035:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6937              		.loc 1 1035 5 view .LVU1764
1035:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6938              		.loc 1 1035 9 is_stmt 0 view .LVU1765
 6939 04b6 0023     		movs	r3, #0
 6940 04b8 0593     		str	r3, [sp, #20]
1035:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6941              		.loc 1 1035 19 view .LVU1766
 6942 04ba 0693     		str	r3, [sp, #24]
1035:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6943              		.loc 1 1035 30 view .LVU1767
 6944 04bc 0793     		str	r3, [sp, #28]
1035:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6945              		.loc 1 1035 39 view .LVU1768
 6946 04be 0893     		str	r3, [sp, #32]
1036:Core/Src/main.c **** 				sscanf(Command, "%s %s %d %d %d %d", cmd1, cmd2, &year, &month, &day, &weekday);
 6947              		.loc 1 1036 5 is_stmt 1 view .LVU1769
1037:Core/Src/main.c **** 				setDate(year, month, day, weekday);
 6948              		.loc 1 1037 5 view .LVU1770
 6949 04c0 08AB     		add	r3, sp, #32
 6950 04c2 0393     		str	r3, [sp, #12]
 6951 04c4 07AB     		add	r3, sp, #28
 6952 04c6 0293     		str	r3, [sp, #8]
 6953 04c8 06AB     		add	r3, sp, #24
 6954 04ca 0193     		str	r3, [sp, #4]
 6955 04cc 05AB     		add	r3, sp, #20
 6956 04ce 0093     		str	r3, [sp]
 6957 04d0 0AAB     		add	r3, sp, #40
 6958 04d2 04AA     		add	r2, sp, #16
 6959 04d4 6949     		ldr	r1, .L478+72
 6960 04d6 0CA8     		add	r0, sp, #48
 6961 04d8 FFF7FEFF 		bl	sscanf
 6962              	.LVL525:
1038:Core/Src/main.c **** 
 6963              		.loc 1 1038 5 view .LVU1771
 6964 04dc 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 6965 04e0 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2
 6966 04e4 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 6967 04e8 9DF81400 		ldrb	r0, [sp, #20]	@ zero_extendqisi2
 6968 04ec FFF7FEFF 		bl	setDate
 6969              	.LVL526:
 6970 04f0 52E6     		b	.L401
 6971              	.L464:
 6972              	.LBE92:
 6973              	.LBB93:
1042:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6974              		.loc 1 1042 5 view .LVU1772
1042:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6975              		.loc 1 1042 9 is_stmt 0 view .LVU1773
 6976 04f2 0023     		movs	r3, #0
 6977 04f4 0693     		str	r3, [sp, #24]
1042:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6978              		.loc 1 1042 19 view .LVU1774
 6979 04f6 0793     		str	r3, [sp, #28]
1042:Core/Src/main.c **** 				char cmd1[3], cmd2[4];
 6980              		.loc 1 1042 31 view .LVU1775
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 252


 6981 04f8 0893     		str	r3, [sp, #32]
1043:Core/Src/main.c **** 				sscanf(Command, "%s %s %d %d %d", cmd1, cmd2, &hour, &minute, &second);
 6982              		.loc 1 1043 5 is_stmt 1 view .LVU1776
1044:Core/Src/main.c **** 				setTime(hour, minute, second);
 6983              		.loc 1 1044 5 view .LVU1777
 6984 04fa 08AB     		add	r3, sp, #32
 6985 04fc 0293     		str	r3, [sp, #8]
 6986 04fe 07AB     		add	r3, sp, #28
 6987 0500 0193     		str	r3, [sp, #4]
 6988 0502 06AB     		add	r3, sp, #24
 6989 0504 0093     		str	r3, [sp]
 6990 0506 0AAB     		add	r3, sp, #40
 6991 0508 05AA     		add	r2, sp, #20
 6992 050a 5D49     		ldr	r1, .L478+76
 6993 050c 0CA8     		add	r0, sp, #48
 6994 050e FFF7FEFF 		bl	sscanf
 6995              	.LVL527:
1045:Core/Src/main.c **** 			}
 6996              		.loc 1 1045 5 view .LVU1778
 6997 0512 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 6998 0516 9DF81C10 		ldrb	r1, [sp, #28]	@ zero_extendqisi2
 6999 051a 9DF81800 		ldrb	r0, [sp, #24]	@ zero_extendqisi2
 7000 051e FFF7FEFF 		bl	setTime
 7001              	.LVL528:
 7002 0522 41E6     		b	.L402
 7003              	.L465:
 7004              	.LBE93:
 7005              	.LBB94:
1048:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
 7006              		.loc 1 1048 5 view .LVU1779
1049:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_kp);
 7007              		.loc 1 1049 5 view .LVU1780
1050:Core/Src/main.c **** 				kp = pid_kp;
 7008              		.loc 1 1050 5 view .LVU1781
 7009 0524 0AAB     		add	r3, sp, #40
 7010 0526 0093     		str	r3, [sp]
 7011 0528 07AB     		add	r3, sp, #28
 7012 052a 08AA     		add	r2, sp, #32
 7013 052c 5549     		ldr	r1, .L478+80
 7014 052e 0CA8     		add	r0, sp, #48
 7015 0530 FFF7FEFF 		bl	sscanf
 7016              	.LVL529:
1051:Core/Src/main.c **** 			}
 7017              		.loc 1 1051 5 view .LVU1782
1051:Core/Src/main.c **** 			}
 7018              		.loc 1 1051 8 is_stmt 0 view .LVU1783
 7019 0534 544B     		ldr	r3, .L478+84
 7020 0536 0A9A     		ldr	r2, [sp, #40]	@ float
 7021 0538 1A60     		str	r2, [r3]	@ float
 7022 053a 3DE6     		b	.L403
 7023              	.L466:
 7024              	.LBE94:
 7025              	.LBB95:
1054:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
 7026              		.loc 1 1054 5 is_stmt 1 view .LVU1784
1055:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_ki);
 7027              		.loc 1 1055 5 view .LVU1785
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 253


1056:Core/Src/main.c **** 				ki = pid_ki;
 7028              		.loc 1 1056 5 view .LVU1786
 7029 053c 0AAB     		add	r3, sp, #40
 7030 053e 0093     		str	r3, [sp]
 7031 0540 07AB     		add	r3, sp, #28
 7032 0542 08AA     		add	r2, sp, #32
 7033 0544 4F49     		ldr	r1, .L478+80
 7034 0546 0CA8     		add	r0, sp, #48
 7035 0548 FFF7FEFF 		bl	sscanf
 7036              	.LVL530:
1057:Core/Src/main.c **** 			}
 7037              		.loc 1 1057 5 view .LVU1787
1057:Core/Src/main.c **** 			}
 7038              		.loc 1 1057 8 is_stmt 0 view .LVU1788
 7039 054c 4F4B     		ldr	r3, .L478+88
 7040 054e 0A9A     		ldr	r2, [sp, #40]	@ float
 7041 0550 1A60     		str	r2, [r3]	@ float
 7042 0552 39E6     		b	.L404
 7043              	.L467:
 7044              	.LBE95:
 7045              	.LBB96:
1060:Core/Src/main.c **** 				char cmd1[3], cmd2[2];
 7046              		.loc 1 1060 5 is_stmt 1 view .LVU1789
1061:Core/Src/main.c **** 				sscanf(Command, "%s %s %f", cmd1, cmd2, &pid_kd);
 7047              		.loc 1 1061 5 view .LVU1790
1062:Core/Src/main.c **** 				kd = pid_kd;
 7048              		.loc 1 1062 5 view .LVU1791
 7049 0554 0AAB     		add	r3, sp, #40
 7050 0556 0093     		str	r3, [sp]
 7051 0558 07AB     		add	r3, sp, #28
 7052 055a 08AA     		add	r2, sp, #32
 7053 055c 4949     		ldr	r1, .L478+80
 7054 055e 0CA8     		add	r0, sp, #48
 7055 0560 FFF7FEFF 		bl	sscanf
 7056              	.LVL531:
1063:Core/Src/main.c **** 			}
 7057              		.loc 1 1063 5 view .LVU1792
1063:Core/Src/main.c **** 			}
 7058              		.loc 1 1063 8 is_stmt 0 view .LVU1793
 7059 0564 4A4B     		ldr	r3, .L478+92
 7060 0566 0A9A     		ldr	r2, [sp, #40]	@ float
 7061 0568 1A60     		str	r2, [r3]	@ float
 7062 056a 35E6     		b	.L405
 7063              	.L468:
 7064              	.LBE96:
1067:Core/Src/main.c **** 				Serial_Console("RazorBoard DISABLED.\r\n");
 7065              		.loc 1 1067 5 is_stmt 1 view .LVU1794
1067:Core/Src/main.c **** 				Serial_Console("RazorBoard DISABLED.\r\n");
 7066              		.loc 1 1067 18 is_stmt 0 view .LVU1795
 7067 056c 494B     		ldr	r3, .L478+96
 7068 056e 0022     		movs	r2, #0
 7069 0570 1A70     		strb	r2, [r3]
1068:Core/Src/main.c **** 				Serial_Console("Please type <help> to see available commands\r\n");
 7070              		.loc 1 1068 5 is_stmt 1 view .LVU1796
 7071 0572 4948     		ldr	r0, .L478+100
 7072 0574 FFF7FEFF 		bl	Serial_Console
 7073              	.LVL532:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 254


1069:Core/Src/main.c **** 			}
 7074              		.loc 1 1069 5 view .LVU1797
 7075 0578 4848     		ldr	r0, .L478+104
 7076 057a FFF7FEFF 		bl	Serial_Console
 7077              	.LVL533:
 7078 057e 32E6     		b	.L406
 7079              	.L469:
1073:Core/Src/main.c **** 				Serial_Console("RazorBoard ENABLED. STEP AWAY FROM THE VEHICLE!\r\n");
 7080              		.loc 1 1073 5 view .LVU1798
1073:Core/Src/main.c **** 				Serial_Console("RazorBoard ENABLED. STEP AWAY FROM THE VEHICLE!\r\n");
 7081              		.loc 1 1073 18 is_stmt 0 view .LVU1799
 7082 0580 444B     		ldr	r3, .L478+96
 7083 0582 0122     		movs	r2, #1
 7084 0584 1A70     		strb	r2, [r3]
1074:Core/Src/main.c **** 				Initial_Start = 0;
 7085              		.loc 1 1074 5 is_stmt 1 view .LVU1800
 7086 0586 4648     		ldr	r0, .L478+108
 7087 0588 FFF7FEFF 		bl	Serial_Console
 7088              	.LVL534:
1075:Core/Src/main.c **** 				Initial_Start = 0;
 7089              		.loc 1 1075 5 view .LVU1801
1075:Core/Src/main.c **** 				Initial_Start = 0;
 7090              		.loc 1 1075 19 is_stmt 0 view .LVU1802
 7091 058c 454B     		ldr	r3, .L478+112
 7092 058e 0022     		movs	r2, #0
 7093 0590 1A70     		strb	r2, [r3]
1076:Core/Src/main.c **** 			}
 7094              		.loc 1 1076 5 is_stmt 1 view .LVU1803
 7095 0592 2FE6     		b	.L407
 7096              	.L470:
1079:Core/Src/main.c **** 				cutterOFF();
 7097              		.loc 1 1079 5 view .LVU1804
1079:Core/Src/main.c **** 				cutterOFF();
 7098              		.loc 1 1079 23 is_stmt 0 view .LVU1805
 7099 0594 444B     		ldr	r3, .L478+116
 7100 0596 0122     		movs	r2, #1
 7101 0598 1A70     		strb	r2, [r3]
1080:Core/Src/main.c **** 				Serial_Console("Perimeter tracking ENABLED\r\n");
 7102              		.loc 1 1080 5 is_stmt 1 view .LVU1806
 7103 059a FFF7FEFF 		bl	cutterOFF
 7104              	.LVL535:
1081:Core/Src/main.c **** 			}
 7105              		.loc 1 1081 5 view .LVU1807
 7106 059e 4348     		ldr	r0, .L478+120
 7107 05a0 FFF7FEFF 		bl	Serial_Console
 7108              	.LVL536:
 7109 05a4 2DE6     		b	.L408
 7110              	.L471:
1084:Core/Src/main.c **** 				Serial_Console(msg);
 7111              		.loc 1 1084 5 view .LVU1808
 7112 05a6 384B     		ldr	r3, .L478+84
 7113 05a8 1868     		ldr	r0, [r3]	@ float
 7114 05aa FFF7FEFF 		bl	__aeabi_f2d
 7115              	.LVL537:
 7116 05ae 0446     		mov	r4, r0
 7117 05b0 0D46     		mov	r5, r1
 7118 05b2 214E     		ldr	r6, .L478+4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 255


 7119 05b4 364B     		ldr	r3, .L478+92
 7120 05b6 1868     		ldr	r0, [r3]	@ float
 7121 05b8 FFF7FEFF 		bl	__aeabi_f2d
 7122              	.LVL538:
 7123 05bc CDE90201 		strd	r0, [sp, #8]
 7124 05c0 324B     		ldr	r3, .L478+88
 7125 05c2 1868     		ldr	r0, [r3]	@ float
 7126 05c4 FFF7FEFF 		bl	__aeabi_f2d
 7127              	.LVL539:
 7128 05c8 CDE90001 		strd	r0, [sp]
 7129 05cc 2246     		mov	r2, r4
 7130 05ce 2B46     		mov	r3, r5
 7131 05d0 3749     		ldr	r1, .L478+124
 7132 05d2 3046     		mov	r0, r6
 7133 05d4 FFF7FEFF 		bl	sprintf
 7134              	.LVL540:
1085:Core/Src/main.c **** 			}
 7135              		.loc 1 1085 5 view .LVU1809
 7136 05d8 3046     		mov	r0, r6
 7137 05da FFF7FEFF 		bl	Serial_Console
 7138              	.LVL541:
 7139 05de 17E6     		b	.L409
 7140              	.L472:
 7141              	.LBB97:
1088:Core/Src/main.c **** 				char cmd1[3], cmd2[7], cmd3[5];
 7142              		.loc 1 1088 5 view .LVU1810
1089:Core/Src/main.c **** 				sscanf(Command, "%s %s %s %d", cmd1, cmd2, cmd3, &start);
 7143              		.loc 1 1089 5 view .LVU1811
1090:Core/Src/main.c **** 				WorkingHourStart = start;
 7144              		.loc 1 1090 5 view .LVU1812
 7145 05e0 07AB     		add	r3, sp, #28
 7146 05e2 0193     		str	r3, [sp, #4]
 7147 05e4 08AB     		add	r3, sp, #32
 7148 05e6 0093     		str	r3, [sp]
 7149 05e8 0AAB     		add	r3, sp, #40
 7150 05ea 06AA     		add	r2, sp, #24
 7151 05ec 3149     		ldr	r1, .L478+128
 7152 05ee 0CA8     		add	r0, sp, #48
 7153 05f0 FFF7FEFF 		bl	sscanf
 7154              	.LVL542:
1091:Core/Src/main.c **** 			}
 7155              		.loc 1 1091 5 view .LVU1813
1091:Core/Src/main.c **** 			}
 7156              		.loc 1 1091 22 is_stmt 0 view .LVU1814
 7157 05f4 304B     		ldr	r3, .L478+132
 7158 05f6 079A     		ldr	r2, [sp, #28]
 7159 05f8 1A70     		strb	r2, [r3]
 7160 05fa 11E6     		b	.L410
 7161              	.L473:
 7162              	.LBE97:
 7163              	.LBB98:
1094:Core/Src/main.c **** 				char cmd1[3], cmd2[7], cmd3[3];
 7164              		.loc 1 1094 5 is_stmt 1 view .LVU1815
1095:Core/Src/main.c **** 				sscanf(Command, "%s %s %s %d", cmd1, cmd2, cmd3, &end);
 7165              		.loc 1 1095 5 view .LVU1816
1096:Core/Src/main.c **** 				WorkingHourEnd = end;
 7166              		.loc 1 1096 5 view .LVU1817
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 256


 7167 05fc 08AB     		add	r3, sp, #32
 7168 05fe 0193     		str	r3, [sp, #4]
 7169 0600 07AB     		add	r3, sp, #28
 7170 0602 0093     		str	r3, [sp]
 7171 0604 0AAB     		add	r3, sp, #40
 7172 0606 06AA     		add	r2, sp, #24
 7173 0608 2A49     		ldr	r1, .L478+128
 7174 060a 0CA8     		add	r0, sp, #48
 7175 060c FFF7FEFF 		bl	sscanf
 7176              	.LVL543:
1097:Core/Src/main.c **** 			}
 7177              		.loc 1 1097 5 view .LVU1818
1097:Core/Src/main.c **** 			}
 7178              		.loc 1 1097 20 is_stmt 0 view .LVU1819
 7179 0610 2A4B     		ldr	r3, .L478+136
 7180 0612 089A     		ldr	r2, [sp, #32]
 7181 0614 1A70     		strb	r2, [r3]
 7182 0616 0BE6     		b	.L411
 7183              	.L474:
 7184              	.LBE98:
1100:Core/Src/main.c **** 				Serial_Console(msg);
 7185              		.loc 1 1100 5 is_stmt 1 view .LVU1820
 7186 0618 074C     		ldr	r4, .L478+4
 7187 061a 284B     		ldr	r3, .L478+136
 7188 061c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7189 061e 264A     		ldr	r2, .L478+132
 7190 0620 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7191 0622 2749     		ldr	r1, .L478+140
 7192 0624 2046     		mov	r0, r4
 7193 0626 FFF7FEFF 		bl	sprintf
 7194              	.LVL544:
1101:Core/Src/main.c **** 			}
 7195              		.loc 1 1101 5 view .LVU1821
 7196 062a 2046     		mov	r0, r4
 7197 062c FFF7FEFF 		bl	Serial_Console
 7198              	.LVL545:
 7199 0630 05E6     		b	.L412
 7200              	.L479:
 7201 0632 00BF     		.align	2
 7202              	.L478:
 7203 0634 00000000 		.word	.LANCHOR16
 7204 0638 00000000 		.word	msg
 7205 063c 10010000 		.word	.LC41
 7206 0640 24010000 		.word	.LC43
 7207 0644 48010000 		.word	.LC44
 7208 0648 4C010000 		.word	.LC45
 7209 064c 50010000 		.word	.LC46
 7210 0650 00000000 		.word	.LANCHOR15
 7211 0654 64010000 		.word	.LC48
 7212 0658 00080040 		.word	1073743872
 7213 065c 7C010000 		.word	.LC50
 7214 0660 A0010000 		.word	.LC53
 7215 0664 00ED00E0 		.word	-536810240
 7216 0668 0400FA05 		.word	100270084
 7217 066c 00000000 		.word	M1_amp
 7218 0670 00000000 		.word	.LANCHOR52
 7219 0674 00000000 		.word	M2_amp
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 257


 7220 0678 C0010000 		.word	.LC55
 7221 067c 20020000 		.word	.LC60
 7222 0680 40020000 		.word	.LC62
 7223 0684 58020000 		.word	.LC64
 7224 0688 00000000 		.word	.LANCHOR69
 7225 068c 00000000 		.word	.LANCHOR70
 7226 0690 00000000 		.word	.LANCHOR71
 7227 0694 00000000 		.word	.LANCHOR54
 7228 0698 74020000 		.word	.LC67
 7229 069c 8C020000 		.word	.LC68
 7230 06a0 C4020000 		.word	.LC70
 7231 06a4 00000000 		.word	.LANCHOR19
 7232 06a8 00000000 		.word	.LANCHOR35
 7233 06ac 08030000 		.word	.LC72
 7234 06b0 3C030000 		.word	.LC74
 7235 06b4 68030000 		.word	.LC76
 7236 06b8 00000000 		.word	.LANCHOR30
 7237 06bc 00000000 		.word	.LANCHOR31
 7238 06c0 98030000 		.word	.LC79
 7239              	.L475:
1104:Core/Src/main.c **** 				Serial_Console(msg);
 7240              		.loc 1 1104 5 view .LVU1822
 7241 06c4 C94C     		ldr	r4, .L480
 7242 06c6 CA4D     		ldr	r5, .L480+4
 7243 06c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7244 06ca 2060     		str	r0, [r4]	@ unaligned
 7245 06cc 6160     		str	r1, [r4, #4]	@ unaligned
 7246 06ce A260     		str	r2, [r4, #8]	@ unaligned
 7247 06d0 E360     		str	r3, [r4, #12]	@ unaligned
 7248 06d2 03CD     		ldmia	r5!, {r0, r1}
 7249 06d4 2061     		str	r0, [r4, #16]	@ unaligned
 7250 06d6 6161     		str	r1, [r4, #20]	@ unaligned
1105:Core/Src/main.c **** 				sprintf(msg, "HELLO             	- Welcome message\r\n");
 7251              		.loc 1 1105 5 view .LVU1823
 7252 06d8 2046     		mov	r0, r4
 7253 06da FFF7FEFF 		bl	Serial_Console
 7254              	.LVL546:
1106:Core/Src/main.c **** 				Serial_Console(msg);
 7255              		.loc 1 1106 5 view .LVU1824
 7256 06de C54E     		ldr	r6, .L480+8
 7257 06e0 06F12007 		add	r7, r6, #32
 7258              	.L414:
 7259 06e4 3546     		mov	r5, r6
 7260 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7261 06e8 2060     		str	r0, [r4]	@ unaligned
 7262 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 7263 06ec A260     		str	r2, [r4, #8]	@ unaligned
 7264 06ee E360     		str	r3, [r4, #12]	@ unaligned
 7265 06f0 2E46     		mov	r6, r5
 7266 06f2 1034     		adds	r4, r4, #16
 7267 06f4 BD42     		cmp	r5, r7
 7268 06f6 F5D1     		bne	.L414
 7269 06f8 2868     		ldr	r0, [r5]
 7270 06fa 2060     		str	r0, [r4]	@ unaligned
 7271 06fc AA88     		ldrh	r2, [r5, #4]	@ unaligned
 7272 06fe AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 7273 0700 A280     		strh	r2, [r4, #4]	@ unaligned
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 258


 7274 0702 A371     		strb	r3, [r4, #6]
1107:Core/Src/main.c **** 				sprintf(msg, "REBOOT                  - Reboot Razorboard\r\n");
 7275              		.loc 1 1107 5 view .LVU1825
 7276 0704 B94C     		ldr	r4, .L480
 7277 0706 2046     		mov	r0, r4
 7278 0708 FFF7FEFF 		bl	Serial_Console
 7279              	.LVL547:
1108:Core/Src/main.c **** 				Serial_Console(msg);
 7280              		.loc 1 1108 5 view .LVU1826
 7281 070c BA4D     		ldr	r5, .L480+12
 7282 070e 05F12007 		add	r7, r5, #32
 7283              	.L415:
 7284 0712 2E46     		mov	r6, r5
 7285 0714 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7286 0716 2060     		str	r0, [r4]	@ unaligned
 7287 0718 6160     		str	r1, [r4, #4]	@ unaligned
 7288 071a A260     		str	r2, [r4, #8]	@ unaligned
 7289 071c E360     		str	r3, [r4, #12]	@ unaligned
 7290 071e 3546     		mov	r5, r6
 7291 0720 1034     		adds	r4, r4, #16
 7292 0722 BE42     		cmp	r6, r7
 7293 0724 F5D1     		bne	.L415
 7294 0726 07CD     		ldmia	r5!, {r0, r1, r2}
 7295 0728 2060     		str	r0, [r4]	@ unaligned
 7296 072a 6160     		str	r1, [r4, #4]	@ unaligned
 7297 072c A260     		str	r2, [r4, #8]	@ unaligned
 7298 072e 2B88     		ldrh	r3, [r5]	@ unaligned
 7299 0730 A381     		strh	r3, [r4, #12]	@ unaligned
1109:Core/Src/main.c **** 				sprintf(msg, "DISABLE                 - Disable Razorboard\r\n");
 7300              		.loc 1 1109 5 view .LVU1827
 7301 0732 AE4C     		ldr	r4, .L480
 7302 0734 2046     		mov	r0, r4
 7303 0736 FFF7FEFF 		bl	Serial_Console
 7304              	.LVL548:
1110:Core/Src/main.c **** 				Serial_Console(msg);
 7305              		.loc 1 1110 5 view .LVU1828
 7306 073a B04D     		ldr	r5, .L480+16
 7307 073c 05F12007 		add	r7, r5, #32
 7308              	.L416:
 7309 0740 2E46     		mov	r6, r5
 7310 0742 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7311 0744 2060     		str	r0, [r4]	@ unaligned
 7312 0746 6160     		str	r1, [r4, #4]	@ unaligned
 7313 0748 A260     		str	r2, [r4, #8]	@ unaligned
 7314 074a E360     		str	r3, [r4, #12]	@ unaligned
 7315 074c 3546     		mov	r5, r6
 7316 074e 1034     		adds	r4, r4, #16
 7317 0750 BE42     		cmp	r6, r7
 7318 0752 F5D1     		bne	.L416
 7319 0754 07CD     		ldmia	r5!, {r0, r1, r2}
 7320 0756 2060     		str	r0, [r4]	@ unaligned
 7321 0758 6160     		str	r1, [r4, #4]	@ unaligned
 7322 075a A260     		str	r2, [r4, #8]	@ unaligned
 7323 075c 2A88     		ldrh	r2, [r5]	@ unaligned
 7324 075e AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7325 0760 A281     		strh	r2, [r4, #12]	@ unaligned
 7326 0762 A373     		strb	r3, [r4, #14]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 259


1111:Core/Src/main.c **** 				sprintf(msg, "ENABLE                  - Enable Razorboard\r\n");
 7327              		.loc 1 1111 5 view .LVU1829
 7328 0764 A14C     		ldr	r4, .L480
 7329 0766 2046     		mov	r0, r4
 7330 0768 FFF7FEFF 		bl	Serial_Console
 7331              	.LVL549:
1112:Core/Src/main.c **** 				Serial_Console(msg);
 7332              		.loc 1 1112 5 view .LVU1830
 7333 076c A44D     		ldr	r5, .L480+20
 7334 076e 05F12007 		add	r7, r5, #32
 7335              	.L417:
 7336 0772 2E46     		mov	r6, r5
 7337 0774 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7338 0776 2060     		str	r0, [r4]	@ unaligned
 7339 0778 6160     		str	r1, [r4, #4]	@ unaligned
 7340 077a A260     		str	r2, [r4, #8]	@ unaligned
 7341 077c E360     		str	r3, [r4, #12]	@ unaligned
 7342 077e 3546     		mov	r5, r6
 7343 0780 1034     		adds	r4, r4, #16
 7344 0782 BE42     		cmp	r6, r7
 7345 0784 F5D1     		bne	.L417
 7346 0786 07CD     		ldmia	r5!, {r0, r1, r2}
 7347 0788 2060     		str	r0, [r4]	@ unaligned
 7348 078a 6160     		str	r1, [r4, #4]	@ unaligned
 7349 078c A260     		str	r2, [r4, #8]	@ unaligned
 7350 078e 2B88     		ldrh	r3, [r5]	@ unaligned
 7351 0790 A381     		strh	r3, [r4, #12]	@ unaligned
1113:Core/Src/main.c **** 				sprintf(msg, "VERSION           	- Show version of board\r\n");
 7352              		.loc 1 1113 5 view .LVU1831
 7353 0792 964C     		ldr	r4, .L480
 7354 0794 2046     		mov	r0, r4
 7355 0796 FFF7FEFF 		bl	Serial_Console
 7356              	.LVL550:
1114:Core/Src/main.c **** 				Serial_Console(msg);
 7357              		.loc 1 1114 5 view .LVU1832
 7358 079a 9A4D     		ldr	r5, .L480+24
 7359 079c 05F12007 		add	r7, r5, #32
 7360              	.L418:
 7361 07a0 2E46     		mov	r6, r5
 7362 07a2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7363 07a4 2060     		str	r0, [r4]	@ unaligned
 7364 07a6 6160     		str	r1, [r4, #4]	@ unaligned
 7365 07a8 A260     		str	r2, [r4, #8]	@ unaligned
 7366 07aa E360     		str	r3, [r4, #12]	@ unaligned
 7367 07ac 3546     		mov	r5, r6
 7368 07ae 1034     		adds	r4, r4, #16
 7369 07b0 BE42     		cmp	r6, r7
 7370 07b2 F5D1     		bne	.L418
 7371 07b4 07CD     		ldmia	r5!, {r0, r1, r2}
 7372 07b6 2060     		str	r0, [r4]	@ unaligned
 7373 07b8 6160     		str	r1, [r4, #4]	@ unaligned
 7374 07ba A260     		str	r2, [r4, #8]	@ unaligned
 7375 07bc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7376 07be 2373     		strb	r3, [r4, #12]
1115:Core/Src/main.c **** 				sprintf(msg, "DEBUG ON          	- Enable debug messages\r\n");
 7377              		.loc 1 1115 5 view .LVU1833
 7378 07c0 8A4C     		ldr	r4, .L480
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 260


 7379 07c2 2046     		mov	r0, r4
 7380 07c4 FFF7FEFF 		bl	Serial_Console
 7381              	.LVL551:
1116:Core/Src/main.c **** 				Serial_Console(msg);
 7382              		.loc 1 1116 5 view .LVU1834
 7383 07c8 8F4D     		ldr	r5, .L480+28
 7384 07ca 05F12007 		add	r7, r5, #32
 7385              	.L419:
 7386 07ce 2E46     		mov	r6, r5
 7387 07d0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7388 07d2 2060     		str	r0, [r4]	@ unaligned
 7389 07d4 6160     		str	r1, [r4, #4]	@ unaligned
 7390 07d6 A260     		str	r2, [r4, #8]	@ unaligned
 7391 07d8 E360     		str	r3, [r4, #12]	@ unaligned
 7392 07da 3546     		mov	r5, r6
 7393 07dc 1034     		adds	r4, r4, #16
 7394 07de BE42     		cmp	r6, r7
 7395 07e0 F5D1     		bne	.L419
 7396 07e2 07CD     		ldmia	r5!, {r0, r1, r2}
 7397 07e4 2060     		str	r0, [r4]	@ unaligned
 7398 07e6 6160     		str	r1, [r4, #4]	@ unaligned
 7399 07e8 A260     		str	r2, [r4, #8]	@ unaligned
 7400 07ea 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7401 07ec 2373     		strb	r3, [r4, #12]
1117:Core/Src/main.c **** 				sprintf(msg, "DEBUG OFF         	- Disable debug messages\r\n");
 7402              		.loc 1 1117 5 view .LVU1835
 7403 07ee 7F4C     		ldr	r4, .L480
 7404 07f0 2046     		mov	r0, r4
 7405 07f2 FFF7FEFF 		bl	Serial_Console
 7406              	.LVL552:
1118:Core/Src/main.c **** 				Serial_Console(msg);
 7407              		.loc 1 1118 5 view .LVU1836
 7408 07f6 854E     		ldr	r6, .L480+32
 7409 07f8 06F12007 		add	r7, r6, #32
 7410              	.L420:
 7411 07fc 3546     		mov	r5, r6
 7412 07fe 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7413 0800 2060     		str	r0, [r4]	@ unaligned
 7414 0802 6160     		str	r1, [r4, #4]	@ unaligned
 7415 0804 A260     		str	r2, [r4, #8]	@ unaligned
 7416 0806 E360     		str	r3, [r4, #12]	@ unaligned
 7417 0808 2E46     		mov	r6, r5
 7418 080a 1034     		adds	r4, r4, #16
 7419 080c BD42     		cmp	r5, r7
 7420 080e F5D1     		bne	.L420
 7421 0810 07CE     		ldmia	r6!, {r0, r1, r2}
 7422 0812 2060     		str	r0, [r4]	@ unaligned
 7423 0814 6160     		str	r1, [r4, #4]	@ unaligned
 7424 0816 A260     		str	r2, [r4, #8]	@ unaligned
 7425 0818 3388     		ldrh	r3, [r6]	@ unaligned
 7426 081a A381     		strh	r3, [r4, #12]	@ unaligned
1119:Core/Src/main.c **** 				sprintf(msg, "VOLTAGE           	- Show current voltage\r\n");
 7427              		.loc 1 1119 5 view .LVU1837
 7428 081c 734C     		ldr	r4, .L480
 7429 081e 2046     		mov	r0, r4
 7430 0820 FFF7FEFF 		bl	Serial_Console
 7431              	.LVL553:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 261


1120:Core/Src/main.c **** 				Serial_Console(msg);
 7432              		.loc 1 1120 5 view .LVU1838
 7433 0824 7A4D     		ldr	r5, .L480+36
 7434 0826 05F12007 		add	r7, r5, #32
 7435              	.L421:
 7436 082a 2E46     		mov	r6, r5
 7437 082c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7438 082e 2060     		str	r0, [r4]	@ unaligned
 7439 0830 6160     		str	r1, [r4, #4]	@ unaligned
 7440 0832 A260     		str	r2, [r4, #8]	@ unaligned
 7441 0834 E360     		str	r3, [r4, #12]	@ unaligned
 7442 0836 3546     		mov	r5, r6
 7443 0838 1034     		adds	r4, r4, #16
 7444 083a BE42     		cmp	r6, r7
 7445 083c F5D1     		bne	.L421
 7446 083e 07CD     		ldmia	r5!, {r0, r1, r2}
 7447 0840 2060     		str	r0, [r4]	@ unaligned
 7448 0842 6160     		str	r1, [r4, #4]	@ unaligned
 7449 0844 A260     		str	r2, [r4, #8]	@ unaligned
1121:Core/Src/main.c **** 				sprintf(msg, "UPGRADE           	- Enter bootloader\r\n");
 7450              		.loc 1 1121 5 view .LVU1839
 7451 0846 694C     		ldr	r4, .L480
 7452 0848 2046     		mov	r0, r4
 7453 084a FFF7FEFF 		bl	Serial_Console
 7454              	.LVL554:
1122:Core/Src/main.c **** 				Serial_Console(msg);
 7455              		.loc 1 1122 5 view .LVU1840
 7456 084e 714E     		ldr	r6, .L480+40
 7457 0850 06F12007 		add	r7, r6, #32
 7458              	.L422:
 7459 0854 3546     		mov	r5, r6
 7460 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7461 0858 2060     		str	r0, [r4]	@ unaligned
 7462 085a 6160     		str	r1, [r4, #4]	@ unaligned
 7463 085c A260     		str	r2, [r4, #8]	@ unaligned
 7464 085e E360     		str	r3, [r4, #12]	@ unaligned
 7465 0860 2E46     		mov	r6, r5
 7466 0862 1034     		adds	r4, r4, #16
 7467 0864 BD42     		cmp	r5, r7
 7468 0866 F5D1     		bne	.L422
 7469 0868 03CE     		ldmia	r6!, {r0, r1}
 7470 086a 2060     		str	r0, [r4]	@ unaligned
 7471 086c 6160     		str	r1, [r4, #4]	@ unaligned
1123:Core/Src/main.c **** 				sprintf(msg, "SHOW SIG          	- Show reference BWF signature\r\n");
 7472              		.loc 1 1123 5 view .LVU1841
 7473 086e 5F4C     		ldr	r4, .L480
 7474 0870 2046     		mov	r0, r4
 7475 0872 FFF7FEFF 		bl	Serial_Console
 7476              	.LVL555:
1124:Core/Src/main.c **** 				Serial_Console(msg);
 7477              		.loc 1 1124 5 view .LVU1842
 7478 0876 684E     		ldr	r6, .L480+44
 7479 0878 06F13007 		add	r7, r6, #48
 7480              	.L423:
 7481 087c 3546     		mov	r5, r6
 7482 087e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7483 0880 2060     		str	r0, [r4]	@ unaligned
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 262


 7484 0882 6160     		str	r1, [r4, #4]	@ unaligned
 7485 0884 A260     		str	r2, [r4, #8]	@ unaligned
 7486 0886 E360     		str	r3, [r4, #12]	@ unaligned
 7487 0888 2E46     		mov	r6, r5
 7488 088a 1034     		adds	r4, r4, #16
 7489 088c BD42     		cmp	r5, r7
 7490 088e F5D1     		bne	.L423
 7491 0890 2868     		ldr	r0, [r5]
 7492 0892 2060     		str	r0, [r4]	@ unaligned
1125:Core/Src/main.c **** 				sprintf(msg, "EXPORT SIG          	- Export reference BWF signature as an array\r\n");
 7493              		.loc 1 1125 5 view .LVU1843
 7494 0894 554C     		ldr	r4, .L480
 7495 0896 2046     		mov	r0, r4
 7496 0898 FFF7FEFF 		bl	Serial_Console
 7497              	.LVL556:
1126:Core/Src/main.c **** 				Serial_Console(msg);
 7498              		.loc 1 1126 5 view .LVU1844
 7499 089c 4422     		movs	r2, #68
 7500 089e 5F49     		ldr	r1, .L480+48
 7501 08a0 2046     		mov	r0, r4
 7502 08a2 FFF7FEFF 		bl	memcpy
 7503              	.LVL557:
1127:Core/Src/main.c **** 				sprintf(msg, "RECORD SIG              - Record a new signature\r\n");
 7504              		.loc 1 1127 5 view .LVU1845
 7505 08a6 2046     		mov	r0, r4
 7506 08a8 FFF7FEFF 		bl	Serial_Console
 7507              	.LVL558:
1128:Core/Src/main.c **** 				Serial_Console(msg);
 7508              		.loc 1 1128 5 view .LVU1846
 7509 08ac 5C4E     		ldr	r6, .L480+52
 7510 08ae 06F13007 		add	r7, r6, #48
 7511              	.L424:
 7512 08b2 3546     		mov	r5, r6
 7513 08b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7514 08b6 2060     		str	r0, [r4]	@ unaligned
 7515 08b8 6160     		str	r1, [r4, #4]	@ unaligned
 7516 08ba A260     		str	r2, [r4, #8]	@ unaligned
 7517 08bc E360     		str	r3, [r4, #12]	@ unaligned
 7518 08be 2E46     		mov	r6, r5
 7519 08c0 1034     		adds	r4, r4, #16
 7520 08c2 BD42     		cmp	r5, r7
 7521 08c4 F5D1     		bne	.L424
 7522 08c6 2A88     		ldrh	r2, [r5]	@ unaligned
 7523 08c8 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7524 08ca 2280     		strh	r2, [r4]	@ unaligned
 7525 08cc A370     		strb	r3, [r4, #2]
1129:Core/Src/main.c **** 				sprintf(msg, "TEST LEFT MOTOR   	- Test left motor (M1)\r\n");
 7526              		.loc 1 1129 5 view .LVU1847
 7527 08ce 474C     		ldr	r4, .L480
 7528 08d0 2046     		mov	r0, r4
 7529 08d2 FFF7FEFF 		bl	Serial_Console
 7530              	.LVL559:
1130:Core/Src/main.c **** 				Serial_Console(msg);
 7531              		.loc 1 1130 5 view .LVU1848
 7532 08d6 534D     		ldr	r5, .L480+56
 7533 08d8 05F12007 		add	r7, r5, #32
 7534              	.L425:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 263


 7535 08dc 2E46     		mov	r6, r5
 7536 08de 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7537 08e0 2060     		str	r0, [r4]	@ unaligned
 7538 08e2 6160     		str	r1, [r4, #4]	@ unaligned
 7539 08e4 A260     		str	r2, [r4, #8]	@ unaligned
 7540 08e6 E360     		str	r3, [r4, #12]	@ unaligned
 7541 08e8 3546     		mov	r5, r6
 7542 08ea 1034     		adds	r4, r4, #16
 7543 08ec BE42     		cmp	r6, r7
 7544 08ee F5D1     		bne	.L425
 7545 08f0 07CD     		ldmia	r5!, {r0, r1, r2}
 7546 08f2 2060     		str	r0, [r4]	@ unaligned
 7547 08f4 6160     		str	r1, [r4, #4]	@ unaligned
 7548 08f6 A260     		str	r2, [r4, #8]	@ unaligned
1131:Core/Src/main.c **** 				sprintf(msg, "TEST RIGHT MOTOR  	- Test right motor (M2)\r\n");
 7549              		.loc 1 1131 5 view .LVU1849
 7550 08f8 3C4C     		ldr	r4, .L480
 7551 08fa 2046     		mov	r0, r4
 7552 08fc FFF7FEFF 		bl	Serial_Console
 7553              	.LVL560:
1132:Core/Src/main.c **** 				Serial_Console(msg);
 7554              		.loc 1 1132 5 view .LVU1850
 7555 0900 494D     		ldr	r5, .L480+60
 7556 0902 05F12007 		add	r7, r5, #32
 7557              	.L426:
 7558 0906 2E46     		mov	r6, r5
 7559 0908 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7560 090a 2060     		str	r0, [r4]	@ unaligned
 7561 090c 6160     		str	r1, [r4, #4]	@ unaligned
 7562 090e A260     		str	r2, [r4, #8]	@ unaligned
 7563 0910 E360     		str	r3, [r4, #12]	@ unaligned
 7564 0912 3546     		mov	r5, r6
 7565 0914 1034     		adds	r4, r4, #16
 7566 0916 BE42     		cmp	r6, r7
 7567 0918 F5D1     		bne	.L426
 7568 091a 07CD     		ldmia	r5!, {r0, r1, r2}
 7569 091c 2060     		str	r0, [r4]	@ unaligned
 7570 091e 6160     		str	r1, [r4, #4]	@ unaligned
 7571 0920 A260     		str	r2, [r4, #8]	@ unaligned
 7572 0922 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7573 0924 2373     		strb	r3, [r4, #12]
1133:Core/Src/main.c **** 				sprintf(msg, "SHOW CURRENT      	- Show current sensors M1, M2, C1\r\n");
 7574              		.loc 1 1133 5 view .LVU1851
 7575 0926 314C     		ldr	r4, .L480
 7576 0928 2046     		mov	r0, r4
 7577 092a FFF7FEFF 		bl	Serial_Console
 7578              	.LVL561:
1134:Core/Src/main.c **** 				Serial_Console(msg);
 7579              		.loc 1 1134 5 view .LVU1852
 7580 092e 3F4E     		ldr	r6, .L480+64
 7581 0930 06F13007 		add	r7, r6, #48
 7582              	.L427:
 7583 0934 3546     		mov	r5, r6
 7584 0936 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7585 0938 2060     		str	r0, [r4]	@ unaligned
 7586 093a 6160     		str	r1, [r4, #4]	@ unaligned
 7587 093c A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 264


 7588 093e E360     		str	r3, [r4, #12]	@ unaligned
 7589 0940 2E46     		mov	r6, r5
 7590 0942 1034     		adds	r4, r4, #16
 7591 0944 BD42     		cmp	r5, r7
 7592 0946 F5D1     		bne	.L427
 7593 0948 2868     		ldr	r0, [r5]
 7594 094a 2060     		str	r0, [r4]	@ unaligned
 7595 094c AA88     		ldrh	r2, [r5, #4]	@ unaligned
 7596 094e AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 7597 0950 A280     		strh	r2, [r4, #4]	@ unaligned
 7598 0952 A371     		strb	r3, [r4, #6]
1135:Core/Src/main.c **** 				sprintf(msg, "STOP MOTORS       	- Stop motors\r\n");
 7599              		.loc 1 1135 5 view .LVU1853
 7600 0954 254C     		ldr	r4, .L480
 7601 0956 2046     		mov	r0, r4
 7602 0958 FFF7FEFF 		bl	Serial_Console
 7603              	.LVL562:
1136:Core/Src/main.c **** 				Serial_Console(msg);
 7604              		.loc 1 1136 5 view .LVU1854
 7605 095c 344E     		ldr	r6, .L480+68
 7606 095e 06F12007 		add	r7, r6, #32
 7607              	.L428:
 7608 0962 3546     		mov	r5, r6
 7609 0964 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7610 0966 2060     		str	r0, [r4]	@ unaligned
 7611 0968 6160     		str	r1, [r4, #4]	@ unaligned
 7612 096a A260     		str	r2, [r4, #8]	@ unaligned
 7613 096c E360     		str	r3, [r4, #12]	@ unaligned
 7614 096e 2E46     		mov	r6, r5
 7615 0970 1034     		adds	r4, r4, #16
 7616 0972 BD42     		cmp	r5, r7
 7617 0974 F5D1     		bne	.L428
 7618 0976 2A88     		ldrh	r2, [r5]	@ unaligned
 7619 0978 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7620 097a 2280     		strh	r2, [r4]	@ unaligned
 7621 097c A370     		strb	r3, [r4, #2]
1137:Core/Src/main.c **** 				sprintf(msg, "RUN MOTORS FORWARD	- Run motors forward\r\n");
 7622              		.loc 1 1137 5 view .LVU1855
 7623 097e 1B4C     		ldr	r4, .L480
 7624 0980 2046     		mov	r0, r4
 7625 0982 FFF7FEFF 		bl	Serial_Console
 7626              	.LVL563:
1138:Core/Src/main.c **** 				Serial_Console(msg);
 7627              		.loc 1 1138 5 view .LVU1856
 7628 0986 2B4D     		ldr	r5, .L480+72
 7629 0988 05F12007 		add	r7, r5, #32
 7630              	.L429:
 7631 098c 2E46     		mov	r6, r5
 7632 098e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7633 0990 2060     		str	r0, [r4]	@ unaligned
 7634 0992 6160     		str	r1, [r4, #4]	@ unaligned
 7635 0994 A260     		str	r2, [r4, #8]	@ unaligned
 7636 0996 E360     		str	r3, [r4, #12]	@ unaligned
 7637 0998 3546     		mov	r5, r6
 7638 099a 1034     		adds	r4, r4, #16
 7639 099c BE42     		cmp	r6, r7
 7640 099e F5D1     		bne	.L429
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 265


 7641 09a0 03CD     		ldmia	r5!, {r0, r1}
 7642 09a2 2060     		str	r0, [r4]	@ unaligned
 7643 09a4 6160     		str	r1, [r4, #4]	@ unaligned
 7644 09a6 2B88     		ldrh	r3, [r5]	@ unaligned
 7645 09a8 2381     		strh	r3, [r4, #8]	@ unaligned
1139:Core/Src/main.c **** 				sprintf(msg, "RUN MOTORS REVERSE	- Run motors backward\r\n");
 7646              		.loc 1 1139 5 view .LVU1857
 7647 09aa 104C     		ldr	r4, .L480
 7648 09ac 2046     		mov	r0, r4
 7649 09ae FFF7FEFF 		bl	Serial_Console
 7650              	.LVL564:
1140:Core/Src/main.c **** 				Serial_Console(msg);
 7651              		.loc 1 1140 5 view .LVU1858
 7652 09b2 214D     		ldr	r5, .L480+76
 7653 09b4 05F12007 		add	r7, r5, #32
 7654              	.L430:
 7655 09b8 2E46     		mov	r6, r5
 7656 09ba 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7657 09bc 2060     		str	r0, [r4]	@ unaligned
 7658 09be 6160     		str	r1, [r4, #4]	@ unaligned
 7659 09c0 A260     		str	r2, [r4, #8]	@ unaligned
 7660 09c2 E360     		str	r3, [r4, #12]	@ unaligned
 7661 09c4 3546     		mov	r5, r6
 7662 09c6 1034     		adds	r4, r4, #16
 7663 09c8 BE42     		cmp	r6, r7
 7664 09ca F5D1     		bne	.L430
 7665 09cc 03CD     		ldmia	r5!, {r0, r1}
 7666 09ce 2060     		str	r0, [r4]	@ unaligned
 7667 09d0 6160     		str	r1, [r4, #4]	@ unaligned
 7668 09d2 2A88     		ldrh	r2, [r5]	@ unaligned
 7669 09d4 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7670 09d6 2281     		strh	r2, [r4, #8]	@ unaligned
 7671 09d8 A372     		strb	r3, [r4, #10]
1141:Core/Src/main.c **** 				sprintf(msg, "SET TIME		- Set current time for RTC\r\n");
 7672              		.loc 1 1141 5 view .LVU1859
 7673 09da 044C     		ldr	r4, .L480
 7674 09dc 2046     		mov	r0, r4
 7675 09de FFF7FEFF 		bl	Serial_Console
 7676              	.LVL565:
1142:Core/Src/main.c **** 				Serial_Console(msg);
 7677              		.loc 1 1142 5 view .LVU1860
 7678 09e2 164E     		ldr	r6, .L480+80
 7679 09e4 06F12007 		add	r7, r6, #32
 7680 09e8 2AE0     		b	.L481
 7681              	.L482:
 7682 09ea 00BF     		.align	2
 7683              	.L480:
 7684 09ec 00000000 		.word	msg
 7685 09f0 B4030000 		.word	.LC81
 7686 09f4 CC030000 		.word	.LC82
 7687 09f8 F4030000 		.word	.LC83
 7688 09fc 24040000 		.word	.LC84
 7689 0a00 54040000 		.word	.LC85
 7690 0a04 84040000 		.word	.LC86
 7691 0a08 B4040000 		.word	.LC87
 7692 0a0c E4040000 		.word	.LC88
 7693 0a10 14050000 		.word	.LC89
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 266


 7694 0a14 40050000 		.word	.LC90
 7695 0a18 68050000 		.word	.LC91
 7696 0a1c 9C050000 		.word	.LC92
 7697 0a20 E0050000 		.word	.LC93
 7698 0a24 14060000 		.word	.LC94
 7699 0a28 40060000 		.word	.LC95
 7700 0a2c 70060000 		.word	.LC96
 7701 0a30 A8060000 		.word	.LC97
 7702 0a34 CC060000 		.word	.LC98
 7703 0a38 F8060000 		.word	.LC99
 7704 0a3c 24070000 		.word	.LC100
 7705              	.L481:
 7706              	.L431:
 7707 0a40 3546     		mov	r5, r6
 7708 0a42 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7709 0a44 2060     		str	r0, [r4]	@ unaligned
 7710 0a46 6160     		str	r1, [r4, #4]	@ unaligned
 7711 0a48 A260     		str	r2, [r4, #8]	@ unaligned
 7712 0a4a E360     		str	r3, [r4, #12]	@ unaligned
 7713 0a4c 2E46     		mov	r6, r5
 7714 0a4e 1034     		adds	r4, r4, #16
 7715 0a50 BD42     		cmp	r5, r7
 7716 0a52 F5D1     		bne	.L431
 7717 0a54 2868     		ldr	r0, [r5]
 7718 0a56 2060     		str	r0, [r4]	@ unaligned
 7719 0a58 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 7720 0a5a AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 7721 0a5c A280     		strh	r2, [r4, #4]	@ unaligned
 7722 0a5e A371     		strb	r3, [r4, #6]
1143:Core/Src/main.c **** 				sprintf(msg, "SET DATE		- Set current date for RTC\r\n");
 7723              		.loc 1 1143 5 view .LVU1861
 7724 0a60 7C4C     		ldr	r4, .L483
 7725 0a62 2046     		mov	r0, r4
 7726 0a64 FFF7FEFF 		bl	Serial_Console
 7727              	.LVL566:
1144:Core/Src/main.c **** 				Serial_Console(msg);
 7728              		.loc 1 1144 5 view .LVU1862
 7729 0a68 7B4E     		ldr	r6, .L483+4
 7730 0a6a 06F12007 		add	r7, r6, #32
 7731              	.L432:
 7732 0a6e 3546     		mov	r5, r6
 7733 0a70 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7734 0a72 2060     		str	r0, [r4]	@ unaligned
 7735 0a74 6160     		str	r1, [r4, #4]	@ unaligned
 7736 0a76 A260     		str	r2, [r4, #8]	@ unaligned
 7737 0a78 E360     		str	r3, [r4, #12]	@ unaligned
 7738 0a7a 2E46     		mov	r6, r5
 7739 0a7c 1034     		adds	r4, r4, #16
 7740 0a7e BD42     		cmp	r5, r7
 7741 0a80 F5D1     		bne	.L432
 7742 0a82 2868     		ldr	r0, [r5]
 7743 0a84 2060     		str	r0, [r4]	@ unaligned
 7744 0a86 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 7745 0a88 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 7746 0a8a A280     		strh	r2, [r4, #4]	@ unaligned
 7747 0a8c A371     		strb	r3, [r4, #6]
1145:Core/Src/main.c **** 				sprintf(msg, "			Date must be set in a special order:\r\n");
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 267


 7748              		.loc 1 1145 5 view .LVU1863
 7749 0a8e 714C     		ldr	r4, .L483
 7750 0a90 2046     		mov	r0, r4
 7751 0a92 FFF7FEFF 		bl	Serial_Console
 7752              	.LVL567:
1146:Core/Src/main.c **** 				Serial_Console(msg);
 7753              		.loc 1 1146 5 view .LVU1864
 7754 0a96 714E     		ldr	r6, .L483+8
 7755 0a98 06F12007 		add	r7, r6, #32
 7756              	.L433:
 7757 0a9c 3546     		mov	r5, r6
 7758 0a9e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7759 0aa0 2060     		str	r0, [r4]	@ unaligned
 7760 0aa2 6160     		str	r1, [r4, #4]	@ unaligned
 7761 0aa4 A260     		str	r2, [r4, #8]	@ unaligned
 7762 0aa6 E360     		str	r3, [r4, #12]	@ unaligned
 7763 0aa8 2E46     		mov	r6, r5
 7764 0aaa 1034     		adds	r4, r4, #16
 7765 0aac BD42     		cmp	r5, r7
 7766 0aae F5D1     		bne	.L433
 7767 0ab0 03CE     		ldmia	r6!, {r0, r1}
 7768 0ab2 2060     		str	r0, [r4]	@ unaligned
 7769 0ab4 6160     		str	r1, [r4, #4]	@ unaligned
 7770 0ab6 3388     		ldrh	r3, [r6]	@ unaligned
 7771 0ab8 2381     		strh	r3, [r4, #8]	@ unaligned
1147:Core/Src/main.c **** 				sprintf(msg, "			Year Month Day Weekday -> 21 3 31 2 (2 = Wednesday)\r\n");
 7772              		.loc 1 1147 5 view .LVU1865
 7773 0aba 664C     		ldr	r4, .L483
 7774 0abc 2046     		mov	r0, r4
 7775 0abe FFF7FEFF 		bl	Serial_Console
 7776              	.LVL568:
1148:Core/Src/main.c **** 				Serial_Console(msg);
 7777              		.loc 1 1148 5 view .LVU1866
 7778 0ac2 674E     		ldr	r6, .L483+12
 7779 0ac4 06F13007 		add	r7, r6, #48
 7780              	.L434:
 7781 0ac8 3546     		mov	r5, r6
 7782 0aca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7783 0acc 2060     		str	r0, [r4]	@ unaligned
 7784 0ace 6160     		str	r1, [r4, #4]	@ unaligned
 7785 0ad0 A260     		str	r2, [r4, #8]	@ unaligned
 7786 0ad2 E360     		str	r3, [r4, #12]	@ unaligned
 7787 0ad4 2E46     		mov	r6, r5
 7788 0ad6 1034     		adds	r4, r4, #16
 7789 0ad8 BD42     		cmp	r5, r7
 7790 0ada F5D1     		bne	.L434
 7791 0adc 03CE     		ldmia	r6!, {r0, r1}
 7792 0ade 2060     		str	r0, [r4]	@ unaligned
 7793 0ae0 6160     		str	r1, [r4, #4]	@ unaligned
 7794 0ae2 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 7795 0ae4 2372     		strb	r3, [r4, #8]
1149:Core/Src/main.c **** 				sprintf(msg, "TRACK PERIMETER 	- Track perimeter next time it crosses\r\n");
 7796              		.loc 1 1149 5 view .LVU1867
 7797 0ae6 5B4C     		ldr	r4, .L483
 7798 0ae8 2046     		mov	r0, r4
 7799 0aea FFF7FEFF 		bl	Serial_Console
 7800              	.LVL569:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 268


1150:Core/Src/main.c **** 				Serial_Console(msg);
 7801              		.loc 1 1150 5 view .LVU1868
 7802 0aee 5D4E     		ldr	r6, .L483+16
 7803 0af0 06F13007 		add	r7, r6, #48
 7804              	.L435:
 7805 0af4 3546     		mov	r5, r6
 7806 0af6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7807 0af8 2060     		str	r0, [r4]	@ unaligned
 7808 0afa 6160     		str	r1, [r4, #4]	@ unaligned
 7809 0afc A260     		str	r2, [r4, #8]	@ unaligned
 7810 0afe E360     		str	r3, [r4, #12]	@ unaligned
 7811 0b00 2E46     		mov	r6, r5
 7812 0b02 1034     		adds	r4, r4, #16
 7813 0b04 BD42     		cmp	r5, r7
 7814 0b06 F5D1     		bne	.L435
 7815 0b08 03CE     		ldmia	r6!, {r0, r1}
 7816 0b0a 2060     		str	r0, [r4]	@ unaligned
 7817 0b0c 6160     		str	r1, [r4, #4]	@ unaligned
 7818 0b0e 3388     		ldrh	r3, [r6]	@ unaligned
 7819 0b10 2381     		strh	r3, [r4, #8]	@ unaligned
1151:Core/Src/main.c **** 				sprintf(msg, "SET KP			- PID Controller KP for Perimeter Tracking\r\n");
 7820              		.loc 1 1151 5 view .LVU1869
 7821 0b12 504C     		ldr	r4, .L483
 7822 0b14 2046     		mov	r0, r4
 7823 0b16 FFF7FEFF 		bl	Serial_Console
 7824              	.LVL570:
1152:Core/Src/main.c **** 				Serial_Console(msg);
 7825              		.loc 1 1152 5 view .LVU1870
 7826 0b1a 534E     		ldr	r6, .L483+20
 7827 0b1c 06F13007 		add	r7, r6, #48
 7828              	.L436:
 7829 0b20 3546     		mov	r5, r6
 7830 0b22 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7831 0b24 2060     		str	r0, [r4]	@ unaligned
 7832 0b26 6160     		str	r1, [r4, #4]	@ unaligned
 7833 0b28 A260     		str	r2, [r4, #8]	@ unaligned
 7834 0b2a E360     		str	r3, [r4, #12]	@ unaligned
 7835 0b2c 2E46     		mov	r6, r5
 7836 0b2e 1034     		adds	r4, r4, #16
 7837 0b30 BD42     		cmp	r5, r7
 7838 0b32 F5D1     		bne	.L436
 7839 0b34 2868     		ldr	r0, [r5]
 7840 0b36 2060     		str	r0, [r4]	@ unaligned
 7841 0b38 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 7842 0b3a A380     		strh	r3, [r4, #4]	@ unaligned
1153:Core/Src/main.c **** 				sprintf(msg, "SET KI			- PID Controller KI for Perimeter Tracking\r\n");
 7843              		.loc 1 1153 5 view .LVU1871
 7844 0b3c 454C     		ldr	r4, .L483
 7845 0b3e 2046     		mov	r0, r4
 7846 0b40 FFF7FEFF 		bl	Serial_Console
 7847              	.LVL571:
1154:Core/Src/main.c **** 				Serial_Console(msg);
 7848              		.loc 1 1154 5 view .LVU1872
 7849 0b44 494E     		ldr	r6, .L483+24
 7850 0b46 06F13007 		add	r7, r6, #48
 7851              	.L437:
 7852 0b4a 3546     		mov	r5, r6
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 269


 7853 0b4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7854 0b4e 2060     		str	r0, [r4]	@ unaligned
 7855 0b50 6160     		str	r1, [r4, #4]	@ unaligned
 7856 0b52 A260     		str	r2, [r4, #8]	@ unaligned
 7857 0b54 E360     		str	r3, [r4, #12]	@ unaligned
 7858 0b56 2E46     		mov	r6, r5
 7859 0b58 1034     		adds	r4, r4, #16
 7860 0b5a BD42     		cmp	r5, r7
 7861 0b5c F5D1     		bne	.L437
 7862 0b5e 2868     		ldr	r0, [r5]
 7863 0b60 2060     		str	r0, [r4]	@ unaligned
 7864 0b62 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 7865 0b64 A380     		strh	r3, [r4, #4]	@ unaligned
1155:Core/Src/main.c **** 				sprintf(msg, "SET KD			- PID Controller KD for Perimeter Tracking\r\n");
 7866              		.loc 1 1155 5 view .LVU1873
 7867 0b66 3B4C     		ldr	r4, .L483
 7868 0b68 2046     		mov	r0, r4
 7869 0b6a FFF7FEFF 		bl	Serial_Console
 7870              	.LVL572:
1156:Core/Src/main.c **** 				Serial_Console(msg);
 7871              		.loc 1 1156 5 view .LVU1874
 7872 0b6e 404E     		ldr	r6, .L483+28
 7873 0b70 06F13007 		add	r7, r6, #48
 7874              	.L438:
 7875 0b74 3546     		mov	r5, r6
 7876 0b76 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7877 0b78 2060     		str	r0, [r4]	@ unaligned
 7878 0b7a 6160     		str	r1, [r4, #4]	@ unaligned
 7879 0b7c A260     		str	r2, [r4, #8]	@ unaligned
 7880 0b7e E360     		str	r3, [r4, #12]	@ unaligned
 7881 0b80 2E46     		mov	r6, r5
 7882 0b82 1034     		adds	r4, r4, #16
 7883 0b84 BD42     		cmp	r5, r7
 7884 0b86 F5D1     		bne	.L438
 7885 0b88 2868     		ldr	r0, [r5]
 7886 0b8a 2060     		str	r0, [r4]	@ unaligned
 7887 0b8c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 7888 0b8e A380     		strh	r3, [r4, #4]	@ unaligned
1157:Core/Src/main.c **** 				sprintf(msg, "SHOW PID TRACKING	- Export current settings for tracking PID\r\n");
 7889              		.loc 1 1157 5 view .LVU1875
 7890 0b90 304C     		ldr	r4, .L483
 7891 0b92 2046     		mov	r0, r4
 7892 0b94 FFF7FEFF 		bl	Serial_Console
 7893              	.LVL573:
1158:Core/Src/main.c **** 				Serial_Console(msg);
 7894              		.loc 1 1158 5 view .LVU1876
 7895 0b98 364D     		ldr	r5, .L483+32
 7896 0b9a 05F13007 		add	r7, r5, #48
 7897              	.L439:
 7898 0b9e 2E46     		mov	r6, r5
 7899 0ba0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7900 0ba2 2060     		str	r0, [r4]	@ unaligned
 7901 0ba4 6160     		str	r1, [r4, #4]	@ unaligned
 7902 0ba6 A260     		str	r2, [r4, #8]	@ unaligned
 7903 0ba8 E360     		str	r3, [r4, #12]	@ unaligned
 7904 0baa 3546     		mov	r5, r6
 7905 0bac 1034     		adds	r4, r4, #16
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 270


 7906 0bae BE42     		cmp	r6, r7
 7907 0bb0 F5D1     		bne	.L439
 7908 0bb2 07CD     		ldmia	r5!, {r0, r1, r2}
 7909 0bb4 2060     		str	r0, [r4]	@ unaligned
 7910 0bb6 6160     		str	r1, [r4, #4]	@ unaligned
 7911 0bb8 A260     		str	r2, [r4, #8]	@ unaligned
 7912 0bba 2A88     		ldrh	r2, [r5]	@ unaligned
 7913 0bbc AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7914 0bbe A281     		strh	r2, [r4, #12]	@ unaligned
 7915 0bc0 A373     		strb	r3, [r4, #14]
1159:Core/Src/main.c **** 				sprintf(msg, "SET WORKING START	- Set Working Hour START\r\n");
 7916              		.loc 1 1159 5 view .LVU1877
 7917 0bc2 244C     		ldr	r4, .L483
 7918 0bc4 2046     		mov	r0, r4
 7919 0bc6 FFF7FEFF 		bl	Serial_Console
 7920              	.LVL574:
1160:Core/Src/main.c **** 				Serial_Console(msg);
 7921              		.loc 1 1160 5 view .LVU1878
 7922 0bca 2B4D     		ldr	r5, .L483+36
 7923 0bcc 05F12007 		add	r7, r5, #32
 7924              	.L440:
 7925 0bd0 2E46     		mov	r6, r5
 7926 0bd2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7927 0bd4 2060     		str	r0, [r4]	@ unaligned
 7928 0bd6 6160     		str	r1, [r4, #4]	@ unaligned
 7929 0bd8 A260     		str	r2, [r4, #8]	@ unaligned
 7930 0bda E360     		str	r3, [r4, #12]	@ unaligned
 7931 0bdc 3546     		mov	r5, r6
 7932 0bde 1034     		adds	r4, r4, #16
 7933 0be0 BE42     		cmp	r6, r7
 7934 0be2 F5D1     		bne	.L440
 7935 0be4 07CD     		ldmia	r5!, {r0, r1, r2}
 7936 0be6 2060     		str	r0, [r4]	@ unaligned
 7937 0be8 6160     		str	r1, [r4, #4]	@ unaligned
 7938 0bea A260     		str	r2, [r4, #8]	@ unaligned
 7939 0bec 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7940 0bee 2373     		strb	r3, [r4, #12]
1161:Core/Src/main.c **** 				sprintf(msg, "SET WORKING END   - Set Working Hour END\r\n");
 7941              		.loc 1 1161 5 view .LVU1879
 7942 0bf0 184C     		ldr	r4, .L483
 7943 0bf2 2046     		mov	r0, r4
 7944 0bf4 FFF7FEFF 		bl	Serial_Console
 7945              	.LVL575:
1162:Core/Src/main.c **** 				Serial_Console(msg);
 7946              		.loc 1 1162 5 view .LVU1880
 7947 0bf8 204D     		ldr	r5, .L483+40
 7948 0bfa 05F12007 		add	r7, r5, #32
 7949              	.L441:
 7950 0bfe 2E46     		mov	r6, r5
 7951 0c00 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7952 0c02 2060     		str	r0, [r4]	@ unaligned
 7953 0c04 6160     		str	r1, [r4, #4]	@ unaligned
 7954 0c06 A260     		str	r2, [r4, #8]	@ unaligned
 7955 0c08 E360     		str	r3, [r4, #12]	@ unaligned
 7956 0c0a 3546     		mov	r5, r6
 7957 0c0c 1034     		adds	r4, r4, #16
 7958 0c0e BE42     		cmp	r6, r7
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 271


 7959 0c10 F5D1     		bne	.L441
 7960 0c12 03CD     		ldmia	r5!, {r0, r1}
 7961 0c14 2060     		str	r0, [r4]	@ unaligned
 7962 0c16 6160     		str	r1, [r4, #4]	@ unaligned
 7963 0c18 2A88     		ldrh	r2, [r5]	@ unaligned
 7964 0c1a AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 7965 0c1c 2281     		strh	r2, [r4, #8]	@ unaligned
 7966 0c1e A372     		strb	r3, [r4, #10]
1163:Core/Src/main.c **** 				sprintf(msg, "SHOW WORKINGHOURS	- Show current set working hours\r\n");
 7967              		.loc 1 1163 5 view .LVU1881
 7968 0c20 0C4C     		ldr	r4, .L483
 7969 0c22 2046     		mov	r0, r4
 7970 0c24 FFF7FEFF 		bl	Serial_Console
 7971              	.LVL576:
1164:Core/Src/main.c **** 				Serial_Console(msg);
 7972              		.loc 1 1164 5 view .LVU1882
 7973 0c28 154E     		ldr	r6, .L483+44
 7974 0c2a 06F13007 		add	r7, r6, #48
 7975              	.L442:
 7976 0c2e 3546     		mov	r5, r6
 7977 0c30 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7978 0c32 2060     		str	r0, [r4]	@ unaligned
 7979 0c34 6160     		str	r1, [r4, #4]	@ unaligned
 7980 0c36 A260     		str	r2, [r4, #8]	@ unaligned
 7981 0c38 E360     		str	r3, [r4, #12]	@ unaligned
 7982 0c3a 2E46     		mov	r6, r5
 7983 0c3c 1034     		adds	r4, r4, #16
 7984 0c3e BD42     		cmp	r5, r7
 7985 0c40 F5D1     		bne	.L442
 7986 0c42 2868     		ldr	r0, [r5]
 7987 0c44 2060     		str	r0, [r4]	@ unaligned
 7988 0c46 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 7989 0c48 2371     		strb	r3, [r4, #4]
1165:Core/Src/main.c **** 			}
 7990              		.loc 1 1165 5 view .LVU1883
 7991 0c4a 0248     		ldr	r0, .L483
 7992 0c4c FFF7FEFF 		bl	Serial_Console
 7993              	.LVL577:
 7994 0c50 FFF7FCBA 		b	.L413
 7995              	.L484:
 7996              		.align	2
 7997              	.L483:
 7998 0c54 00000000 		.word	msg
 7999 0c58 4C070000 		.word	.LC101
 8000 0c5c 74070000 		.word	.LC102
 8001 0c60 A0070000 		.word	.LC103
 8002 0c64 DC070000 		.word	.LC104
 8003 0c68 18080000 		.word	.LC105
 8004 0c6c 50080000 		.word	.LC106
 8005 0c70 88080000 		.word	.LC107
 8006 0c74 C0080000 		.word	.LC108
 8007 0c78 00090000 		.word	.LC109
 8008 0c7c 30090000 		.word	.LC110
 8009 0c80 5C090000 		.word	.LC111
 8010              	.LBE99:
 8011              		.cfi_endproc
 8012              	.LFE294:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 272


 8014              		.section	.text.WatchdogRefresh,"ax",%progbits
 8015              		.align	1
 8016              		.syntax unified
 8017              		.thumb
 8018              		.thumb_func
 8019              		.fpu fpv4-sp-d16
 8021              	WatchdogRefresh:
 8022              	.LFB276:
 412:Core/Src/main.c **** 
 8023              		.loc 1 412 28 view -0
 8024              		.cfi_startproc
 8025              		@ args = 0, pretend = 0, frame = 0
 8026              		@ frame_needed = 0, uses_anonymous_args = 0
 8027 0000 08B5     		push	{r3, lr}
 8028              	.LCFI74:
 8029              		.cfi_def_cfa_offset 8
 8030              		.cfi_offset 3, -8
 8031              		.cfi_offset 14, -4
 416:Core/Src/main.c **** }
 8032              		.loc 1 416 5 view .LVU1885
 8033 0002 0248     		ldr	r0, .L487
 8034 0004 FFF7FEFF 		bl	HAL_IWDG_Refresh
 8035              	.LVL578:
 417:Core/Src/main.c **** 
 8036              		.loc 1 417 1 is_stmt 0 view .LVU1886
 8037 0008 08BD     		pop	{r3, pc}
 8038              	.L488:
 8039 000a 00BF     		.align	2
 8040              	.L487:
 8041 000c 00000000 		.word	hiwdg
 8042              		.cfi_endproc
 8043              	.LFE276:
 8045              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 8046              		.align	1
 8047              		.global	HAL_TIM_PeriodElapsedCallback
 8048              		.syntax unified
 8049              		.thumb
 8050              		.thumb_func
 8051              		.fpu fpv4-sp-d16
 8053              	HAL_TIM_PeriodElapsedCallback:
 8054              	.LVL579:
 8055              	.LFB331:
2626:Core/Src/main.c **** 
2627:Core/Src/main.c **** /* USER CODE BEGIN 4 */
2628:Core/Src/main.c **** 
2629:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
2630:Core/Src/main.c **** {
 8056              		.loc 1 2630 1 is_stmt 1 view -0
 8057              		.cfi_startproc
 8058              		@ args = 0, pretend = 0, frame = 0
 8059              		@ frame_needed = 0, uses_anonymous_args = 0
 8060              		.loc 1 2630 1 is_stmt 0 view .LVU1888
 8061 0000 08B5     		push	{r3, lr}
 8062              	.LCFI75:
 8063              		.cfi_def_cfa_offset 8
 8064              		.cfi_offset 3, -8
 8065              		.cfi_offset 14, -4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 273


2631:Core/Src/main.c **** 
2632:Core/Src/main.c **** 	WatchdogRefresh();		// STM32 Watchdog - NEVER DISABLE THIS (for safety!)
 8066              		.loc 1 2632 2 is_stmt 1 view .LVU1889
 8067 0002 FFF7FEFF 		bl	WatchdogRefresh
 8068              	.LVL580:
2633:Core/Src/main.c **** 	SendInfoStatus = 1;		// Ready to send Serial Console info
 8069              		.loc 1 2633 2 view .LVU1890
 8070              		.loc 1 2633 17 is_stmt 0 view .LVU1891
 8071 0006 024B     		ldr	r3, .L491
 8072 0008 0122     		movs	r2, #1
 8073 000a 1A70     		strb	r2, [r3]
2634:Core/Src/main.c **** 
2635:Core/Src/main.c **** }
 8074              		.loc 1 2635 1 view .LVU1892
 8075 000c 08BD     		pop	{r3, pc}
 8076              	.L492:
 8077 000e 00BF     		.align	2
 8078              	.L491:
 8079 0010 00000000 		.word	.LANCHOR60
 8080              		.cfi_endproc
 8081              	.LFE331:
 8083              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 8084              		.align	1
 8085              		.global	HAL_ADC_ConvCpltCallback
 8086              		.syntax unified
 8087              		.thumb
 8088              		.thumb_func
 8089              		.fpu fpv4-sp-d16
 8091              	HAL_ADC_ConvCpltCallback:
 8092              	.LVL581:
 8093              	.LFB332:
2636:Core/Src/main.c **** 
2637:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 8094              		.loc 1 2637 56 is_stmt 1 view -0
 8095              		.cfi_startproc
 8096              		@ args = 0, pretend = 0, frame = 0
 8097              		@ frame_needed = 0, uses_anonymous_args = 0
 8098              		@ link register save eliminated.
2638:Core/Src/main.c **** 
2639:Core/Src/main.c **** }
 8099              		.loc 1 2639 1 view .LVU1894
 8100 0000 7047     		bx	lr
 8101              		.cfi_endproc
 8102              	.LFE332:
 8104              		.section	.text.HAL_UART_RxCpltCallback_UART1,"ax",%progbits
 8105              		.align	1
 8106              		.global	HAL_UART_RxCpltCallback_UART1
 8107              		.syntax unified
 8108              		.thumb
 8109              		.thumb_func
 8110              		.fpu fpv4-sp-d16
 8112              	HAL_UART_RxCpltCallback_UART1:
 8113              	.LVL582:
 8114              	.LFB333:
2640:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART1(UART_HandleTypeDef *huart) {
 8115              		.loc 1 2640 63 view -0
 8116              		.cfi_startproc
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 274


 8117              		@ args = 0, pretend = 0, frame = 8
 8118              		@ frame_needed = 0, uses_anonymous_args = 0
2641:Core/Src/main.c **** 	// UART Rx Complete Callback;
2642:Core/Src/main.c **** 	// Rx Complete is called by: DMA (automatically), if it rolls over
2643:Core/Src/main.c **** 	// and when an IDLE Interrupt occurs
2644:Core/Src/main.c **** 	// DMA Interrupt allays occurs BEFORE the idle interrupt can be fired because
2645:Core/Src/main.c **** 	// idle detection needs at least one UART clock to detect the bus is idle. So
2646:Core/Src/main.c **** 	// in the case, that the transmission length is one full buffer length
2647:Core/Src/main.c **** 	// and the start buffer pointer is at 0, it will be also 0 at the end of the
2648:Core/Src/main.c **** 	// transmission. In this case the DMA rollover will increment the RxRollover
2649:Core/Src/main.c **** 	// variable first and len will not be zero.
2650:Core/Src/main.c **** 
2651:Core/Src/main.c **** 	if(__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE)) {					// Check if it is an "Idle Interrupt"
 8119              		.loc 1 2651 2 view .LVU1896
 8120              		.loc 1 2651 5 is_stmt 0 view .LVU1897
 8121 0000 0368     		ldr	r3, [r0]
 8122 0002 1B68     		ldr	r3, [r3]
 8123              		.loc 1 2651 4 view .LVU1898
 8124 0004 13F0100F 		tst	r3, #16
 8125 0008 00D1     		bne	.L500
 8126 000a 7047     		bx	lr
 8127              	.L500:
2640:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART1(UART_HandleTypeDef *huart) {
 8128              		.loc 1 2640 63 view .LVU1899
 8129 000c 00B5     		push	{lr}
 8130              	.LCFI76:
 8131              		.cfi_def_cfa_offset 4
 8132              		.cfi_offset 14, -4
 8133 000e 83B0     		sub	sp, sp, #12
 8134              	.LCFI77:
 8135              		.cfi_def_cfa_offset 16
2652:Core/Src/main.c **** 		__HAL_UART_CLEAR_IDLEFLAG(&huart1);								// clear the interrupt
 8136              		.loc 1 2652 3 is_stmt 1 view .LVU1900
 8137              	.LBB100:
 8138              		.loc 1 2652 3 view .LVU1901
 8139 0010 0023     		movs	r3, #0
 8140 0012 0193     		str	r3, [sp, #4]
 8141              		.loc 1 2652 3 view .LVU1902
 8142 0014 0748     		ldr	r0, .L501
 8143              	.LVL583:
 8144              		.loc 1 2652 3 is_stmt 0 view .LVU1903
 8145 0016 0368     		ldr	r3, [r0]
 8146 0018 1A68     		ldr	r2, [r3]
 8147 001a 0192     		str	r2, [sp, #4]
 8148              		.loc 1 2652 3 is_stmt 1 view .LVU1904
 8149 001c 5B68     		ldr	r3, [r3, #4]
 8150 001e 0193     		str	r3, [sp, #4]
 8151              		.loc 1 2652 3 view .LVU1905
 8152 0020 019B     		ldr	r3, [sp, #4]
 8153              	.LBE100:
 8154              		.loc 1 2652 3 view .LVU1906
2653:Core/Src/main.c **** 		HAL_UART_DMAStop(&huart1);
 8155              		.loc 1 2653 3 view .LVU1907
 8156 0022 FFF7FEFF 		bl	HAL_UART_DMAStop
 8157              	.LVL584:
2654:Core/Src/main.c **** 		UART1_ready = 1;												// Serial Console data is now ready to be processed
 8158              		.loc 1 2654 3 view .LVU1908
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 275


 8159              		.loc 1 2654 15 is_stmt 0 view .LVU1909
 8160 0026 044B     		ldr	r3, .L501+4
 8161 0028 0122     		movs	r2, #1
 8162 002a 1A70     		strb	r2, [r3]
2655:Core/Src/main.c **** 
2656:Core/Src/main.c **** 	}
2657:Core/Src/main.c **** 
2658:Core/Src/main.c **** }
 8163              		.loc 1 2658 1 view .LVU1910
 8164 002c 03B0     		add	sp, sp, #12
 8165              	.LCFI78:
 8166              		.cfi_def_cfa_offset 4
 8167              		@ sp needed
 8168 002e 5DF804FB 		ldr	pc, [sp], #4
 8169              	.L502:
 8170 0032 00BF     		.align	2
 8171              	.L501:
 8172 0034 00000000 		.word	huart1
 8173 0038 00000000 		.word	.LANCHOR78
 8174              		.cfi_endproc
 8175              	.LFE333:
 8177              		.section	.text.HAL_UART_RxCpltCallback_UART2,"ax",%progbits
 8178              		.align	1
 8179              		.global	HAL_UART_RxCpltCallback_UART2
 8180              		.syntax unified
 8181              		.thumb
 8182              		.thumb_func
 8183              		.fpu fpv4-sp-d16
 8185              	HAL_UART_RxCpltCallback_UART2:
 8186              	.LVL585:
 8187              	.LFB334:
2659:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART2(UART_HandleTypeDef *huart) {
 8188              		.loc 1 2659 63 is_stmt 1 view -0
 8189              		.cfi_startproc
 8190              		@ args = 0, pretend = 0, frame = 8
 8191              		@ frame_needed = 0, uses_anonymous_args = 0
2660:Core/Src/main.c **** 	// UART Rx Complete Callback;
2661:Core/Src/main.c **** 	// Rx Complete is called by: DMA (automatically), if it rolls over
2662:Core/Src/main.c **** 	// and when an IDLE Interrupt occurs
2663:Core/Src/main.c **** 	// DMA Interrupt allays occurs BEFORE the idle interrupt can be fired because
2664:Core/Src/main.c **** 	// idle detection needs at least one UART clock to detect the bus is idle. So
2665:Core/Src/main.c **** 	// in the case, that the transmission length is one full buffer length
2666:Core/Src/main.c **** 	// and the start buffer pointer is at 0, it will be also 0 at the end of the
2667:Core/Src/main.c **** 	// transmission. In this case the DMA rollover will increment the RxRollover
2668:Core/Src/main.c **** 	// variable first and len will not be zero.
2669:Core/Src/main.c **** 
2670:Core/Src/main.c **** 	if(__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE)) {					// Check if it is an "Idle Interrupt"
 8192              		.loc 1 2670 2 view .LVU1912
 8193              		.loc 1 2670 5 is_stmt 0 view .LVU1913
 8194 0000 0368     		ldr	r3, [r0]
 8195 0002 1B68     		ldr	r3, [r3]
 8196              		.loc 1 2670 4 view .LVU1914
 8197 0004 13F0100F 		tst	r3, #16
 8198 0008 00D1     		bne	.L509
 8199 000a 7047     		bx	lr
 8200              	.L509:
2659:Core/Src/main.c **** void HAL_UART_RxCpltCallback_UART2(UART_HandleTypeDef *huart) {
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 276


 8201              		.loc 1 2659 63 view .LVU1915
 8202 000c 00B5     		push	{lr}
 8203              	.LCFI79:
 8204              		.cfi_def_cfa_offset 4
 8205              		.cfi_offset 14, -4
 8206 000e 83B0     		sub	sp, sp, #12
 8207              	.LCFI80:
 8208              		.cfi_def_cfa_offset 16
2671:Core/Src/main.c **** 		__HAL_UART_CLEAR_IDLEFLAG(&huart2);								// clear the interrupt
 8209              		.loc 1 2671 3 is_stmt 1 view .LVU1916
 8210              	.LBB101:
 8211              		.loc 1 2671 3 view .LVU1917
 8212 0010 0023     		movs	r3, #0
 8213 0012 0193     		str	r3, [sp, #4]
 8214              		.loc 1 2671 3 view .LVU1918
 8215 0014 0748     		ldr	r0, .L510
 8216              	.LVL586:
 8217              		.loc 1 2671 3 is_stmt 0 view .LVU1919
 8218 0016 0368     		ldr	r3, [r0]
 8219 0018 1A68     		ldr	r2, [r3]
 8220 001a 0192     		str	r2, [sp, #4]
 8221              		.loc 1 2671 3 is_stmt 1 view .LVU1920
 8222 001c 5B68     		ldr	r3, [r3, #4]
 8223 001e 0193     		str	r3, [sp, #4]
 8224              		.loc 1 2671 3 view .LVU1921
 8225 0020 019B     		ldr	r3, [sp, #4]
 8226              	.LBE101:
 8227              		.loc 1 2671 3 view .LVU1922
2672:Core/Src/main.c **** 		HAL_UART_DMAStop(&huart2);
 8228              		.loc 1 2672 3 view .LVU1923
 8229 0022 FFF7FEFF 		bl	HAL_UART_DMAStop
 8230              	.LVL587:
2673:Core/Src/main.c **** 		UART2_ready = 1;												// // Raspberry Pi data is now ready to be processed
 8231              		.loc 1 2673 3 view .LVU1924
 8232              		.loc 1 2673 15 is_stmt 0 view .LVU1925
 8233 0026 044B     		ldr	r3, .L510+4
 8234 0028 0122     		movs	r2, #1
 8235 002a 1A70     		strb	r2, [r3]
2674:Core/Src/main.c **** 
2675:Core/Src/main.c **** 	}
2676:Core/Src/main.c **** 
2677:Core/Src/main.c **** }
 8236              		.loc 1 2677 1 view .LVU1926
 8237 002c 03B0     		add	sp, sp, #12
 8238              	.LCFI81:
 8239              		.cfi_def_cfa_offset 4
 8240              		@ sp needed
 8241 002e 5DF804FB 		ldr	pc, [sp], #4
 8242              	.L511:
 8243 0032 00BF     		.align	2
 8244              	.L510:
 8245 0034 00000000 		.word	huart2
 8246 0038 00000000 		.word	.LANCHOR75
 8247              		.cfi_endproc
 8248              	.LFE334:
 8250              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 8251              		.align	1
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 277


 8252              		.global	HAL_UART_TxCpltCallback
 8253              		.syntax unified
 8254              		.thumb
 8255              		.thumb_func
 8256              		.fpu fpv4-sp-d16
 8258              	HAL_UART_TxCpltCallback:
 8259              	.LVL588:
 8260              	.LFB335:
2678:Core/Src/main.c **** 
2679:Core/Src/main.c **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 8261              		.loc 1 2679 57 is_stmt 1 view -0
 8262              		.cfi_startproc
 8263              		@ args = 0, pretend = 0, frame = 0
 8264              		@ frame_needed = 0, uses_anonymous_args = 0
 8265              		@ link register save eliminated.
2680:Core/Src/main.c **** 	// UART Tx Complete Callback;
2681:Core/Src/main.c **** 
2682:Core/Src/main.c **** }
 8266              		.loc 1 2682 1 view .LVU1928
 8267 0000 7047     		bx	lr
 8268              		.cfi_endproc
 8269              	.LFE335:
 8271              		.section	.text.Error_Handler,"ax",%progbits
 8272              		.align	1
 8273              		.global	Error_Handler
 8274              		.syntax unified
 8275              		.thumb
 8276              		.thumb_func
 8277              		.fpu fpv4-sp-d16
 8279              	Error_Handler:
 8280              	.LFB336:
2683:Core/Src/main.c **** 
2684:Core/Src/main.c **** /* USER CODE END 4 */
2685:Core/Src/main.c **** 
2686:Core/Src/main.c **** /**
2687:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
2688:Core/Src/main.c ****   * @retval None
2689:Core/Src/main.c ****   */
2690:Core/Src/main.c **** void Error_Handler(void)
2691:Core/Src/main.c **** {
 8281              		.loc 1 2691 1 view -0
 8282              		.cfi_startproc
 8283              		@ Volatile: function does not return.
 8284              		@ args = 0, pretend = 0, frame = 0
 8285              		@ frame_needed = 0, uses_anonymous_args = 0
 8286              		@ link register save eliminated.
2692:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
2693:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
2694:Core/Src/main.c ****   __disable_irq();
 8287              		.loc 1 2694 3 view .LVU1930
 8288              	.LBB102:
 8289              	.LBI102:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 8290              		.loc 2 140 27 view .LVU1931
 8291              	.LBB103:
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8292              		.loc 2 142 3 view .LVU1932
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 278


 8293              		.syntax unified
 8294              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8295 0000 72B6     		cpsid i
 8296              	@ 0 "" 2
 8297              		.thumb
 8298              		.syntax unified
 8299              	.L514:
 8300              	.LBE103:
 8301              	.LBE102:
2695:Core/Src/main.c ****   while (1)
 8302              		.loc 1 2695 3 discriminator 1 view .LVU1933
2696:Core/Src/main.c ****   {
2697:Core/Src/main.c ****   }
 8303              		.loc 1 2697 3 discriminator 1 view .LVU1934
2695:Core/Src/main.c ****   while (1)
 8304              		.loc 1 2695 9 discriminator 1 view .LVU1935
 8305 0002 FEE7     		b	.L514
 8306              		.cfi_endproc
 8307              	.LFE336:
 8309              		.section	.text.MX_ADC1_Init,"ax",%progbits
 8310              		.align	1
 8311              		.syntax unified
 8312              		.thumb
 8313              		.thumb_func
 8314              		.fpu fpv4-sp-d16
 8316              	MX_ADC1_Init:
 8317              	.LFB317:
2062:Core/Src/main.c **** 
 8318              		.loc 1 2062 1 view -0
 8319              		.cfi_startproc
 8320              		@ args = 0, pretend = 0, frame = 16
 8321              		@ frame_needed = 0, uses_anonymous_args = 0
 8322 0000 00B5     		push	{lr}
 8323              	.LCFI82:
 8324              		.cfi_def_cfa_offset 4
 8325              		.cfi_offset 14, -4
 8326 0002 85B0     		sub	sp, sp, #20
 8327              	.LCFI83:
 8328              		.cfi_def_cfa_offset 24
2068:Core/Src/main.c **** 
 8329              		.loc 1 2068 3 view .LVU1937
2068:Core/Src/main.c **** 
 8330              		.loc 1 2068 26 is_stmt 0 view .LVU1938
 8331 0004 0023     		movs	r3, #0
 8332 0006 0093     		str	r3, [sp]
 8333 0008 0193     		str	r3, [sp, #4]
 8334 000a 0293     		str	r3, [sp, #8]
 8335 000c 0393     		str	r3, [sp, #12]
2075:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8336              		.loc 1 2075 3 is_stmt 1 view .LVU1939
2075:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8337              		.loc 1 2075 18 is_stmt 0 view .LVU1940
 8338 000e 1A48     		ldr	r0, .L523
 8339 0010 1A4A     		ldr	r2, .L523+4
 8340 0012 0260     		str	r2, [r0]
2076:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8341              		.loc 1 2076 3 is_stmt 1 view .LVU1941
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 279


2076:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8342              		.loc 1 2076 29 is_stmt 0 view .LVU1942
 8343 0014 4FF48032 		mov	r2, #65536
 8344 0018 4260     		str	r2, [r0, #4]
2077:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 8345              		.loc 1 2077 3 is_stmt 1 view .LVU1943
2077:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 8346              		.loc 1 2077 25 is_stmt 0 view .LVU1944
 8347 001a 8360     		str	r3, [r0, #8]
2078:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 8348              		.loc 1 2078 3 is_stmt 1 view .LVU1945
2078:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 8349              		.loc 1 2078 27 is_stmt 0 view .LVU1946
 8350 001c 0122     		movs	r2, #1
 8351 001e 0261     		str	r2, [r0, #16]
2079:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 8352              		.loc 1 2079 3 is_stmt 1 view .LVU1947
2079:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 8353              		.loc 1 2079 33 is_stmt 0 view .LVU1948
 8354 0020 0276     		strb	r2, [r0, #24]
2080:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8355              		.loc 1 2080 3 is_stmt 1 view .LVU1949
2080:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8356              		.loc 1 2080 36 is_stmt 0 view .LVU1950
 8357 0022 80F82030 		strb	r3, [r0, #32]
2081:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8358              		.loc 1 2081 3 is_stmt 1 view .LVU1951
2081:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8359              		.loc 1 2081 35 is_stmt 0 view .LVU1952
 8360 0026 C362     		str	r3, [r0, #44]
2082:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8361              		.loc 1 2082 3 is_stmt 1 view .LVU1953
2082:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8362              		.loc 1 2082 31 is_stmt 0 view .LVU1954
 8363 0028 1549     		ldr	r1, .L523+8
 8364 002a 8162     		str	r1, [r0, #40]
2083:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 2;
 8365              		.loc 1 2083 3 is_stmt 1 view .LVU1955
2083:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 2;
 8366              		.loc 1 2083 24 is_stmt 0 view .LVU1956
 8367 002c C360     		str	r3, [r0, #12]
2084:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 8368              		.loc 1 2084 3 is_stmt 1 view .LVU1957
2084:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 8369              		.loc 1 2084 30 is_stmt 0 view .LVU1958
 8370 002e 0221     		movs	r1, #2
 8371 0030 C161     		str	r1, [r0, #28]
2085:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8372              		.loc 1 2085 3 is_stmt 1 view .LVU1959
2085:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8373              		.loc 1 2085 36 is_stmt 0 view .LVU1960
 8374 0032 80F83020 		strb	r2, [r0, #48]
2086:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8375              		.loc 1 2086 3 is_stmt 1 view .LVU1961
2086:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8376              		.loc 1 2086 27 is_stmt 0 view .LVU1962
 8377 0036 4361     		str	r3, [r0, #20]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 280


2087:Core/Src/main.c ****   {
 8378              		.loc 1 2087 3 is_stmt 1 view .LVU1963
2087:Core/Src/main.c ****   {
 8379              		.loc 1 2087 7 is_stmt 0 view .LVU1964
 8380 0038 FFF7FEFF 		bl	HAL_ADC_Init
 8381              	.LVL589:
2087:Core/Src/main.c ****   {
 8382              		.loc 1 2087 6 view .LVU1965
 8383 003c B0B9     		cbnz	r0, .L520
2093:Core/Src/main.c ****   sConfig.Rank = 1;
 8384              		.loc 1 2093 3 is_stmt 1 view .LVU1966
2093:Core/Src/main.c ****   sConfig.Rank = 1;
 8385              		.loc 1 2093 19 is_stmt 0 view .LVU1967
 8386 003e 0C23     		movs	r3, #12
 8387 0040 0093     		str	r3, [sp]
2094:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8388              		.loc 1 2094 3 is_stmt 1 view .LVU1968
2094:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8389              		.loc 1 2094 16 is_stmt 0 view .LVU1969
 8390 0042 0123     		movs	r3, #1
 8391 0044 0193     		str	r3, [sp, #4]
2095:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8392              		.loc 1 2095 3 is_stmt 1 view .LVU1970
2095:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8393              		.loc 1 2095 24 is_stmt 0 view .LVU1971
 8394 0046 0623     		movs	r3, #6
 8395 0048 0293     		str	r3, [sp, #8]
2096:Core/Src/main.c ****   {
 8396              		.loc 1 2096 3 is_stmt 1 view .LVU1972
2096:Core/Src/main.c ****   {
 8397              		.loc 1 2096 7 is_stmt 0 view .LVU1973
 8398 004a 6946     		mov	r1, sp
 8399 004c 0A48     		ldr	r0, .L523
 8400 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 8401              	.LVL590:
2096:Core/Src/main.c ****   {
 8402              		.loc 1 2096 6 view .LVU1974
 8403 0052 68B9     		cbnz	r0, .L521
2102:Core/Src/main.c ****   sConfig.Rank = 2;
 8404              		.loc 1 2102 3 is_stmt 1 view .LVU1975
2102:Core/Src/main.c ****   sConfig.Rank = 2;
 8405              		.loc 1 2102 19 is_stmt 0 view .LVU1976
 8406 0054 0D23     		movs	r3, #13
 8407 0056 0093     		str	r3, [sp]
2103:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8408              		.loc 1 2103 3 is_stmt 1 view .LVU1977
2103:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8409              		.loc 1 2103 16 is_stmt 0 view .LVU1978
 8410 0058 0223     		movs	r3, #2
 8411 005a 0193     		str	r3, [sp, #4]
2104:Core/Src/main.c ****   {
 8412              		.loc 1 2104 3 is_stmt 1 view .LVU1979
2104:Core/Src/main.c ****   {
 8413              		.loc 1 2104 7 is_stmt 0 view .LVU1980
 8414 005c 6946     		mov	r1, sp
 8415 005e 0648     		ldr	r0, .L523
 8416 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 281


 8417              	.LVL591:
2104:Core/Src/main.c ****   {
 8418              		.loc 1 2104 6 view .LVU1981
 8419 0064 30B9     		cbnz	r0, .L522
2112:Core/Src/main.c **** 
 8420              		.loc 1 2112 1 view .LVU1982
 8421 0066 05B0     		add	sp, sp, #20
 8422              	.LCFI84:
 8423              		.cfi_remember_state
 8424              		.cfi_def_cfa_offset 4
 8425              		@ sp needed
 8426 0068 5DF804FB 		ldr	pc, [sp], #4
 8427              	.L520:
 8428              	.LCFI85:
 8429              		.cfi_restore_state
2089:Core/Src/main.c ****   }
 8430              		.loc 1 2089 5 is_stmt 1 view .LVU1983
 8431 006c FFF7FEFF 		bl	Error_Handler
 8432              	.LVL592:
 8433              	.L521:
2098:Core/Src/main.c ****   }
 8434              		.loc 1 2098 5 view .LVU1984
 8435 0070 FFF7FEFF 		bl	Error_Handler
 8436              	.LVL593:
 8437              	.L522:
2106:Core/Src/main.c ****   }
 8438              		.loc 1 2106 5 view .LVU1985
 8439 0074 FFF7FEFF 		bl	Error_Handler
 8440              	.LVL594:
 8441              	.L524:
 8442              		.align	2
 8443              	.L523:
 8444 0078 00000000 		.word	hadc1
 8445 007c 00200140 		.word	1073815552
 8446 0080 0100000F 		.word	251658241
 8447              		.cfi_endproc
 8448              	.LFE317:
 8450              		.section	.text.MX_I2C1_Init,"ax",%progbits
 8451              		.align	1
 8452              		.syntax unified
 8453              		.thumb
 8454              		.thumb_func
 8455              		.fpu fpv4-sp-d16
 8457              	MX_I2C1_Init:
 8458              	.LFB318:
2120:Core/Src/main.c **** 
 8459              		.loc 1 2120 1 view -0
 8460              		.cfi_startproc
 8461              		@ args = 0, pretend = 0, frame = 0
 8462              		@ frame_needed = 0, uses_anonymous_args = 0
 8463 0000 08B5     		push	{r3, lr}
 8464              	.LCFI86:
 8465              		.cfi_def_cfa_offset 8
 8466              		.cfi_offset 3, -8
 8467              		.cfi_offset 14, -4
2129:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 8468              		.loc 1 2129 3 view .LVU1987
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 282


2129:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 8469              		.loc 1 2129 18 is_stmt 0 view .LVU1988
 8470 0002 0A48     		ldr	r0, .L529
 8471 0004 0A4B     		ldr	r3, .L529+4
 8472 0006 0360     		str	r3, [r0]
2130:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8473              		.loc 1 2130 3 is_stmt 1 view .LVU1989
2130:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8474              		.loc 1 2130 25 is_stmt 0 view .LVU1990
 8475 0008 0A4B     		ldr	r3, .L529+8
 8476 000a 4360     		str	r3, [r0, #4]
2131:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 8477              		.loc 1 2131 3 is_stmt 1 view .LVU1991
2131:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 8478              		.loc 1 2131 24 is_stmt 0 view .LVU1992
 8479 000c 0023     		movs	r3, #0
 8480 000e 8360     		str	r3, [r0, #8]
2132:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8481              		.loc 1 2132 3 is_stmt 1 view .LVU1993
2132:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8482              		.loc 1 2132 26 is_stmt 0 view .LVU1994
 8483 0010 C360     		str	r3, [r0, #12]
2133:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8484              		.loc 1 2133 3 is_stmt 1 view .LVU1995
2133:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8485              		.loc 1 2133 29 is_stmt 0 view .LVU1996
 8486 0012 4FF48042 		mov	r2, #16384
 8487 0016 0261     		str	r2, [r0, #16]
2134:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 8488              		.loc 1 2134 3 is_stmt 1 view .LVU1997
2134:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 8489              		.loc 1 2134 30 is_stmt 0 view .LVU1998
 8490 0018 4361     		str	r3, [r0, #20]
2135:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8491              		.loc 1 2135 3 is_stmt 1 view .LVU1999
2135:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8492              		.loc 1 2135 26 is_stmt 0 view .LVU2000
 8493 001a 8361     		str	r3, [r0, #24]
2136:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8494              		.loc 1 2136 3 is_stmt 1 view .LVU2001
2136:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8495              		.loc 1 2136 30 is_stmt 0 view .LVU2002
 8496 001c C361     		str	r3, [r0, #28]
2137:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8497              		.loc 1 2137 3 is_stmt 1 view .LVU2003
2137:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8498              		.loc 1 2137 28 is_stmt 0 view .LVU2004
 8499 001e 0362     		str	r3, [r0, #32]
2138:Core/Src/main.c ****   {
 8500              		.loc 1 2138 3 is_stmt 1 view .LVU2005
2138:Core/Src/main.c ****   {
 8501              		.loc 1 2138 7 is_stmt 0 view .LVU2006
 8502 0020 FFF7FEFF 		bl	HAL_I2C_Init
 8503              	.LVL595:
2138:Core/Src/main.c ****   {
 8504              		.loc 1 2138 6 view .LVU2007
 8505 0024 00B9     		cbnz	r0, .L528
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 283


2146:Core/Src/main.c **** 
 8506              		.loc 1 2146 1 view .LVU2008
 8507 0026 08BD     		pop	{r3, pc}
 8508              	.L528:
2140:Core/Src/main.c ****   }
 8509              		.loc 1 2140 5 is_stmt 1 view .LVU2009
 8510 0028 FFF7FEFF 		bl	Error_Handler
 8511              	.LVL596:
 8512              	.L530:
 8513              		.align	2
 8514              	.L529:
 8515 002c 00000000 		.word	hi2c1
 8516 0030 00540040 		.word	1073763328
 8517 0034 A0860100 		.word	100000
 8518              		.cfi_endproc
 8519              	.LFE318:
 8521              		.section	.text.MX_I2C2_Init,"ax",%progbits
 8522              		.align	1
 8523              		.syntax unified
 8524              		.thumb
 8525              		.thumb_func
 8526              		.fpu fpv4-sp-d16
 8528              	MX_I2C2_Init:
 8529              	.LFB319:
2154:Core/Src/main.c **** 
 8530              		.loc 1 2154 1 view -0
 8531              		.cfi_startproc
 8532              		@ args = 0, pretend = 0, frame = 0
 8533              		@ frame_needed = 0, uses_anonymous_args = 0
 8534 0000 08B5     		push	{r3, lr}
 8535              	.LCFI87:
 8536              		.cfi_def_cfa_offset 8
 8537              		.cfi_offset 3, -8
 8538              		.cfi_offset 14, -4
2163:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 8539              		.loc 1 2163 3 view .LVU2011
2163:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 8540              		.loc 1 2163 18 is_stmt 0 view .LVU2012
 8541 0002 0A48     		ldr	r0, .L535
 8542 0004 0A4B     		ldr	r3, .L535+4
 8543 0006 0360     		str	r3, [r0]
2164:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8544              		.loc 1 2164 3 is_stmt 1 view .LVU2013
2164:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8545              		.loc 1 2164 25 is_stmt 0 view .LVU2014
 8546 0008 0A4B     		ldr	r3, .L535+8
 8547 000a 4360     		str	r3, [r0, #4]
2165:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 8548              		.loc 1 2165 3 is_stmt 1 view .LVU2015
2165:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 8549              		.loc 1 2165 24 is_stmt 0 view .LVU2016
 8550 000c 0023     		movs	r3, #0
 8551 000e 8360     		str	r3, [r0, #8]
2166:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8552              		.loc 1 2166 3 is_stmt 1 view .LVU2017
2166:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8553              		.loc 1 2166 26 is_stmt 0 view .LVU2018
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 284


 8554 0010 C360     		str	r3, [r0, #12]
2167:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8555              		.loc 1 2167 3 is_stmt 1 view .LVU2019
2167:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8556              		.loc 1 2167 29 is_stmt 0 view .LVU2020
 8557 0012 4FF48042 		mov	r2, #16384
 8558 0016 0261     		str	r2, [r0, #16]
2168:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 8559              		.loc 1 2168 3 is_stmt 1 view .LVU2021
2168:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 8560              		.loc 1 2168 30 is_stmt 0 view .LVU2022
 8561 0018 4361     		str	r3, [r0, #20]
2169:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8562              		.loc 1 2169 3 is_stmt 1 view .LVU2023
2169:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8563              		.loc 1 2169 26 is_stmt 0 view .LVU2024
 8564 001a 8361     		str	r3, [r0, #24]
2170:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8565              		.loc 1 2170 3 is_stmt 1 view .LVU2025
2170:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8566              		.loc 1 2170 30 is_stmt 0 view .LVU2026
 8567 001c C361     		str	r3, [r0, #28]
2171:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8568              		.loc 1 2171 3 is_stmt 1 view .LVU2027
2171:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8569              		.loc 1 2171 28 is_stmt 0 view .LVU2028
 8570 001e 0362     		str	r3, [r0, #32]
2172:Core/Src/main.c ****   {
 8571              		.loc 1 2172 3 is_stmt 1 view .LVU2029
2172:Core/Src/main.c ****   {
 8572              		.loc 1 2172 7 is_stmt 0 view .LVU2030
 8573 0020 FFF7FEFF 		bl	HAL_I2C_Init
 8574              	.LVL597:
2172:Core/Src/main.c ****   {
 8575              		.loc 1 2172 6 view .LVU2031
 8576 0024 00B9     		cbnz	r0, .L534
2180:Core/Src/main.c **** 
 8577              		.loc 1 2180 1 view .LVU2032
 8578 0026 08BD     		pop	{r3, pc}
 8579              	.L534:
2174:Core/Src/main.c ****   }
 8580              		.loc 1 2174 5 is_stmt 1 view .LVU2033
 8581 0028 FFF7FEFF 		bl	Error_Handler
 8582              	.LVL598:
 8583              	.L536:
 8584              		.align	2
 8585              	.L535:
 8586 002c 00000000 		.word	hi2c2
 8587 0030 00580040 		.word	1073764352
 8588 0034 A0860100 		.word	100000
 8589              		.cfi_endproc
 8590              	.LFE319:
 8592              		.section	.rodata.reInitIMU.str1.4,"aMS",%progbits,1
 8593              		.align	2
 8594              	.LC112:
 8595 0000 7265496E 		.ascii	"reInit IMU\015\012\000"
 8595      69742049 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 285


 8595      4D550D0A 
 8595      00
 8596              		.section	.text.reInitIMU,"ax",%progbits
 8597              		.align	1
 8598              		.syntax unified
 8599              		.thumb
 8600              		.thumb_func
 8601              		.fpu fpv4-sp-d16
 8603              	reInitIMU:
 8604              	.LFB281:
 467:Core/Src/main.c **** 
 8605              		.loc 1 467 22 view -0
 8606              		.cfi_startproc
 8607              		@ args = 0, pretend = 0, frame = 24
 8608              		@ frame_needed = 0, uses_anonymous_args = 0
 8609 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8610              	.LCFI88:
 8611              		.cfi_def_cfa_offset 20
 8612              		.cfi_offset 4, -20
 8613              		.cfi_offset 5, -16
 8614              		.cfi_offset 6, -12
 8615              		.cfi_offset 7, -8
 8616              		.cfi_offset 14, -4
 8617 0002 87B0     		sub	sp, sp, #28
 8618              	.LCFI89:
 8619              		.cfi_def_cfa_offset 48
 471:Core/Src/main.c **** 
 8620              		.loc 1 471 2 view .LVU2035
 8621 0004 1B48     		ldr	r0, .L539
 8622 0006 FFF7FEFF 		bl	Serial_Console
 8623              	.LVL599:
 473:Core/Src/main.c **** 	HAL_I2C_DeInit(&hi2c2);
 8624              		.loc 1 473 2 view .LVU2036
 473:Core/Src/main.c **** 	HAL_I2C_DeInit(&hi2c2);
 8625              		.loc 1 473 19 is_stmt 0 view .LVU2037
 8626 000a 0024     		movs	r4, #0
 8627 000c 0194     		str	r4, [sp, #4]
 8628 000e 0294     		str	r4, [sp, #8]
 8629 0010 0394     		str	r4, [sp, #12]
 8630 0012 0494     		str	r4, [sp, #16]
 8631 0014 0594     		str	r4, [sp, #20]
 474:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8632              		.loc 1 474 2 is_stmt 1 view .LVU2038
 8633 0016 1848     		ldr	r0, .L539+4
 8634 0018 FFF7FEFF 		bl	HAL_I2C_DeInit
 8635              	.LVL600:
 475:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_RESET);
 8636              		.loc 1 475 2 view .LVU2039
 8637 001c 174D     		ldr	r5, .L539+8
 8638 001e 2246     		mov	r2, r4
 8639 0020 4FF48061 		mov	r1, #1024
 8640 0024 2846     		mov	r0, r5
 8641 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 8642              	.LVL601:
 476:Core/Src/main.c **** 	GPIO_InitStruct.Pin = GPIO_PIN_10;
 8643              		.loc 1 476 2 view .LVU2040
 8644 002a 2246     		mov	r2, r4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 286


 8645 002c 4FF40061 		mov	r1, #2048
 8646 0030 2846     		mov	r0, r5
 8647 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 8648              	.LVL602:
 477:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8649              		.loc 1 477 2 view .LVU2041
 477:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8650              		.loc 1 477 22 is_stmt 0 view .LVU2042
 8651 0036 4FF48063 		mov	r3, #1024
 8652 003a 0193     		str	r3, [sp, #4]
 478:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8653              		.loc 1 478 2 is_stmt 1 view .LVU2043
 478:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8654              		.loc 1 478 23 is_stmt 0 view .LVU2044
 8655 003c 0126     		movs	r6, #1
 8656 003e 0296     		str	r6, [sp, #8]
 479:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8657              		.loc 1 479 2 is_stmt 1 view .LVU2045
 479:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8658              		.loc 1 479 23 is_stmt 0 view .LVU2046
 8659 0040 0227     		movs	r7, #2
 8660 0042 0397     		str	r7, [sp, #12]
 480:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8661              		.loc 1 480 2 is_stmt 1 view .LVU2047
 480:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8662              		.loc 1 480 24 is_stmt 0 view .LVU2048
 8663 0044 0494     		str	r4, [sp, #16]
 481:Core/Src/main.c **** 	GPIO_InitStruct.Pin = GPIO_PIN_11;
 8664              		.loc 1 481 2 is_stmt 1 view .LVU2049
 8665 0046 01A9     		add	r1, sp, #4
 8666 0048 2846     		mov	r0, r5
 8667 004a FFF7FEFF 		bl	HAL_GPIO_Init
 8668              	.LVL603:
 482:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8669              		.loc 1 482 2 view .LVU2050
 482:Core/Src/main.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8670              		.loc 1 482 22 is_stmt 0 view .LVU2051
 8671 004e 4FF40063 		mov	r3, #2048
 8672 0052 0193     		str	r3, [sp, #4]
 483:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8673              		.loc 1 483 2 is_stmt 1 view .LVU2052
 483:Core/Src/main.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8674              		.loc 1 483 23 is_stmt 0 view .LVU2053
 8675 0054 0296     		str	r6, [sp, #8]
 484:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8676              		.loc 1 484 2 is_stmt 1 view .LVU2054
 484:Core/Src/main.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8677              		.loc 1 484 23 is_stmt 0 view .LVU2055
 8678 0056 0397     		str	r7, [sp, #12]
 485:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8679              		.loc 1 485 2 is_stmt 1 view .LVU2056
 485:Core/Src/main.c **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8680              		.loc 1 485 24 is_stmt 0 view .LVU2057
 8681 0058 0494     		str	r4, [sp, #16]
 486:Core/Src/main.c **** 	HAL_Delay(1);
 8682              		.loc 1 486 2 is_stmt 1 view .LVU2058
 8683 005a 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 287


 8684 005c 2846     		mov	r0, r5
 8685 005e FFF7FEFF 		bl	HAL_GPIO_Init
 8686              	.LVL604:
 487:Core/Src/main.c **** 	MX_I2C2_Init();
 8687              		.loc 1 487 2 view .LVU2059
 8688 0062 3046     		mov	r0, r6
 8689 0064 FFF7FEFF 		bl	HAL_Delay
 8690              	.LVL605:
 488:Core/Src/main.c **** 	Init6050();
 8691              		.loc 1 488 2 view .LVU2060
 8692 0068 FFF7FEFF 		bl	MX_I2C2_Init
 8693              	.LVL606:
 489:Core/Src/main.c **** }
 8694              		.loc 1 489 2 view .LVU2061
 8695 006c FFF7FEFF 		bl	Init6050
 8696              	.LVL607:
 490:Core/Src/main.c **** 
 8697              		.loc 1 490 1 is_stmt 0 view .LVU2062
 8698 0070 07B0     		add	sp, sp, #28
 8699              	.LCFI90:
 8700              		.cfi_def_cfa_offset 20
 8701              		@ sp needed
 8702 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 8703              	.L540:
 8704              		.align	2
 8705              	.L539:
 8706 0074 00000000 		.word	.LC112
 8707 0078 00000000 		.word	hi2c2
 8708 007c 00040240 		.word	1073873920
 8709              		.cfi_endproc
 8710              	.LFE281:
 8712              		.section	.text.MPU6050_Read_Accel,"ax",%progbits
 8713              		.align	1
 8714              		.syntax unified
 8715              		.thumb
 8716              		.thumb_func
 8717              		.fpu fpv4-sp-d16
 8719              	MPU6050_Read_Accel:
 8720              	.LFB283:
 526:Core/Src/main.c **** 
 8721              		.loc 1 526 31 is_stmt 1 view -0
 8722              		.cfi_startproc
 8723              		@ args = 0, pretend = 0, frame = 8
 8724              		@ frame_needed = 0, uses_anonymous_args = 0
 8725 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8726              	.LCFI91:
 8727              		.cfi_def_cfa_offset 24
 8728              		.cfi_offset 4, -24
 8729              		.cfi_offset 5, -20
 8730              		.cfi_offset 6, -16
 8731              		.cfi_offset 7, -12
 8732              		.cfi_offset 8, -8
 8733              		.cfi_offset 14, -4
 8734 0004 2DED048B 		vpush.64	{d8, d9}
 8735              	.LCFI92:
 8736              		.cfi_def_cfa_offset 40
 8737              		.cfi_offset 80, -40
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 288


 8738              		.cfi_offset 81, -36
 8739              		.cfi_offset 82, -32
 8740              		.cfi_offset 83, -28
 8741 0008 86B0     		sub	sp, sp, #24
 8742              	.LCFI93:
 8743              		.cfi_def_cfa_offset 64
 528:Core/Src/main.c **** 
 8744              		.loc 1 528 2 view .LVU2064
 532:Core/Src/main.c **** 		reInitIMU();		// if the MPU-6050 does not respond within 50ms, re-init
 8745              		.loc 1 532 2 view .LVU2065
 532:Core/Src/main.c **** 		reInitIMU();		// if the MPU-6050 does not respond within 50ms, re-init
 8746              		.loc 1 532 6 is_stmt 0 view .LVU2066
 8747 000a 3223     		movs	r3, #50
 8748 000c 0293     		str	r3, [sp, #8]
 8749 000e 0623     		movs	r3, #6
 8750 0010 0193     		str	r3, [sp, #4]
 8751 0012 04AB     		add	r3, sp, #16
 8752 0014 0093     		str	r3, [sp]
 8753 0016 0123     		movs	r3, #1
 8754 0018 3B22     		movs	r2, #59
 8755 001a D021     		movs	r1, #208
 8756 001c 5448     		ldr	r0, .L546+8
 8757 001e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 8758              	.LVL608:
 532:Core/Src/main.c **** 		reInitIMU();		// if the MPU-6050 does not respond within 50ms, re-init
 8759              		.loc 1 532 5 view .LVU2067
 8760 0022 0028     		cmp	r0, #0
 8761 0024 40F09B80 		bne	.L545
 537:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 8762              		.loc 1 537 2 is_stmt 1 view .LVU2068
 537:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 8763              		.loc 1 537 34 is_stmt 0 view .LVU2069
 8764 0028 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 537:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 8765              		.loc 1 537 54 view .LVU2070
 8766 002c 9DF81100 		ldrb	r0, [sp, #17]	@ zero_extendqisi2
 537:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 8767              		.loc 1 537 16 view .LVU2071
 8768 0030 40EA0320 		orr	r0, r0, r3, lsl #8
 8769 0034 00B2     		sxth	r0, r0
 537:Core/Src/main.c **** 	Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 8770              		.loc 1 537 14 view .LVU2072
 8771 0036 4F4B     		ldr	r3, .L546+12
 8772 0038 1880     		strh	r0, [r3]	@ movhi
 538:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 8773              		.loc 1 538 2 is_stmt 1 view .LVU2073
 538:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 8774              		.loc 1 538 34 is_stmt 0 view .LVU2074
 8775 003a 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 538:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 8776              		.loc 1 538 54 view .LVU2075
 8777 003e 9DF81350 		ldrb	r5, [sp, #19]	@ zero_extendqisi2
 538:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 8778              		.loc 1 538 16 view .LVU2076
 8779 0042 45EA0325 		orr	r5, r5, r3, lsl #8
 8780 0046 2DB2     		sxth	r5, r5
 538:Core/Src/main.c **** 	Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 289


 8781              		.loc 1 538 14 view .LVU2077
 8782 0048 4B4B     		ldr	r3, .L546+16
 8783 004a 1D80     		strh	r5, [r3]	@ movhi
 539:Core/Src/main.c **** 
 8784              		.loc 1 539 2 is_stmt 1 view .LVU2078
 539:Core/Src/main.c **** 
 8785              		.loc 1 539 34 is_stmt 0 view .LVU2079
 8786 004c 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 539:Core/Src/main.c **** 
 8787              		.loc 1 539 54 view .LVU2080
 8788 0050 9DF81540 		ldrb	r4, [sp, #21]	@ zero_extendqisi2
 539:Core/Src/main.c **** 
 8789              		.loc 1 539 16 view .LVU2081
 8790 0054 44EA0324 		orr	r4, r4, r3, lsl #8
 8791 0058 24B2     		sxth	r4, r4
 539:Core/Src/main.c **** 
 8792              		.loc 1 539 14 view .LVU2082
 8793 005a 484B     		ldr	r3, .L546+20
 8794 005c 1C80     		strh	r4, [r3]	@ movhi
 541:Core/Src/main.c **** 	Ay = Accel_Y_RAW/16384.0;
 8795              		.loc 1 541 2 is_stmt 1 view .LVU2083
 541:Core/Src/main.c **** 	Ay = Accel_Y_RAW/16384.0;
 8796              		.loc 1 541 18 is_stmt 0 view .LVU2084
 8797 005e FFF7FEFF 		bl	__aeabi_i2d
 8798              	.LVL609:
 8799 0062 0022     		movs	r2, #0
 8800 0064 464B     		ldr	r3, .L546+24
 8801 0066 FFF7FEFF 		bl	__aeabi_dmul
 8802              	.LVL610:
 8803 006a FFF7FEFF 		bl	__aeabi_d2f
 8804              	.LVL611:
 541:Core/Src/main.c **** 	Ay = Accel_Y_RAW/16384.0;
 8805              		.loc 1 541 5 view .LVU2085
 8806 006e 454E     		ldr	r6, .L546+28
 8807 0070 3060     		str	r0, [r6]	@ float
 542:Core/Src/main.c **** 	Az = Accel_Z_RAW/16384.0;
 8808              		.loc 1 542 2 is_stmt 1 view .LVU2086
 542:Core/Src/main.c **** 	Az = Accel_Z_RAW/16384.0;
 8809              		.loc 1 542 18 is_stmt 0 view .LVU2087
 8810 0072 2846     		mov	r0, r5
 8811 0074 FFF7FEFF 		bl	__aeabi_i2d
 8812              	.LVL612:
 8813 0078 0022     		movs	r2, #0
 8814 007a 414B     		ldr	r3, .L546+24
 8815 007c FFF7FEFF 		bl	__aeabi_dmul
 8816              	.LVL613:
 8817 0080 FFF7FEFF 		bl	__aeabi_d2f
 8818              	.LVL614:
 8819 0084 0546     		mov	r5, r0	@ float
 542:Core/Src/main.c **** 	Az = Accel_Z_RAW/16384.0;
 8820              		.loc 1 542 5 view .LVU2088
 8821 0086 404F     		ldr	r7, .L546+32
 8822 0088 3860     		str	r0, [r7]	@ float
 543:Core/Src/main.c **** 
 8823              		.loc 1 543 2 is_stmt 1 view .LVU2089
 543:Core/Src/main.c **** 
 8824              		.loc 1 543 18 is_stmt 0 view .LVU2090
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 290


 8825 008a 2046     		mov	r0, r4
 8826 008c FFF7FEFF 		bl	__aeabi_i2d
 8827              	.LVL615:
 8828 0090 0022     		movs	r2, #0
 8829 0092 3B4B     		ldr	r3, .L546+24
 8830 0094 FFF7FEFF 		bl	__aeabi_dmul
 8831              	.LVL616:
 8832 0098 FFF7FEFF 		bl	__aeabi_d2f
 8833              	.LVL617:
 543:Core/Src/main.c **** 
 8834              		.loc 1 543 5 view .LVU2091
 8835 009c DFF8FC80 		ldr	r8, .L546+52
 8836 00a0 C8F80000 		str	r0, [r8]	@ float
 545:Core/Src/main.c **** 	r = atan2(Ay , Az) * 57.3;
 8837              		.loc 1 545 2 is_stmt 1 view .LVU2092
 546:Core/Src/main.c **** 	p = atan2((- Ax) , sqrtf(Ay * Ay + Az * Az)) * 57.3;
 8838              		.loc 1 546 2 view .LVU2093
 546:Core/Src/main.c **** 	p = atan2((- Ax) , sqrtf(Ay * Ay + Az * Az)) * 57.3;
 8839              		.loc 1 546 6 is_stmt 0 view .LVU2094
 8840 00a4 FFF7FEFF 		bl	__aeabi_f2d
 8841              	.LVL618:
 8842 00a8 41EC180B 		vmov	d8, r0, r1
 8843 00ac 2846     		mov	r0, r5	@ float
 8844 00ae FFF7FEFF 		bl	__aeabi_f2d
 8845              	.LVL619:
 8846 00b2 B0EE481A 		vmov.f32	s2, s16
 8847 00b6 F0EE681A 		vmov.f32	s3, s17
 8848 00ba 41EC100B 		vmov	d0, r0, r1
 8849 00be FFF7FEFF 		bl	atan2
 8850              	.LVL620:
 8851 00c2 51EC100B 		vmov	r0, r1, d0
 546:Core/Src/main.c **** 	p = atan2((- Ax) , sqrtf(Ay * Ay + Az * Az)) * 57.3;
 8852              		.loc 1 546 21 view .LVU2095
 8853 00c6 28A3     		adr	r3, .L546
 8854 00c8 D3E90023 		ldrd	r2, [r3]
 8855 00cc FFF7FEFF 		bl	__aeabi_dmul
 8856              	.LVL621:
 546:Core/Src/main.c **** 	p = atan2((- Ax) , sqrtf(Ay * Ay + Az * Az)) * 57.3;
 8857              		.loc 1 546 4 view .LVU2096
 8858 00d0 FFF7FEFF 		bl	__aeabi_d2f
 8859              	.LVL622:
 8860 00d4 08EE100A 		vmov	s16, r0
 8861              	.LVL623:
 547:Core/Src/main.c **** 
 8862              		.loc 1 547 2 is_stmt 1 view .LVU2097
 547:Core/Src/main.c **** 
 8863              		.loc 1 547 13 is_stmt 0 view .LVU2098
 8864 00d8 D6ED007A 		vldr.32	s15, [r6]
 8865 00dc F1EE677A 		vneg.f32	s15, s15
 8866 00e0 17EE904A 		vmov	r4, s15
 547:Core/Src/main.c **** 
 8867              		.loc 1 547 30 view .LVU2099
 8868 00e4 97ED000A 		vldr.32	s0, [r7]
 8869 00e8 20EE000A 		vmul.f32	s0, s0, s0
 547:Core/Src/main.c **** 
 8870              		.loc 1 547 40 view .LVU2100
 8871 00ec D8ED007A 		vldr.32	s15, [r8]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 291


 8872 00f0 67EEA77A 		vmul.f32	s15, s15, s15
 547:Core/Src/main.c **** 
 8873              		.loc 1 547 21 view .LVU2101
 8874 00f4 30EE270A 		vadd.f32	s0, s0, s15
 8875 00f8 FFF7FEFF 		bl	sqrtf
 8876              	.LVL624:
 547:Core/Src/main.c **** 
 8877              		.loc 1 547 21 view .LVU2102
 8878 00fc 10EE100A 		vmov	r0, s0
 547:Core/Src/main.c **** 
 8879              		.loc 1 547 6 view .LVU2103
 8880 0100 FFF7FEFF 		bl	__aeabi_f2d
 8881              	.LVL625:
 8882 0104 41EC190B 		vmov	d9, r0, r1
 8883 0108 2046     		mov	r0, r4	@ float
 8884 010a FFF7FEFF 		bl	__aeabi_f2d
 8885              	.LVL626:
 8886 010e B0EE491A 		vmov.f32	s2, s18
 8887 0112 F0EE691A 		vmov.f32	s3, s19
 8888 0116 41EC100B 		vmov	d0, r0, r1
 8889 011a FFF7FEFF 		bl	atan2
 8890              	.LVL627:
 8891 011e 51EC100B 		vmov	r0, r1, d0
 547:Core/Src/main.c **** 
 8892              		.loc 1 547 47 view .LVU2104
 8893 0122 11A3     		adr	r3, .L546
 8894 0124 D3E90023 		ldrd	r2, [r3]
 8895 0128 FFF7FEFF 		bl	__aeabi_dmul
 8896              	.LVL628:
 547:Core/Src/main.c **** 
 8897              		.loc 1 547 4 view .LVU2105
 8898 012c FFF7FEFF 		bl	__aeabi_d2f
 8899              	.LVL629:
 8900 0130 07EE900A 		vmov	s15, r0
 8901              	.LVL630:
 549:Core/Src/main.c **** 	raw_pitch = p + pitch_error;
 8902              		.loc 1 549 2 is_stmt 1 view .LVU2106
 549:Core/Src/main.c **** 	raw_pitch = p + pitch_error;
 8903              		.loc 1 549 15 is_stmt 0 view .LVU2107
 8904 0134 154B     		ldr	r3, .L546+36
 8905 0136 93ED007A 		vldr.32	s14, [r3]
 8906 013a 38EE078A 		vadd.f32	s16, s16, s14
 8907              	.LVL631:
 549:Core/Src/main.c **** 	raw_pitch = p + pitch_error;
 8908              		.loc 1 549 11 view .LVU2108
 8909 013e 144B     		ldr	r3, .L546+40
 8910 0140 83ED008A 		vstr.32	s16, [r3]
 550:Core/Src/main.c **** 
 8911              		.loc 1 550 2 is_stmt 1 view .LVU2109
 550:Core/Src/main.c **** 
 8912              		.loc 1 550 16 is_stmt 0 view .LVU2110
 8913 0144 134B     		ldr	r3, .L546+44
 8914 0146 93ED007A 		vldr.32	s14, [r3]
 8915 014a 77EE877A 		vadd.f32	s15, s15, s14
 550:Core/Src/main.c **** 
 8916              		.loc 1 550 12 view .LVU2111
 8917 014e 124B     		ldr	r3, .L546+48
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 292


 8918 0150 C3ED007A 		vstr.32	s15, [r3]
 8919              	.LVL632:
 8920              	.L541:
 552:Core/Src/main.c **** 
 8921              		.loc 1 552 1 view .LVU2112
 8922 0154 06B0     		add	sp, sp, #24
 8923              	.LCFI94:
 8924              		.cfi_remember_state
 8925              		.cfi_def_cfa_offset 40
 8926              		@ sp needed
 8927 0156 BDEC048B 		vldm	sp!, {d8-d9}
 8928              	.LCFI95:
 8929              		.cfi_restore 82
 8930              		.cfi_restore 83
 8931              		.cfi_restore 80
 8932              		.cfi_restore 81
 8933              		.cfi_def_cfa_offset 24
 8934 015a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8935              	.L545:
 8936              	.LCFI96:
 8937              		.cfi_restore_state
 533:Core/Src/main.c **** 		return;
 8938              		.loc 1 533 3 is_stmt 1 view .LVU2113
 8939 015e FFF7FEFF 		bl	reInitIMU
 8940              	.LVL633:
 534:Core/Src/main.c **** 	}
 8941              		.loc 1 534 3 view .LVU2114
 8942 0162 F7E7     		b	.L541
 8943              	.L547:
 8944 0164 AFF30080 		.align	3
 8945              	.L546:
 8946 0168 66666666 		.word	1717986918
 8947 016c 66A64C40 		.word	1078765158
 8948 0170 00000000 		.word	hi2c2
 8949 0174 00000000 		.word	.LANCHOR79
 8950 0178 00000000 		.word	.LANCHOR80
 8951 017c 00000000 		.word	.LANCHOR81
 8952 0180 0000103F 		.word	1058013184
 8953 0184 00000000 		.word	Ax
 8954 0188 00000000 		.word	Ay
 8955 018c 00000000 		.word	.LANCHOR82
 8956 0190 00000000 		.word	raw_roll
 8957 0194 00000000 		.word	.LANCHOR83
 8958 0198 00000000 		.word	raw_pitch
 8959 019c 00000000 		.word	Az
 8960              		.cfi_endproc
 8961              	.LFE283:
 8963              		.section	.text.MPU6050_Read_Gyro,"ax",%progbits
 8964              		.align	1
 8965              		.syntax unified
 8966              		.thumb
 8967              		.thumb_func
 8968              		.fpu fpv4-sp-d16
 8970              	MPU6050_Read_Gyro:
 8971              	.LFB282:
 494:Core/Src/main.c **** 
 8972              		.loc 1 494 30 view -0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 293


 8973              		.cfi_startproc
 8974              		@ args = 0, pretend = 0, frame = 8
 8975              		@ frame_needed = 0, uses_anonymous_args = 0
 8976 0000 70B5     		push	{r4, r5, r6, lr}
 8977              	.LCFI97:
 8978              		.cfi_def_cfa_offset 16
 8979              		.cfi_offset 4, -16
 8980              		.cfi_offset 5, -12
 8981              		.cfi_offset 6, -8
 8982              		.cfi_offset 14, -4
 8983 0002 86B0     		sub	sp, sp, #24
 8984              	.LCFI98:
 8985              		.cfi_def_cfa_offset 40
 496:Core/Src/main.c **** 
 8986              		.loc 1 496 2 view .LVU2116
 500:Core/Src/main.c **** 		reInitIMU();	// if the MPU-6050 does not respond within 50ms, re-init
 8987              		.loc 1 500 2 view .LVU2117
 500:Core/Src/main.c **** 		reInitIMU();	// if the MPU-6050 does not respond within 50ms, re-init
 8988              		.loc 1 500 6 is_stmt 0 view .LVU2118
 8989 0004 3223     		movs	r3, #50
 8990 0006 0293     		str	r3, [sp, #8]
 8991 0008 0623     		movs	r3, #6
 8992 000a 0193     		str	r3, [sp, #4]
 8993 000c 04AB     		add	r3, sp, #16
 8994 000e 0093     		str	r3, [sp]
 8995 0010 0123     		movs	r3, #1
 8996 0012 4322     		movs	r2, #67
 8997 0014 D021     		movs	r1, #208
 8998 0016 4648     		ldr	r0, .L560+16
 8999 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 9000              	.LVL634:
 500:Core/Src/main.c **** 		reInitIMU();	// if the MPU-6050 does not respond within 50ms, re-init
 9001              		.loc 1 500 5 view .LVU2119
 9002 001c 0028     		cmp	r0, #0
 9003 001e 77D1     		bne	.L558
 505:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 9004              		.loc 1 505 2 is_stmt 1 view .LVU2120
 505:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 9005              		.loc 1 505 33 is_stmt 0 view .LVU2121
 9006 0020 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 505:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 9007              		.loc 1 505 53 view .LVU2122
 9008 0024 9DF81100 		ldrb	r0, [sp, #17]	@ zero_extendqisi2
 505:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 9009              		.loc 1 505 15 view .LVU2123
 9010 0028 40EA0320 		orr	r0, r0, r3, lsl #8
 9011 002c 00B2     		sxth	r0, r0
 505:Core/Src/main.c **** 	Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 9012              		.loc 1 505 13 view .LVU2124
 9013 002e 414B     		ldr	r3, .L560+20
 9014 0030 1880     		strh	r0, [r3]	@ movhi
 506:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 9015              		.loc 1 506 2 is_stmt 1 view .LVU2125
 506:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 9016              		.loc 1 506 33 is_stmt 0 view .LVU2126
 9017 0032 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 506:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 294


 9018              		.loc 1 506 53 view .LVU2127
 9019 0036 9DF81350 		ldrb	r5, [sp, #19]	@ zero_extendqisi2
 506:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 9020              		.loc 1 506 15 view .LVU2128
 9021 003a 45EA0325 		orr	r5, r5, r3, lsl #8
 9022 003e 2DB2     		sxth	r5, r5
 506:Core/Src/main.c **** 	Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 9023              		.loc 1 506 13 view .LVU2129
 9024 0040 3D4B     		ldr	r3, .L560+24
 9025 0042 1D80     		strh	r5, [r3]	@ movhi
 507:Core/Src/main.c **** 
 9026              		.loc 1 507 2 is_stmt 1 view .LVU2130
 507:Core/Src/main.c **** 
 9027              		.loc 1 507 33 is_stmt 0 view .LVU2131
 9028 0044 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 507:Core/Src/main.c **** 
 9029              		.loc 1 507 53 view .LVU2132
 9030 0048 9DF81540 		ldrb	r4, [sp, #21]	@ zero_extendqisi2
 507:Core/Src/main.c **** 
 9031              		.loc 1 507 15 view .LVU2133
 9032 004c 44EA0324 		orr	r4, r4, r3, lsl #8
 9033 0050 24B2     		sxth	r4, r4
 507:Core/Src/main.c **** 
 9034              		.loc 1 507 13 view .LVU2134
 9035 0052 3A4B     		ldr	r3, .L560+28
 9036 0054 1C80     		strh	r4, [r3]	@ movhi
 509:Core/Src/main.c **** 	Gy = Gyro_Y_RAW/131.0;
 9037              		.loc 1 509 2 is_stmt 1 view .LVU2135
 509:Core/Src/main.c **** 	Gy = Gyro_Y_RAW/131.0;
 9038              		.loc 1 509 17 is_stmt 0 view .LVU2136
 9039 0056 FFF7FEFF 		bl	__aeabi_i2d
 9040              	.LVL635:
 9041 005a 31A3     		adr	r3, .L560
 9042 005c D3E90023 		ldrd	r2, [r3]
 9043 0060 FFF7FEFF 		bl	__aeabi_ddiv
 9044              	.LVL636:
 9045 0064 FFF7FEFF 		bl	__aeabi_d2f
 9046              	.LVL637:
 509:Core/Src/main.c **** 	Gy = Gyro_Y_RAW/131.0;
 9047              		.loc 1 509 5 view .LVU2137
 9048 0068 354B     		ldr	r3, .L560+32
 9049 006a 1860     		str	r0, [r3]	@ float
 510:Core/Src/main.c **** 	Gz = Gyro_Z_RAW/131.0;
 9050              		.loc 1 510 2 is_stmt 1 view .LVU2138
 510:Core/Src/main.c **** 	Gz = Gyro_Z_RAW/131.0;
 9051              		.loc 1 510 17 is_stmt 0 view .LVU2139
 9052 006c 2846     		mov	r0, r5
 9053 006e FFF7FEFF 		bl	__aeabi_i2d
 9054              	.LVL638:
 9055 0072 2BA3     		adr	r3, .L560
 9056 0074 D3E90023 		ldrd	r2, [r3]
 9057 0078 FFF7FEFF 		bl	__aeabi_ddiv
 9058              	.LVL639:
 9059 007c FFF7FEFF 		bl	__aeabi_d2f
 9060              	.LVL640:
 510:Core/Src/main.c **** 	Gz = Gyro_Z_RAW/131.0;
 9061              		.loc 1 510 5 view .LVU2140
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 295


 9062 0080 304B     		ldr	r3, .L560+36
 9063 0082 1860     		str	r0, [r3]	@ float
 511:Core/Src/main.c **** 
 9064              		.loc 1 511 2 is_stmt 1 view .LVU2141
 511:Core/Src/main.c **** 
 9065              		.loc 1 511 17 is_stmt 0 view .LVU2142
 9066 0084 2046     		mov	r0, r4
 9067 0086 FFF7FEFF 		bl	__aeabi_i2d
 9068              	.LVL641:
 9069 008a 25A3     		adr	r3, .L560
 9070 008c D3E90023 		ldrd	r2, [r3]
 9071 0090 FFF7FEFF 		bl	__aeabi_ddiv
 9072              	.LVL642:
 9073 0094 FFF7FEFF 		bl	__aeabi_d2f
 9074              	.LVL643:
 9075 0098 07EE900A 		vmov	s15, r0
 513:Core/Src/main.c **** 		if (fabs(Gz) < 1.0) {
 9076              		.loc 1 513 2 is_stmt 1 view .LVU2143
 513:Core/Src/main.c **** 		if (fabs(Gz) < 1.0) {
 9077              		.loc 1 513 20 is_stmt 0 view .LVU2144
 9078 009c 2A4B     		ldr	r3, .L560+40
 9079 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513:Core/Src/main.c **** 		if (fabs(Gz) < 1.0) {
 9080              		.loc 1 513 5 view .LVU2145
 9081 00a0 43B9     		cbnz	r3, .L551
 514:Core/Src/main.c **** 			yaw_error = fabs(Gz);		// Auto calibrate the Gyro error at startup
 9082              		.loc 1 514 3 is_stmt 1 view .LVU2146
 514:Core/Src/main.c **** 			yaw_error = fabs(Gz);		// Auto calibrate the Gyro error at startup
 9083              		.loc 1 514 7 is_stmt 0 view .LVU2147
 9084 00a2 B0EEE77A 		vabs.f32	s14, s15
 514:Core/Src/main.c **** 			yaw_error = fabs(Gz);		// Auto calibrate the Gyro error at startup
 9085              		.loc 1 514 6 view .LVU2148
 9086 00a6 F7EE006A 		vmov.f32	s13, #1.0e+0
 9087 00aa B4EEE67A 		vcmpe.f32	s14, s13
 9088 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9089 00b2 30D4     		bmi	.L559
 9090              	.L551:
 518:Core/Src/main.c **** 
 9091              		.loc 1 518 2 is_stmt 1 view .LVU2149
 518:Core/Src/main.c **** 
 9092              		.loc 1 518 5 is_stmt 0 view .LVU2150
 9093 00b4 254B     		ldr	r3, .L560+44
 9094 00b6 93ED007A 		vldr.32	s14, [r3]
 9095 00ba 77EE877A 		vadd.f32	s15, s15, s14
 9096 00be 244B     		ldr	r3, .L560+48
 9097 00c0 C3ED007A 		vstr.32	s15, [r3]
 520:Core/Src/main.c **** 	yaw = yaw - (Gz * 0.02);
 9098              		.loc 1 520 2 is_stmt 1 view .LVU2151
 520:Core/Src/main.c **** 	yaw = yaw - (Gz * 0.02);
 9099              		.loc 1 520 5 is_stmt 0 view .LVU2152
 9100 00c4 BFEE007A 		vmov.f32	s14, #-1.0e+0
 9101 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 9102 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9103 00d0 06D4     		bmi	.L553
 520:Core/Src/main.c **** 	yaw = yaw - (Gz * 0.02);
 9104              		.loc 1 520 17 discriminator 1 view .LVU2153
 9105 00d2 B7EE007A 		vmov.f32	s14, #1.0e+0
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 296


 9106 00d6 F4EEC77A 		vcmpe.f32	s15, s14
 9107 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9108 00de 15DD     		ble	.L548
 9109              	.L553:
 521:Core/Src/main.c **** 	}
 9110              		.loc 1 521 2 is_stmt 1 view .LVU2154
 521:Core/Src/main.c **** 	}
 9111              		.loc 1 521 18 is_stmt 0 view .LVU2155
 9112 00e0 17EE900A 		vmov	r0, s15
 9113 00e4 FFF7FEFF 		bl	__aeabi_f2d
 9114              	.LVL644:
 9115 00e8 0FA3     		adr	r3, .L560+8
 9116 00ea D3E90023 		ldrd	r2, [r3]
 9117 00ee FFF7FEFF 		bl	__aeabi_dmul
 9118              	.LVL645:
 9119 00f2 0446     		mov	r4, r0
 9120 00f4 0D46     		mov	r5, r1
 521:Core/Src/main.c **** 	}
 9121              		.loc 1 521 12 view .LVU2156
 9122 00f6 174E     		ldr	r6, .L560+52
 9123 00f8 3068     		ldr	r0, [r6]	@ float
 9124 00fa FFF7FEFF 		bl	__aeabi_f2d
 9125              	.LVL646:
 9126 00fe 2246     		mov	r2, r4
 9127 0100 2B46     		mov	r3, r5
 9128 0102 FFF7FEFF 		bl	__aeabi_dsub
 9129              	.LVL647:
 9130 0106 FFF7FEFF 		bl	__aeabi_d2f
 9131              	.LVL648:
 521:Core/Src/main.c **** 	}
 9132              		.loc 1 521 6 view .LVU2157
 9133 010a 3060     		str	r0, [r6]	@ float
 9134              	.L548:
 524:Core/Src/main.c **** 
 9135              		.loc 1 524 1 view .LVU2158
 9136 010c 06B0     		add	sp, sp, #24
 9137              	.LCFI99:
 9138              		.cfi_remember_state
 9139              		.cfi_def_cfa_offset 16
 9140              		@ sp needed
 9141 010e 70BD     		pop	{r4, r5, r6, pc}
 9142              	.L558:
 9143              	.LCFI100:
 9144              		.cfi_restore_state
 501:Core/Src/main.c **** 		return;
 9145              		.loc 1 501 3 is_stmt 1 view .LVU2159
 9146 0110 FFF7FEFF 		bl	reInitIMU
 9147              	.LVL649:
 502:Core/Src/main.c **** 	}
 9148              		.loc 1 502 3 view .LVU2160
 9149 0114 FAE7     		b	.L548
 9150              	.L559:
 515:Core/Src/main.c **** 		}
 9151              		.loc 1 515 4 view .LVU2161
 515:Core/Src/main.c **** 		}
 9152              		.loc 1 515 14 is_stmt 0 view .LVU2162
 9153 0116 0D4B     		ldr	r3, .L560+44
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 297


 9154 0118 83ED007A 		vstr.32	s14, [r3]
 9155 011c CAE7     		b	.L551
 9156              	.L561:
 9157 011e 00BF     		.align	3
 9158              	.L560:
 9159 0120 00000000 		.word	0
 9160 0124 00606040 		.word	1080057856
 9161 0128 7B14AE47 		.word	1202590843
 9162 012c E17A943F 		.word	1066695393
 9163 0130 00000000 		.word	hi2c2
 9164 0134 00000000 		.word	.LANCHOR84
 9165 0138 00000000 		.word	.LANCHOR85
 9166 013c 00000000 		.word	.LANCHOR86
 9167 0140 00000000 		.word	Gx
 9168 0144 00000000 		.word	Gy
 9169 0148 00000000 		.word	.LANCHOR19
 9170 014c 00000000 		.word	.LANCHOR87
 9171 0150 00000000 		.word	Gz
 9172 0154 00000000 		.word	.LANCHOR6
 9173              		.cfi_endproc
 9174              	.LFE282:
 9176              		.section	.text.MotorForward,"ax",%progbits
 9177              		.align	1
 9178              		.syntax unified
 9179              		.thumb
 9180              		.thumb_func
 9181              		.fpu fpv4-sp-d16
 9183              	MotorForward:
 9184              	.LVL650:
 9185              	.LFB307:
1529:Core/Src/main.c **** 
 9186              		.loc 1 1529 57 is_stmt 1 view -0
 9187              		.cfi_startproc
 9188              		@ args = 0, pretend = 0, frame = 0
 9189              		@ frame_needed = 0, uses_anonymous_args = 0
1529:Core/Src/main.c **** 
 9190              		.loc 1 1529 57 is_stmt 0 view .LVU2164
 9191 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9192              	.LCFI101:
 9193              		.cfi_def_cfa_offset 40
 9194              		.cfi_offset 3, -40
 9195              		.cfi_offset 4, -36
 9196              		.cfi_offset 5, -32
 9197              		.cfi_offset 6, -28
 9198              		.cfi_offset 7, -24
 9199              		.cfi_offset 8, -20
 9200              		.cfi_offset 9, -16
 9201              		.cfi_offset 10, -12
 9202              		.cfi_offset 11, -8
 9203              		.cfi_offset 14, -4
 9204 0004 0646     		mov	r6, r0
 9205 0006 8B46     		mov	fp, r1
1531:Core/Src/main.c **** 
 9206              		.loc 1 1531 2 is_stmt 1 view .LVU2165
1531:Core/Src/main.c **** 
 9207              		.loc 1 1531 8 is_stmt 0 view .LVU2166
 9208 0008 314B     		ldr	r3, .L580
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 298


 9209 000a 0122     		movs	r2, #1
 9210 000c 1A70     		strb	r2, [r3]
1533:Core/Src/main.c **** 	ProcessIMUData();			// Compute Pitch/Roll
 9211              		.loc 1 1533 2 is_stmt 1 view .LVU2167
 9212 000e FFF7FEFF 		bl	MPU6050_Read_Gyro
 9213              	.LVL651:
1534:Core/Src/main.c **** 
 9214              		.loc 1 1534 2 view .LVU2168
 9215 0012 FFF7FEFF 		bl	ProcessIMUData
 9216              	.LVL652:
1536:Core/Src/main.c **** 
 9217              		.loc 1 1536 1 view .LVU2169
 9218              	.LBB104:
1536:Core/Src/main.c **** 
 9219              		.loc 1 1536 6 view .LVU2170
1536:Core/Src/main.c **** 
 9220              		.loc 1 1536 1 is_stmt 0 view .LVU2171
 9221 0016 31E0     		b	.L563
 9222              	.LVL653:
 9223              	.L575:
 9224              	.LBB105:
1543:Core/Src/main.c **** 	  uint16_t rightTilt = 0;
 9225              		.loc 1 1543 13 view .LVU2172
 9226 0018 0025     		movs	r5, #0
 9227              	.LVL654:
 9228              	.L565:
1549:Core/Src/main.c **** 		  rightTilt = fabs(roll * 50);
 9229              		.loc 1 1549 4 is_stmt 1 view .LVU2173
1549:Core/Src/main.c **** 		  rightTilt = fabs(roll * 50);
 9230              		.loc 1 1549 7 is_stmt 0 view .LVU2174
 9231 001a F5EEC07A 		vcmpe.f32	s15, #0
 9232 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9233 0022 45D4     		bmi	.L578
1544:Core/Src/main.c **** 
 9234              		.loc 1 1544 13 view .LVU2175
 9235 0024 0024     		movs	r4, #0
 9236              	.LVL655:
 9237              	.L567:
1553:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed - round(leftTilt);
 9238              		.loc 1 1553 4 is_stmt 1 view .LVU2176
1553:Core/Src/main.c **** 	  TIM4->CCR2 = currentSpeed - round(leftTilt);
 9239              		.loc 1 1553 15 is_stmt 0 view .LVU2177
 9240 0026 2B4F     		ldr	r7, .L580+4
 9241 0028 4FF0000A 		mov	r10, #0
 9242 002c C7F834A0 		str	r10, [r7, #52]
1554:Core/Src/main.c **** 
 9243              		.loc 1 1554 4 is_stmt 1 view .LVU2178
1554:Core/Src/main.c **** 
 9244              		.loc 1 1554 30 is_stmt 0 view .LVU2179
 9245 0030 FFF7FEFF 		bl	__aeabi_i2d
 9246              	.LVL656:
1554:Core/Src/main.c **** 
 9247              		.loc 1 1554 30 view .LVU2180
 9248 0034 8046     		mov	r8, r0
 9249 0036 8946     		mov	r9, r1
1554:Core/Src/main.c **** 
 9250              		.loc 1 1554 32 view .LVU2181
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 299


 9251 0038 2846     		mov	r0, r5
 9252 003a FFF7FEFF 		bl	__aeabi_ui2d
 9253              	.LVL657:
 9254 003e 0246     		mov	r2, r0
 9255 0040 0B46     		mov	r3, r1
1554:Core/Src/main.c **** 
 9256              		.loc 1 1554 30 view .LVU2182
 9257 0042 4046     		mov	r0, r8
 9258 0044 4946     		mov	r1, r9
 9259 0046 FFF7FEFF 		bl	__aeabi_dsub
 9260              	.LVL658:
1554:Core/Src/main.c **** 
 9261              		.loc 1 1554 15 view .LVU2183
 9262 004a FFF7FEFF 		bl	__aeabi_d2uiz
 9263              	.LVL659:
 9264 004e B863     		str	r0, [r7, #56]
1556:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 9265              		.loc 1 1556 4 is_stmt 1 view .LVU2184
1556:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 9266              		.loc 1 1556 32 is_stmt 0 view .LVU2185
 9267 0050 2046     		mov	r0, r4
 9268 0052 FFF7FEFF 		bl	__aeabi_ui2d
 9269              	.LVL660:
 9270 0056 0246     		mov	r2, r0
 9271 0058 0B46     		mov	r3, r1
1556:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 9272              		.loc 1 1556 30 view .LVU2186
 9273 005a 4046     		mov	r0, r8
 9274 005c 4946     		mov	r1, r9
 9275 005e FFF7FEFF 		bl	__aeabi_dsub
 9276              	.LVL661:
1556:Core/Src/main.c **** 	  TIM4->CCR4 = 0;
 9277              		.loc 1 1556 15 view .LVU2187
 9278 0062 FFF7FEFF 		bl	__aeabi_d2uiz
 9279              	.LVL662:
 9280 0066 F863     		str	r0, [r7, #60]
1557:Core/Src/main.c **** 
 9281              		.loc 1 1557 4 is_stmt 1 view .LVU2188
1557:Core/Src/main.c **** 
 9282              		.loc 1 1557 15 is_stmt 0 view .LVU2189
 9283 0068 C7F840A0 		str	r10, [r7, #64]
1559:Core/Src/main.c **** 
 9284              		.loc 1 1559 4 is_stmt 1 view .LVU2190
 9285 006c 0120     		movs	r0, #1
 9286 006e FFF7FEFF 		bl	HAL_Delay
 9287              	.LVL663:
1561:Core/Src/main.c **** 		  MotorStop();
 9288              		.loc 1 1561 4 view .LVU2191
1561:Core/Src/main.c **** 		  MotorStop();
 9289              		.loc 1 1561 8 is_stmt 0 view .LVU2192
 9290 0072 FFF7FEFF 		bl	CheckSecurity
 9291              	.LVL664:
1561:Core/Src/main.c **** 		  MotorStop();
 9292              		.loc 1 1561 7 view .LVU2193
 9293 0076 38B3     		cbz	r0, .L579
 9294              	.LBE105:
1536:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 300


 9295              		.loc 1 1536 65 is_stmt 1 discriminator 2 view .LVU2194
1536:Core/Src/main.c **** 
 9296              		.loc 1 1536 77 is_stmt 0 discriminator 2 view .LVU2195
 9297 0078 0436     		adds	r6, r6, #4
 9298              	.LVL665:
1536:Core/Src/main.c **** 
 9299              		.loc 1 1536 77 discriminator 2 view .LVU2196
 9300 007a B6B2     		uxth	r6, r6
 9301              	.LVL666:
 9302              	.L563:
1536:Core/Src/main.c **** 
 9303              		.loc 1 1536 40 is_stmt 1 discriminator 1 view .LVU2197
1536:Core/Src/main.c **** 
 9304              		.loc 1 1536 1 is_stmt 0 discriminator 1 view .LVU2198
 9305 007c 5E45     		cmp	r6, fp
 9306 007e 25D2     		bcs	.L562
 9307              	.LBB106:
1538:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 9308              		.loc 1 1538 4 is_stmt 1 view .LVU2199
1538:Core/Src/main.c **** 	  if (currentSpeed >= maxSpeed) {
 9309              		.loc 1 1538 17 is_stmt 0 view .LVU2200
 9310 0080 F01C     		adds	r0, r6, #3
 9311 0082 80B2     		uxth	r0, r0
 9312              	.LVL667:
1539:Core/Src/main.c **** 		  break;
 9313              		.loc 1 1539 4 is_stmt 1 view .LVU2201
1539:Core/Src/main.c **** 		  break;
 9314              		.loc 1 1539 7 is_stmt 0 view .LVU2202
 9315 0084 8345     		cmp	fp, r0
 9316 0086 21D9     		bls	.L562
1543:Core/Src/main.c **** 	  uint16_t rightTilt = 0;
 9317              		.loc 1 1543 4 is_stmt 1 view .LVU2203
 9318              	.LVL668:
1544:Core/Src/main.c **** 
 9319              		.loc 1 1544 4 view .LVU2204
1546:Core/Src/main.c **** 		  leftTilt = fabs(roll * 50);
 9320              		.loc 1 1546 4 view .LVU2205
1546:Core/Src/main.c **** 		  leftTilt = fabs(roll * 50);
 9321              		.loc 1 1546 13 is_stmt 0 view .LVU2206
 9322 0088 134B     		ldr	r3, .L580+8
 9323 008a D3ED007A 		vldr.32	s15, [r3]
1546:Core/Src/main.c **** 		  leftTilt = fabs(roll * 50);
 9324              		.loc 1 1546 7 view .LVU2207
 9325 008e F5EEC07A 		vcmpe.f32	s15, #0
 9326 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9327 0096 BFDD     		ble	.L575
1547:Core/Src/main.c **** 	  }
 9328              		.loc 1 1547 5 is_stmt 1 view .LVU2208
1547:Core/Src/main.c **** 	  }
 9329              		.loc 1 1547 26 is_stmt 0 view .LVU2209
 9330 0098 9FED107A 		vldr.32	s14, .L580+12
 9331 009c 27EE877A 		vmul.f32	s14, s15, s14
1547:Core/Src/main.c **** 	  }
 9332              		.loc 1 1547 16 view .LVU2210
 9333 00a0 B0EEC77A 		vabs.f32	s14, s14
1547:Core/Src/main.c **** 	  }
 9334              		.loc 1 1547 14 view .LVU2211
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 301


 9335 00a4 BCEEC77A 		vcvt.u32.f32	s14, s14
 9336 00a8 17EE103A 		vmov	r3, s14	@ int
 9337 00ac 9DB2     		uxth	r5, r3
 9338              	.LVL669:
1547:Core/Src/main.c **** 	  }
 9339              		.loc 1 1547 14 view .LVU2212
 9340 00ae B4E7     		b	.L565
 9341              	.L578:
1550:Core/Src/main.c **** 	  }
 9342              		.loc 1 1550 5 is_stmt 1 view .LVU2213
1550:Core/Src/main.c **** 	  }
 9343              		.loc 1 1550 27 is_stmt 0 view .LVU2214
 9344 00b0 9FED0A7A 		vldr.32	s14, .L580+12
 9345 00b4 67EE877A 		vmul.f32	s15, s15, s14
1550:Core/Src/main.c **** 	  }
 9346              		.loc 1 1550 17 view .LVU2215
 9347 00b8 F0EEE77A 		vabs.f32	s15, s15
1550:Core/Src/main.c **** 	  }
 9348              		.loc 1 1550 15 view .LVU2216
 9349 00bc FCEEE77A 		vcvt.u32.f32	s15, s15
 9350 00c0 17EE903A 		vmov	r3, s15	@ int
 9351 00c4 9CB2     		uxth	r4, r3
 9352              	.LVL670:
1550:Core/Src/main.c **** 	  }
 9353              		.loc 1 1550 15 view .LVU2217
 9354 00c6 AEE7     		b	.L567
 9355              	.LVL671:
 9356              	.L579:
1562:Core/Src/main.c **** 		  break;
 9357              		.loc 1 1562 5 is_stmt 1 view .LVU2218
 9358 00c8 FFF7FEFF 		bl	MotorStop
 9359              	.LVL672:
1563:Core/Src/main.c **** 	  }
 9360              		.loc 1 1563 5 view .LVU2219
 9361              	.L562:
1563:Core/Src/main.c **** 	  }
 9362              		.loc 1 1563 5 is_stmt 0 view .LVU2220
 9363              	.LBE106:
 9364              	.LBE104:
1567:Core/Src/main.c **** void MotorBackward(uint16_t minSpeed, uint16_t maxSpeed, uint16_t time_ms) {
 9365              		.loc 1 1567 1 view .LVU2221
 9366 00cc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9367              	.L581:
 9368              		.align	2
 9369              	.L580:
 9370 00d0 00000000 		.word	.LANCHOR11
 9371 00d4 00080040 		.word	1073743872
 9372 00d8 00000000 		.word	.LANCHOR4
 9373 00dc 00004842 		.word	1112014848
 9374              		.cfi_endproc
 9375              	.LFE307:
 9377              		.section	.rodata.CheckState.str1.4,"aMS",%progbits,1
 9378              		.align	2
 9379              	.LC113:
 9380 0000 4F555453 		.ascii	"OUTSIDE timer triggered\015\012\000"
 9380      49444520 
 9380      74696D65 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 302


 9380      72207472 
 9380      69676765 
 9381 001a 0000     		.align	2
 9382              	.LC114:
 9383 001c 53746174 		.ascii	"State Fail, waiting...\015\012\000"
 9383      65204661 
 9383      696C2C20 
 9383      77616974 
 9383      696E672E 
 9384 0035 000000   		.align	2
 9385              	.LC115:
 9386 0038 4F766572 		.ascii	"Overturn\015\012\000"
 9386      7475726E 
 9386      0D0A00
 9387 0043 00       		.align	2
 9388              	.LC116:
 9389 0044 4F627374 		.ascii	"Obstacle\015\012\000"
 9389      61636C65 
 9389      0D0A00
 9390 004f 00       		.align	2
 9391              	.LC117:
 9392 0050 476F696E 		.ascii	"Going Backward\015\012\000"
 9392      67204261 
 9392      636B7761 
 9392      72640D0A 
 9392      00
 9393 0061 000000   		.align	2
 9394              	.LC118:
 9395 0064 476F696E 		.ascii	"Going Forward\015\012\000"
 9395      6720466F 
 9395      72776172 
 9395      640D0A00 
 9396              		.align	2
 9397              	.LC119:
 9398 0074 53544F50 		.ascii	"STOP + Security Fail\015\012\000"
 9398      202B2053 
 9398      65637572 
 9398      69747920 
 9398      4661696C 
 9399              		.section	.text.CheckState,"ax",%progbits
 9400              		.align	1
 9401              		.syntax unified
 9402              		.thumb
 9403              		.thumb_func
 9404              		.fpu fpv4-sp-d16
 9406              	CheckState:
 9407              	.LFB314:
1714:Core/Src/main.c **** 
 9408              		.loc 1 1714 23 is_stmt 1 view -0
 9409              		.cfi_startproc
 9410              		@ args = 0, pretend = 0, frame = 0
 9411              		@ frame_needed = 0, uses_anonymous_args = 0
 9412 0000 08B5     		push	{r3, lr}
 9413              	.LCFI102:
 9414              		.cfi_def_cfa_offset 8
 9415              		.cfi_offset 3, -8
 9416              		.cfi_offset 14, -4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 303


1719:Core/Src/main.c **** 
 9417              		.loc 1 1719 2 view .LVU2223
1719:Core/Src/main.c **** 
 9418              		.loc 1 1719 20 is_stmt 0 view .LVU2224
 9419 0002 BF4B     		ldr	r3, .L630
 9420 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1719:Core/Src/main.c **** 
 9421              		.loc 1 1719 5 view .LVU2225
 9422 0006 002B     		cmp	r3, #0
 9423 0008 00F09080 		beq	.L582
1721:Core/Src/main.c **** 		cutterOFF();
 9424              		.loc 1 1721 2 is_stmt 1 view .LVU2226
1721:Core/Src/main.c **** 		cutterOFF();
 9425              		.loc 1 1721 19 is_stmt 0 view .LVU2227
 9426 000c BD4B     		ldr	r3, .L630+4
 9427 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1721:Core/Src/main.c **** 		cutterOFF();
 9428              		.loc 1 1721 5 view .LVU2228
 9429 0010 002B     		cmp	r3, #0
 9430 0012 00F08280 		beq	.L612
1727:Core/Src/main.c **** 		MotorStop();
 9431              		.loc 1 1727 2 is_stmt 1 view .LVU2229
1727:Core/Src/main.c **** 		MotorStop();
 9432              		.loc 1 1727 15 is_stmt 0 view .LVU2230
 9433 0016 BC4B     		ldr	r3, .L630+8
 9434 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1727:Core/Src/main.c **** 		MotorStop();
 9435              		.loc 1 1727 5 view .LVU2231
 9436 001a 002B     		cmp	r3, #0
 9437 001c 00F08280 		beq	.L613
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9438              		.loc 1 1732 2 is_stmt 1 view .LVU2232
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9439              		.loc 1 1732 6 is_stmt 0 view .LVU2233
 9440 0020 FFF7FEFF 		bl	HAL_GetTick
 9441              	.LVL673:
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9442              		.loc 1 1732 20 view .LVU2234
 9443 0024 B94B     		ldr	r3, .L630+12
 9444 0026 1B68     		ldr	r3, [r3]
 9445 0028 C01A     		subs	r0, r0, r3
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9446              		.loc 1 1732 58 view .LVU2235
 9447 002a B94B     		ldr	r3, .L630+16
 9448 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9449 002e 4FF47A73 		mov	r3, #1000
 9450 0032 03FB02F3 		mul	r3, r3, r2
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9451              		.loc 1 1732 5 view .LVU2236
 9452 0036 9842     		cmp	r0, r3
 9453 0038 03D3     		bcc	.L586
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9454              		.loc 1 1732 76 discriminator 1 view .LVU2237
 9455 003a B64B     		ldr	r3, .L630+20
 9456 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1732:Core/Src/main.c **** 		Serial_Console("OUTSIDE timer triggered\r\n");
 9457              		.loc 1 1732 66 discriminator 1 view .LVU2238
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 304


 9458 003e 002B     		cmp	r3, #0
 9459 0040 75D0     		beq	.L614
 9460              	.L586:
1738:Core/Src/main.c **** 		unDock();
 9461              		.loc 1 1738 2 is_stmt 1 view .LVU2239
1738:Core/Src/main.c **** 		unDock();
 9462              		.loc 1 1738 13 is_stmt 0 view .LVU2240
 9463 0042 B44B     		ldr	r3, .L630+20
 9464 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1738:Core/Src/main.c **** 		unDock();
 9465              		.loc 1 1738 5 view .LVU2241
 9466 0046 012B     		cmp	r3, #1
 9467 0048 79D0     		beq	.L615
1743:Core/Src/main.c **** 		MotorStop();
 9468              		.loc 1 1743 2 is_stmt 1 view .LVU2242
1743:Core/Src/main.c **** 		MotorStop();
 9469              		.loc 1 1743 12 is_stmt 0 view .LVU2243
 9470 004a B34B     		ldr	r3, .L630+24
 9471 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
1743:Core/Src/main.c **** 		MotorStop();
 9472              		.loc 1 1743 5 view .LVU2244
 9473 004e 0629     		cmp	r1, #6
 9474 0050 78D0     		beq	.L616
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9475              		.loc 1 1753 2 is_stmt 1 view .LVU2245
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9476              		.loc 1 1753 6 is_stmt 0 view .LVU2246
 9477 0052 B24B     		ldr	r3, .L630+28
 9478 0054 D3ED007A 		vldr.32	s15, [r3]
 9479 0058 FDEEE77A 		vcvt.s32.f32	s15, s15
 9480 005c 17EE903A 		vmov	r3, s15	@ int
 9481 0060 002B     		cmp	r3, #0
 9482 0062 B8BF     		it	lt
 9483 0064 5B42     		rsblt	r3, r3, #0
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9484              		.loc 1 1753 17 view .LVU2247
 9485 0066 AE4A     		ldr	r2, .L630+32
 9486 0068 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9487              		.loc 1 1753 5 view .LVU2248
 9488 006a 9342     		cmp	r3, r2
 9489 006c 7ADA     		bge	.L591
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9490              		.loc 1 1753 38 discriminator 1 view .LVU2249
 9491 006e AD4B     		ldr	r3, .L630+36
 9492 0070 D3ED007A 		vldr.32	s15, [r3]
 9493 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 9494 0078 17EE903A 		vmov	r3, s15	@ int
 9495 007c 002B     		cmp	r3, #0
 9496 007e B8BF     		it	lt
 9497 0080 5B42     		rsblt	r3, r3, #0
1753:Core/Src/main.c **** 		Serial_Console("Overturn\r\n");
 9498              		.loc 1 1753 35 discriminator 1 view .LVU2250
 9499 0082 9A42     		cmp	r2, r3
 9500 0084 6EDD     		ble	.L591
1760:Core/Src/main.c **** 		MotorStop();
 9501              		.loc 1 1760 7 is_stmt 1 view .LVU2251
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 305


1760:Core/Src/main.c **** 		MotorStop();
 9502              		.loc 1 1760 22 is_stmt 0 view .LVU2252
 9503 0086 A84B     		ldr	r3, .L630+40
 9504 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1760:Core/Src/main.c **** 		MotorStop();
 9505              		.loc 1 1760 10 view .LVU2253
 9506 008a 012B     		cmp	r3, #1
 9507 008c 72D0     		beq	.L593
1760:Core/Src/main.c **** 		MotorStop();
 9508              		.loc 1 1760 42 discriminator 1 view .LVU2254
 9509 008e A74B     		ldr	r3, .L630+44
 9510 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1760:Core/Src/main.c **** 		MotorStop();
 9511              		.loc 1 1760 27 discriminator 1 view .LVU2255
 9512 0092 012B     		cmp	r3, #1
 9513 0094 6ED0     		beq	.L593
1760:Core/Src/main.c **** 		MotorStop();
 9514              		.loc 1 1760 62 discriminator 2 view .LVU2256
 9515 0096 A64B     		ldr	r3, .L630+48
 9516 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1760:Core/Src/main.c **** 		MotorStop();
 9517              		.loc 1 1760 47 discriminator 2 view .LVU2257
 9518 009a 012B     		cmp	r3, #1
 9519 009c 6AD0     		beq	.L593
1778:Core/Src/main.c **** 		MotorStop();
 9520              		.loc 1 1778 7 is_stmt 1 view .LVU2258
1778:Core/Src/main.c **** 		MotorStop();
 9521              		.loc 1 1778 10 is_stmt 0 view .LVU2259
 9522 009e 0129     		cmp	r1, #1
 9523 00a0 00F0A080 		beq	.L617
 9524              	.L598:
1816:Core/Src/main.c **** 
 9525              		.loc 1 1816 7 is_stmt 1 view .LVU2260
1816:Core/Src/main.c **** 
 9526              		.loc 1 1816 17 is_stmt 0 view .LVU2261
 9527 00a4 9C4B     		ldr	r3, .L630+24
 9528 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1816:Core/Src/main.c **** 
 9529              		.loc 1 1816 10 view .LVU2262
 9530 00a8 012B     		cmp	r3, #1
 9531 00aa 00F06581 		beq	.L618
1822:Core/Src/main.c **** 		HAL_Delay(500);
 9532              		.loc 1 1822 7 is_stmt 1 view .LVU2263
1822:Core/Src/main.c **** 		HAL_Delay(500);
 9533              		.loc 1 1822 10 is_stmt 0 view .LVU2264
 9534 00ae 002B     		cmp	r3, #0
 9535 00b0 00F07081 		beq	.L619
 9536              	.L605:
1832:Core/Src/main.c **** 		HAL_Delay(500);
 9537              		.loc 1 1832 7 is_stmt 1 view .LVU2265
1832:Core/Src/main.c **** 		HAL_Delay(500);
 9538              		.loc 1 1832 17 is_stmt 0 view .LVU2266
 9539 00b4 984B     		ldr	r3, .L630+24
 9540 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1832:Core/Src/main.c **** 		HAL_Delay(500);
 9541              		.loc 1 1832 10 view .LVU2267
 9542 00b8 C3BB     		cbnz	r3, .L582
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 306


1832:Core/Src/main.c **** 		HAL_Delay(500);
 9543              		.loc 1 1832 28 discriminator 1 view .LVU2268
 9544 00ba FFF7FEFF 		bl	CheckSecurity
 9545              	.LVL674:
1832:Core/Src/main.c **** 		HAL_Delay(500);
 9546              		.loc 1 1832 25 discriminator 1 view .LVU2269
 9547 00be A8BB     		cbnz	r0, .L582
1833:Core/Src/main.c **** 		Serial_Console("STOP + Security Fail\r\n");
 9548              		.loc 1 1833 3 is_stmt 1 view .LVU2270
 9549 00c0 4FF4FA70 		mov	r0, #500
 9550 00c4 FFF7FEFF 		bl	HAL_Delay
 9551              	.LVL675:
1834:Core/Src/main.c **** 
 9552              		.loc 1 1834 3 view .LVU2271
 9553 00c8 9A48     		ldr	r0, .L630+52
 9554 00ca FFF7FEFF 		bl	Serial_Console
 9555              	.LVL676:
1836:Core/Src/main.c **** 
 9556              		.loc 1 1836 3 view .LVU2272
 9557 00ce FFF7FEFF 		bl	CheckSecurity
 9558              	.LVL677:
1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9559              		.loc 1 1838 3 view .LVU2273
1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9560              		.loc 1 1838 19 is_stmt 0 view .LVU2274
 9561 00d2 994B     		ldr	r3, .L630+56
 9562 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9563              		.loc 1 1838 6 view .LVU2275
 9564 00d6 012B     		cmp	r3, #1
 9565 00d8 00F07C81 		beq	.L620
 9566              	.L607:
1841:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9567              		.loc 1 1841 8 is_stmt 1 view .LVU2276
1841:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9568              		.loc 1 1841 24 is_stmt 0 view .LVU2277
 9569 00dc 974A     		ldr	r2, .L630+60
 9570 00de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1841:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9571              		.loc 1 1841 11 view .LVU2278
 9572 00e0 012A     		cmp	r2, #1
 9573 00e2 00F08C81 		beq	.L621
 9574              	.L609:
1844:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed,MotorMaxSpeed, 3000);
 9575              		.loc 1 1844 8 is_stmt 1 view .LVU2279
1844:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed,MotorMaxSpeed, 3000);
 9576              		.loc 1 1844 11 is_stmt 0 view .LVU2280
 9577 00e6 022B     		cmp	r3, #2
 9578 00e8 20D1     		bne	.L582
1844:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed,MotorMaxSpeed, 3000);
 9579              		.loc 1 1844 35 discriminator 1 view .LVU2281
 9580 00ea 022A     		cmp	r2, #2
 9581 00ec 1ED1     		bne	.L582
1845:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9582              		.loc 1 1845 4 is_stmt 1 view .LVU2282
 9583 00ee 40F6B832 		movw	r2, #3000
 9584 00f2 40F61F51 		movw	r1, #3359
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 307


 9585 00f6 4FF4FA60 		mov	r0, #2000
 9586 00fa FFF7FEFF 		bl	MotorBackward
 9587              	.LVL678:
1846:Core/Src/main.c **** 		}
 9588              		.loc 1 1846 4 view .LVU2283
1846:Core/Src/main.c **** 		}
 9589              		.loc 1 1846 51 is_stmt 0 view .LVU2284
 9590 00fe 4FF44870 		mov	r0, #800
 9591 0102 FFF7FEFF 		bl	rnd
 9592              	.LVL679:
1846:Core/Src/main.c **** 		}
 9593              		.loc 1 1846 4 view .LVU2285
 9594 0106 00F59672 		add	r2, r0, #300
 9595 010a 92B2     		uxth	r2, r2
 9596 010c 40F61F51 		movw	r1, #3359
 9597 0110 4FF4FA60 		mov	r0, #2000
 9598 0114 FFF7FEFF 		bl	MotorRight
 9599              	.LVL680:
 9600 0118 08E0     		b	.L582
 9601              	.L612:
1722:Core/Src/main.c **** 		MotorStop();
 9602              		.loc 1 1722 3 is_stmt 1 view .LVU2286
 9603 011a FFF7FEFF 		bl	cutterOFF
 9604              	.LVL681:
1723:Core/Src/main.c **** 		return;
 9605              		.loc 1 1723 3 view .LVU2287
 9606 011e FFF7FEFF 		bl	MotorStop
 9607              	.LVL682:
1724:Core/Src/main.c **** 	}
 9608              		.loc 1 1724 3 view .LVU2288
 9609 0122 03E0     		b	.L582
 9610              	.L613:
1728:Core/Src/main.c **** 		cutterOFF();
 9611              		.loc 1 1728 3 view .LVU2289
 9612 0124 FFF7FEFF 		bl	MotorStop
 9613              	.LVL683:
1729:Core/Src/main.c **** 		return;
 9614              		.loc 1 1729 3 view .LVU2290
 9615 0128 FFF7FEFF 		bl	cutterOFF
 9616              	.LVL684:
1730:Core/Src/main.c **** 	}
 9617              		.loc 1 1730 3 view .LVU2291
 9618              	.L582:
1850:Core/Src/main.c **** 
 9619              		.loc 1 1850 1 is_stmt 0 view .LVU2292
 9620 012c 08BD     		pop	{r3, pc}
 9621              	.L614:
1733:Core/Src/main.c **** 		MotorStop();
 9622              		.loc 1 1733 3 is_stmt 1 view .LVU2293
 9623 012e 8448     		ldr	r0, .L630+64
 9624 0130 FFF7FEFF 		bl	Serial_Console
 9625              	.LVL685:
1734:Core/Src/main.c **** 		cutterOFF();
 9626              		.loc 1 1734 3 view .LVU2294
 9627 0134 FFF7FEFF 		bl	MotorStop
 9628              	.LVL686:
1735:Core/Src/main.c **** 		return;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 308


 9629              		.loc 1 1735 3 view .LVU2295
 9630 0138 FFF7FEFF 		bl	cutterOFF
 9631              	.LVL687:
1736:Core/Src/main.c **** 	}
 9632              		.loc 1 1736 3 view .LVU2296
 9633 013c F6E7     		b	.L582
 9634              	.L615:
1739:Core/Src/main.c **** 		return;
 9635              		.loc 1 1739 3 view .LVU2297
 9636 013e FFF7FEFF 		bl	unDock
 9637              	.LVL688:
1740:Core/Src/main.c **** 		}
 9638              		.loc 1 1740 3 view .LVU2298
 9639 0142 F3E7     		b	.L582
 9640              	.L616:
1744:Core/Src/main.c **** 		cutterOFF();
 9641              		.loc 1 1744 3 view .LVU2299
 9642 0144 FFF7FEFF 		bl	MotorStop
 9643              	.LVL689:
1745:Core/Src/main.c **** 		while (CheckSecurity() != SECURITY_OK) {
 9644              		.loc 1 1745 3 view .LVU2300
 9645 0148 FFF7FEFF 		bl	cutterOFF
 9646              	.LVL690:
1746:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
 9647              		.loc 1 1746 3 view .LVU2301
1746:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
 9648              		.loc 1 1746 9 is_stmt 0 view .LVU2302
 9649 014c 02E0     		b	.L589
 9650              	.L590:
1747:Core/Src/main.c **** 		}
 9651              		.loc 1 1747 4 is_stmt 1 view .LVU2303
 9652 014e 7D48     		ldr	r0, .L630+68
 9653 0150 FFF7FEFF 		bl	Serial_Console
 9654              	.LVL691:
 9655              	.L589:
1746:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
 9656              		.loc 1 1746 9 view .LVU2304
1746:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
 9657              		.loc 1 1746 10 is_stmt 0 view .LVU2305
 9658 0154 FFF7FEFF 		bl	CheckSecurity
 9659              	.LVL692:
1746:Core/Src/main.c **** 			Serial_Console("State Fail, waiting...\r\n");
 9660              		.loc 1 1746 9 view .LVU2306
 9661 0158 0128     		cmp	r0, #1
 9662 015a F8D1     		bne	.L590
1749:Core/Src/main.c **** 		return;
 9663              		.loc 1 1749 3 is_stmt 1 view .LVU2307
1749:Core/Src/main.c **** 		return;
 9664              		.loc 1 1749 9 is_stmt 0 view .LVU2308
 9665 015c 6E4B     		ldr	r3, .L630+24
 9666 015e 0022     		movs	r2, #0
 9667 0160 1A70     		strb	r2, [r3]
1750:Core/Src/main.c **** 	}
 9668              		.loc 1 1750 3 is_stmt 1 view .LVU2309
 9669 0162 E3E7     		b	.L582
 9670              	.L591:
1754:Core/Src/main.c **** 		MotorHardBrake();
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 309


 9671              		.loc 1 1754 3 view .LVU2310
 9672 0164 7848     		ldr	r0, .L630+72
 9673 0166 FFF7FEFF 		bl	Serial_Console
 9674              	.LVL693:
1755:Core/Src/main.c **** 		cutterHardBreak();
 9675              		.loc 1 1755 3 view .LVU2311
 9676 016a FFF7FEFF 		bl	MotorHardBrake
 9677              	.LVL694:
1756:Core/Src/main.c **** 		return;
 9678              		.loc 1 1756 3 view .LVU2312
 9679 016e FFF7FEFF 		bl	cutterHardBreak
 9680              	.LVL695:
1757:Core/Src/main.c **** 	}
 9681              		.loc 1 1757 3 view .LVU2313
 9682 0172 DBE7     		b	.L582
 9683              	.L593:
1761:Core/Src/main.c **** 		Serial_Console("Obstacle\r\n");
 9684              		.loc 1 1761 3 view .LVU2314
 9685 0174 FFF7FEFF 		bl	MotorStop
 9686              	.LVL696:
1762:Core/Src/main.c **** 		HAL_Delay(500);
 9687              		.loc 1 1762 3 view .LVU2315
 9688 0178 7448     		ldr	r0, .L630+76
 9689 017a FFF7FEFF 		bl	Serial_Console
 9690              	.LVL697:
1763:Core/Src/main.c **** 		if (AVOID_LEFT == 1) {
 9691              		.loc 1 1763 3 view .LVU2316
 9692 017e 4FF4FA70 		mov	r0, #500
 9693 0182 FFF7FEFF 		bl	HAL_Delay
 9694              	.LVL698:
1764:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9695              		.loc 1 1764 3 view .LVU2317
1764:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9696              		.loc 1 1764 18 is_stmt 0 view .LVU2318
 9697 0186 684B     		ldr	r3, .L630+40
 9698 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1764:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9699              		.loc 1 1764 6 view .LVU2319
 9700 018a 012B     		cmp	r3, #1
 9701 018c 0FD0     		beq	.L622
 9702              	.L595:
1767:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 1000);
 9703              		.loc 1 1767 3 is_stmt 1 view .LVU2320
1767:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 1000);
 9704              		.loc 1 1767 19 is_stmt 0 view .LVU2321
 9705 018e 674B     		ldr	r3, .L630+44
 9706 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1767:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 1000);
 9707              		.loc 1 1767 6 view .LVU2322
 9708 0192 012B     		cmp	r3, #1
 9709 0194 14D0     		beq	.L623
 9710              	.L596:
1770:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9711              		.loc 1 1770 3 is_stmt 1 view .LVU2323
1770:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9712              		.loc 1 1770 19 is_stmt 0 view .LVU2324
 9713 0196 664B     		ldr	r3, .L630+48
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 310


 9714 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1770:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 1000);
 9715              		.loc 1 1770 6 view .LVU2325
 9716 019a 012B     		cmp	r3, #1
 9717 019c 19D0     		beq	.L624
 9718              	.L597:
1773:Core/Src/main.c **** 		AVOID_RIGHT = 0;
 9719              		.loc 1 1773 3 is_stmt 1 view .LVU2326
1773:Core/Src/main.c **** 		AVOID_RIGHT = 0;
 9720              		.loc 1 1773 14 is_stmt 0 view .LVU2327
 9721 019e 0023     		movs	r3, #0
 9722 01a0 614A     		ldr	r2, .L630+40
 9723 01a2 1370     		strb	r3, [r2]
1774:Core/Src/main.c **** 		AVOID_FRONT = 0;
 9724              		.loc 1 1774 3 is_stmt 1 view .LVU2328
1774:Core/Src/main.c **** 		AVOID_FRONT = 0;
 9725              		.loc 1 1774 15 is_stmt 0 view .LVU2329
 9726 01a4 614A     		ldr	r2, .L630+44
 9727 01a6 1370     		strb	r3, [r2]
1775:Core/Src/main.c **** 	}
 9728              		.loc 1 1775 3 is_stmt 1 view .LVU2330
1775:Core/Src/main.c **** 	}
 9729              		.loc 1 1775 15 is_stmt 0 view .LVU2331
 9730 01a8 614A     		ldr	r2, .L630+48
 9731 01aa 1370     		strb	r3, [r2]
 9732 01ac BEE7     		b	.L582
 9733              	.L622:
1765:Core/Src/main.c **** 		}
 9734              		.loc 1 1765 4 is_stmt 1 view .LVU2332
 9735 01ae 4FF47A72 		mov	r2, #1000
 9736 01b2 40F61F51 		movw	r1, #3359
 9737 01b6 4FF4FA60 		mov	r0, #2000
 9738 01ba FFF7FEFF 		bl	MotorRight
 9739              	.LVL699:
 9740 01be E6E7     		b	.L595
 9741              	.L623:
1768:Core/Src/main.c **** 		}
 9742              		.loc 1 1768 4 view .LVU2333
 9743 01c0 4FF47A72 		mov	r2, #1000
 9744 01c4 40F61F51 		movw	r1, #3359
 9745 01c8 4FF4FA60 		mov	r0, #2000
 9746 01cc FFF7FEFF 		bl	MotorLeft
 9747              	.LVL700:
 9748 01d0 E1E7     		b	.L596
 9749              	.L624:
1771:Core/Src/main.c **** 		}
 9750              		.loc 1 1771 4 view .LVU2334
 9751 01d2 4FF47A72 		mov	r2, #1000
 9752 01d6 40F61F51 		movw	r1, #3359
 9753 01da 4FF4FA60 		mov	r0, #2000
 9754 01de FFF7FEFF 		bl	MotorRight
 9755              	.LVL701:
 9756 01e2 DCE7     		b	.L597
 9757              	.L617:
1778:Core/Src/main.c **** 		MotorStop();
 9758              		.loc 1 1778 31 is_stmt 0 discriminator 1 view .LVU2335
 9759 01e4 FFF7FEFF 		bl	CheckSecurity
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 311


 9760              	.LVL702:
1778:Core/Src/main.c **** 		MotorStop();
 9761              		.loc 1 1778 28 discriminator 1 view .LVU2336
 9762 01e8 0028     		cmp	r0, #0
 9763 01ea 7FF45BAF 		bne	.L598
1779:Core/Src/main.c **** 		TimeToGoHome();			// Check if within working hours, if not, go home
 9764              		.loc 1 1779 3 is_stmt 1 view .LVU2337
 9765 01ee FFF7FEFF 		bl	MotorStop
 9766              	.LVL703:
1780:Core/Src/main.c **** 		if (perimeterTracking == 1) {
 9767              		.loc 1 1780 3 view .LVU2338
 9768 01f2 FFF7FEFF 		bl	TimeToGoHome
 9769              	.LVL704:
1781:Core/Src/main.c **** 			cutterOFF();
 9770              		.loc 1 1781 3 view .LVU2339
1781:Core/Src/main.c **** 			cutterOFF();
 9771              		.loc 1 1781 25 is_stmt 0 view .LVU2340
 9772 01f6 564B     		ldr	r3, .L630+80
 9773 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1781:Core/Src/main.c **** 			cutterOFF();
 9774              		.loc 1 1781 6 view .LVU2341
 9775 01fa 012B     		cmp	r3, #1
 9776 01fc 12D0     		beq	.L625
1787:Core/Src/main.c **** 
 9777              		.loc 1 1787 3 is_stmt 1 view .LVU2342
 9778 01fe 4FF4FA70 		mov	r0, #500
 9779 0202 FFF7FEFF 		bl	HAL_Delay
 9780              	.LVL705:
1789:Core/Src/main.c **** 
 9781              		.loc 1 1789 3 view .LVU2343
 9782 0206 FFF7FEFF 		bl	CheckSecurity
 9783              	.LVL706:
1791:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9784              		.loc 1 1791 3 view .LVU2344
1791:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9785              		.loc 1 1791 19 is_stmt 0 view .LVU2345
 9786 020a 4B4B     		ldr	r3, .L630+56
 9787 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1791:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9788              		.loc 1 1791 6 view .LVU2346
 9789 020e 022B     		cmp	r3, #2
 9790 0210 12D0     		beq	.L626
 9791              	.L600:
1796:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9792              		.loc 1 1796 8 is_stmt 1 view .LVU2347
1796:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9793              		.loc 1 1796 11 is_stmt 0 view .LVU2348
 9794 0212 012B     		cmp	r3, #1
 9795 0214 2ED0     		beq	.L627
 9796              	.L602:
1801:Core/Src/main.c **** 
 9797              		.loc 1 1801 8 is_stmt 1 view .LVU2349
1801:Core/Src/main.c **** 
 9798              		.loc 1 1801 11 is_stmt 0 view .LVU2350
 9799 0216 022B     		cmp	r3, #2
 9800 0218 4AD0     		beq	.L628
 9801              	.L601:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 312


1814:Core/Src/main.c **** 	}
 9802              		.loc 1 1814 3 is_stmt 1 view .LVU2351
 9803 021a 4FF4FA70 		mov	r0, #500
 9804 021e FFF7FEFF 		bl	HAL_Delay
 9805              	.LVL707:
 9806 0222 83E7     		b	.L582
 9807              	.L625:
1782:Core/Src/main.c **** 			perimeterTrackingActive = 1;
 9808              		.loc 1 1782 4 view .LVU2352
 9809 0224 FFF7FEFF 		bl	cutterOFF
 9810              	.LVL708:
1783:Core/Src/main.c **** 			HAL_Delay(500);
 9811              		.loc 1 1783 4 view .LVU2353
1783:Core/Src/main.c **** 			HAL_Delay(500);
 9812              		.loc 1 1783 28 is_stmt 0 view .LVU2354
 9813 0228 4A4B     		ldr	r3, .L630+84
 9814 022a 0122     		movs	r2, #1
 9815 022c 1A70     		strb	r2, [r3]
1784:Core/Src/main.c **** 			return;
 9816              		.loc 1 1784 4 is_stmt 1 view .LVU2355
 9817 022e 4FF4FA70 		mov	r0, #500
 9818 0232 FFF7FEFF 		bl	HAL_Delay
 9819              	.LVL709:
1785:Core/Src/main.c **** 		}
 9820              		.loc 1 1785 4 view .LVU2356
 9821 0236 79E7     		b	.L582
 9822              	.L626:
1791:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9823              		.loc 1 1791 45 is_stmt 0 discriminator 1 view .LVU2357
 9824 0238 404A     		ldr	r2, .L630+60
 9825 023a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1791:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9826              		.loc 1 1791 30 discriminator 1 view .LVU2358
 9827 023c 012A     		cmp	r2, #1
 9828 023e E8D1     		bne	.L600
1792:Core/Src/main.c **** 			HAL_Delay(500);
 9829              		.loc 1 1792 4 is_stmt 1 view .LVU2359
 9830 0240 4FF4C872 		mov	r2, #400
 9831 0244 40F61F51 		movw	r1, #3359
 9832 0248 4FF4FA60 		mov	r0, #2000
 9833 024c FFF7FEFF 		bl	MotorBackward
 9834              	.LVL710:
1793:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9835              		.loc 1 1793 4 view .LVU2360
 9836 0250 4FF4FA70 		mov	r0, #500
 9837 0254 FFF7FEFF 		bl	HAL_Delay
 9838              	.LVL711:
1794:Core/Src/main.c **** 		}
 9839              		.loc 1 1794 4 view .LVU2361
1794:Core/Src/main.c **** 		}
 9840              		.loc 1 1794 51 is_stmt 0 view .LVU2362
 9841 0258 4FF44870 		mov	r0, #800
 9842 025c FFF7FEFF 		bl	rnd
 9843              	.LVL712:
1794:Core/Src/main.c **** 		}
 9844              		.loc 1 1794 4 view .LVU2363
 9845 0260 00F59672 		add	r2, r0, #300
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 313


 9846 0264 92B2     		uxth	r2, r2
 9847 0266 40F61F51 		movw	r1, #3359
 9848 026a 4FF4FA60 		mov	r0, #2000
 9849 026e FFF7FEFF 		bl	MotorRight
 9850              	.LVL713:
 9851 0272 D2E7     		b	.L601
 9852              	.L627:
1796:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9853              		.loc 1 1796 49 discriminator 1 view .LVU2364
 9854 0274 314A     		ldr	r2, .L630+60
 9855 0276 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1796:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 400);
 9856              		.loc 1 1796 34 discriminator 1 view .LVU2365
 9857 0278 022A     		cmp	r2, #2
 9858 027a CCD1     		bne	.L602
1797:Core/Src/main.c **** 			HAL_Delay(500);
 9859              		.loc 1 1797 4 is_stmt 1 view .LVU2366
 9860 027c 4FF4C872 		mov	r2, #400
 9861 0280 40F61F51 		movw	r1, #3359
 9862 0284 4FF4FA60 		mov	r0, #2000
 9863 0288 FFF7FEFF 		bl	MotorBackward
 9864              	.LVL714:
1798:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9865              		.loc 1 1798 4 view .LVU2367
 9866 028c 4FF4FA70 		mov	r0, #500
 9867 0290 FFF7FEFF 		bl	HAL_Delay
 9868              	.LVL715:
1799:Core/Src/main.c **** 		}
 9869              		.loc 1 1799 4 view .LVU2368
1799:Core/Src/main.c **** 		}
 9870              		.loc 1 1799 50 is_stmt 0 view .LVU2369
 9871 0294 4FF44870 		mov	r0, #800
 9872 0298 FFF7FEFF 		bl	rnd
 9873              	.LVL716:
1799:Core/Src/main.c **** 		}
 9874              		.loc 1 1799 4 view .LVU2370
 9875 029c 00F59672 		add	r2, r0, #300
 9876 02a0 92B2     		uxth	r2, r2
 9877 02a2 40F61F51 		movw	r1, #3359
 9878 02a6 4FF4FA60 		mov	r0, #2000
 9879 02aa FFF7FEFF 		bl	MotorLeft
 9880              	.LVL717:
 9881 02ae B4E7     		b	.L601
 9882              	.L628:
1801:Core/Src/main.c **** 
 9883              		.loc 1 1801 50 discriminator 1 view .LVU2371
 9884 02b0 224B     		ldr	r3, .L630+60
 9885 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1801:Core/Src/main.c **** 
 9886              		.loc 1 1801 35 discriminator 1 view .LVU2372
 9887 02b4 022B     		cmp	r3, #2
 9888 02b6 B0D1     		bne	.L601
1803:Core/Src/main.c **** 			MotorBackward(MotorMinSpeed, MotorMaxSpeed, 3000);
 9889              		.loc 1 1803 4 is_stmt 1 view .LVU2373
 9890 02b8 2748     		ldr	r0, .L630+88
 9891 02ba FFF7FEFF 		bl	Serial_Console
 9892              	.LVL718:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 314


1804:Core/Src/main.c **** 			HAL_Delay(500);
 9893              		.loc 1 1804 4 view .LVU2374
 9894 02be 40F6B832 		movw	r2, #3000
 9895 02c2 40F61F51 		movw	r1, #3359
 9896 02c6 4FF4FA60 		mov	r0, #2000
 9897 02ca FFF7FEFF 		bl	MotorBackward
 9898              	.LVL719:
1805:Core/Src/main.c **** 			if (rnd(1000) < 500 ) {
 9899              		.loc 1 1805 4 view .LVU2375
 9900 02ce 4FF4FA70 		mov	r0, #500
 9901 02d2 FFF7FEFF 		bl	HAL_Delay
 9902              	.LVL720:
1806:Core/Src/main.c **** 				MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9903              		.loc 1 1806 4 view .LVU2376
1806:Core/Src/main.c **** 				MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9904              		.loc 1 1806 8 is_stmt 0 view .LVU2377
 9905 02d6 4FF47A70 		mov	r0, #1000
 9906 02da FFF7FEFF 		bl	rnd
 9907              	.LVL721:
1806:Core/Src/main.c **** 				MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 9908              		.loc 1 1806 7 view .LVU2378
 9909 02de B0F5FA7F 		cmp	r0, #500
 9910 02e2 3BD2     		bcs	.L603
1807:Core/Src/main.c **** 			}
 9911              		.loc 1 1807 5 is_stmt 1 view .LVU2379
1807:Core/Src/main.c **** 			}
 9912              		.loc 1 1807 51 is_stmt 0 view .LVU2380
 9913 02e4 4FF44870 		mov	r0, #800
 9914 02e8 FFF7FEFF 		bl	rnd
 9915              	.LVL722:
1807:Core/Src/main.c **** 			}
 9916              		.loc 1 1807 5 view .LVU2381
 9917 02ec 00F59672 		add	r2, r0, #300
 9918 02f0 92B2     		uxth	r2, r2
 9919 02f2 40F61F51 		movw	r1, #3359
 9920 02f6 4FF4FA60 		mov	r0, #2000
 9921 02fa FFF7FEFF 		bl	MotorLeft
 9922              	.LVL723:
 9923 02fe 8CE7     		b	.L601
 9924              	.L631:
 9925              		.align	2
 9926              	.L630:
 9927 0300 00000000 		.word	.LANCHOR19
 9928 0304 00000000 		.word	.LANCHOR54
 9929 0308 00000000 		.word	.LANCHOR28
 9930 030c 00000000 		.word	.LANCHOR29
 9931 0310 00000000 		.word	.LANCHOR88
 9932 0314 00000000 		.word	.LANCHOR33
 9933 0318 00000000 		.word	.LANCHOR11
 9934 031c 00000000 		.word	.LANCHOR5
 9935 0320 00000000 		.word	.LANCHOR89
 9936 0324 00000000 		.word	.LANCHOR4
 9937 0328 00000000 		.word	.LANCHOR72
 9938 032c 00000000 		.word	.LANCHOR73
 9939 0330 00000000 		.word	.LANCHOR74
 9940 0334 74000000 		.word	.LC119
 9941 0338 00000000 		.word	.LANCHOR18
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 315


 9942 033c 00000000 		.word	.LANCHOR24
 9943 0340 00000000 		.word	.LC113
 9944 0344 1C000000 		.word	.LC114
 9945 0348 38000000 		.word	.LC115
 9946 034c 44000000 		.word	.LC116
 9947 0350 00000000 		.word	.LANCHOR35
 9948 0354 00000000 		.word	.LANCHOR59
 9949 0358 50000000 		.word	.LC117
 9950              	.L603:
1810:Core/Src/main.c **** 				}
 9951              		.loc 1 1810 5 is_stmt 1 view .LVU2382
1810:Core/Src/main.c **** 				}
 9952              		.loc 1 1810 52 is_stmt 0 view .LVU2383
 9953 035c 4FF44870 		mov	r0, #800
 9954 0360 FFF7FEFF 		bl	rnd
 9955              	.LVL724:
1810:Core/Src/main.c **** 				}
 9956              		.loc 1 1810 5 view .LVU2384
 9957 0364 00F59672 		add	r2, r0, #300
 9958 0368 92B2     		uxth	r2, r2
 9959 036a 40F61F51 		movw	r1, #3359
 9960 036e 4FF4FA60 		mov	r0, #2000
 9961 0372 FFF7FEFF 		bl	MotorRight
 9962              	.LVL725:
 9963 0376 50E7     		b	.L601
 9964              	.L618:
1818:Core/Src/main.c **** 			State = STOP;
 9965              		.loc 1 1818 3 is_stmt 1 view .LVU2385
1818:Core/Src/main.c **** 			State = STOP;
 9966              		.loc 1 1818 11 is_stmt 0 view .LVU2386
 9967 0378 2A4B     		ldr	r3, .L632
 9968 037a 9B6B     		ldr	r3, [r3, #56]
1818:Core/Src/main.c **** 			State = STOP;
 9969              		.loc 1 1818 6 view .LVU2387
 9970 037c 002B     		cmp	r3, #0
 9971 037e 7FF4D5AE 		bne	.L582
1818:Core/Src/main.c **** 			State = STOP;
 9972              		.loc 1 1818 30 discriminator 1 view .LVU2388
 9973 0382 284B     		ldr	r3, .L632
 9974 0384 DB6B     		ldr	r3, [r3, #60]
1818:Core/Src/main.c **** 			State = STOP;
 9975              		.loc 1 1818 23 discriminator 1 view .LVU2389
 9976 0386 002B     		cmp	r3, #0
 9977 0388 7FF4D0AE 		bne	.L582
1819:Core/Src/main.c **** 		}
 9978              		.loc 1 1819 4 is_stmt 1 view .LVU2390
1819:Core/Src/main.c **** 		}
 9979              		.loc 1 1819 10 is_stmt 0 view .LVU2391
 9980 038c 264B     		ldr	r3, .L632+4
 9981 038e 0022     		movs	r2, #0
 9982 0390 1A70     		strb	r2, [r3]
 9983 0392 CBE6     		b	.L582
 9984              	.L619:
1822:Core/Src/main.c **** 		HAL_Delay(500);
 9985              		.loc 1 1822 28 discriminator 1 view .LVU2392
 9986 0394 FFF7FEFF 		bl	CheckSecurity
 9987              	.LVL726:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 316


1822:Core/Src/main.c **** 		HAL_Delay(500);
 9988              		.loc 1 1822 25 discriminator 1 view .LVU2393
 9989 0398 0128     		cmp	r0, #1
 9990 039a 7FF48BAE 		bne	.L605
1823:Core/Src/main.c **** 		hold_heading = heading;
 9991              		.loc 1 1823 3 is_stmt 1 view .LVU2394
 9992 039e 4FF4FA70 		mov	r0, #500
 9993 03a2 FFF7FEFF 		bl	HAL_Delay
 9994              	.LVL727:
1824:Core/Src/main.c **** 		if (cutterStatus == 0 && perimeterTracking == 0) {
 9995              		.loc 1 1824 3 view .LVU2395
1824:Core/Src/main.c **** 		if (cutterStatus == 0 && perimeterTracking == 0) {
 9996              		.loc 1 1824 16 is_stmt 0 view .LVU2396
 9997 03a6 214B     		ldr	r3, .L632+8
 9998 03a8 1A68     		ldr	r2, [r3]	@ float
 9999 03aa 214B     		ldr	r3, .L632+12
 10000 03ac 1A60     		str	r2, [r3]	@ float
1825:Core/Src/main.c **** 			cutterON();
 10001              		.loc 1 1825 3 is_stmt 1 view .LVU2397
1825:Core/Src/main.c **** 			cutterON();
 10002              		.loc 1 1825 20 is_stmt 0 view .LVU2398
 10003 03ae 214B     		ldr	r3, .L632+16
 10004 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1825:Core/Src/main.c **** 			cutterON();
 10005              		.loc 1 1825 6 view .LVU2399
 10006 03b2 13B9     		cbnz	r3, .L606
1825:Core/Src/main.c **** 			cutterON();
 10007              		.loc 1 1825 46 discriminator 1 view .LVU2400
 10008 03b4 204B     		ldr	r3, .L632+20
 10009 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1825:Core/Src/main.c **** 			cutterON();
 10010              		.loc 1 1825 25 discriminator 1 view .LVU2401
 10011 03b8 4BB1     		cbz	r3, .L629
 10012              	.L606:
1828:Core/Src/main.c **** 		MotorForward(MotorMinSpeed, MotorMaxSpeed);
 10013              		.loc 1 1828 3 is_stmt 1 view .LVU2402
 10014 03ba 2048     		ldr	r0, .L632+24
 10015 03bc FFF7FEFF 		bl	Serial_Console
 10016              	.LVL728:
1829:Core/Src/main.c **** 
 10017              		.loc 1 1829 3 view .LVU2403
 10018 03c0 40F61F51 		movw	r1, #3359
 10019 03c4 4FF4FA60 		mov	r0, #2000
 10020 03c8 FFF7FEFF 		bl	MotorForward
 10021              	.LVL729:
 10022 03cc AEE6     		b	.L582
 10023              	.L629:
1826:Core/Src/main.c **** 		}
 10024              		.loc 1 1826 4 view .LVU2404
 10025 03ce FFF7FEFF 		bl	cutterON
 10026              	.LVL730:
 10027 03d2 F2E7     		b	.L606
 10028              	.L620:
1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 10029              		.loc 1 1838 45 is_stmt 0 discriminator 1 view .LVU2405
 10030 03d4 1A4A     		ldr	r2, .L632+28
 10031 03d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 317


1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 10032              		.loc 1 1838 29 discriminator 1 view .LVU2406
 10033 03d8 022A     		cmp	r2, #2
 10034 03da 02D0     		beq	.L608
1838:Core/Src/main.c **** 			MotorLeft(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 10035              		.loc 1 1838 56 discriminator 2 view .LVU2407
 10036 03dc 002A     		cmp	r2, #0
 10037 03de 7FF47DAE 		bne	.L607
 10038              	.L608:
1839:Core/Src/main.c **** 		}
 10039              		.loc 1 1839 4 is_stmt 1 view .LVU2408
1839:Core/Src/main.c **** 		}
 10040              		.loc 1 1839 50 is_stmt 0 view .LVU2409
 10041 03e2 4FF44870 		mov	r0, #800
 10042 03e6 FFF7FEFF 		bl	rnd
 10043              	.LVL731:
1839:Core/Src/main.c **** 		}
 10044              		.loc 1 1839 4 view .LVU2410
 10045 03ea 00F59672 		add	r2, r0, #300
 10046 03ee 92B2     		uxth	r2, r2
 10047 03f0 40F61F51 		movw	r1, #3359
 10048 03f4 4FF4FA60 		mov	r0, #2000
 10049 03f8 FFF7FEFF 		bl	MotorLeft
 10050              	.LVL732:
 10051 03fc 96E6     		b	.L582
 10052              	.L621:
1841:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 10053              		.loc 1 1841 34 discriminator 1 view .LVU2411
 10054 03fe 022B     		cmp	r3, #2
 10055 0400 02D0     		beq	.L610
1841:Core/Src/main.c **** 			MotorRight(MotorMinSpeed, MotorMaxSpeed, 300 + rnd(800) );
 10056              		.loc 1 1841 61 discriminator 2 view .LVU2412
 10057 0402 002B     		cmp	r3, #0
 10058 0404 7FF46FAE 		bne	.L609
 10059              	.L610:
1842:Core/Src/main.c **** 		}
 10060              		.loc 1 1842 4 is_stmt 1 view .LVU2413
1842:Core/Src/main.c **** 		}
 10061              		.loc 1 1842 51 is_stmt 0 view .LVU2414
 10062 0408 4FF44870 		mov	r0, #800
 10063 040c FFF7FEFF 		bl	rnd
 10064              	.LVL733:
1842:Core/Src/main.c **** 		}
 10065              		.loc 1 1842 4 view .LVU2415
 10066 0410 00F59672 		add	r2, r0, #300
 10067 0414 92B2     		uxth	r2, r2
 10068 0416 40F61F51 		movw	r1, #3359
 10069 041a 4FF4FA60 		mov	r0, #2000
 10070 041e FFF7FEFF 		bl	MotorRight
 10071              	.LVL734:
 10072 0422 83E6     		b	.L582
 10073              	.L633:
 10074              		.align	2
 10075              	.L632:
 10076 0424 00080040 		.word	1073743872
 10077 0428 00000000 		.word	.LANCHOR11
 10078 042c 00000000 		.word	.LANCHOR7
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 318


 10079 0430 00000000 		.word	.LANCHOR9
 10080 0434 00000000 		.word	.LANCHOR8
 10081 0438 00000000 		.word	.LANCHOR35
 10082 043c 64000000 		.word	.LC118
 10083 0440 00000000 		.word	.LANCHOR24
 10084              		.cfi_endproc
 10085              	.LFE314:
 10087              		.section	.text.MX_IWDG_Init,"ax",%progbits
 10088              		.align	1
 10089              		.syntax unified
 10090              		.thumb
 10091              		.thumb_func
 10092              		.fpu fpv4-sp-d16
 10094              	MX_IWDG_Init:
 10095              	.LFB320:
2188:Core/Src/main.c **** 
 10096              		.loc 1 2188 1 is_stmt 1 view -0
 10097              		.cfi_startproc
 10098              		@ args = 0, pretend = 0, frame = 0
 10099              		@ frame_needed = 0, uses_anonymous_args = 0
 10100 0000 08B5     		push	{r3, lr}
 10101              	.LCFI103:
 10102              		.cfi_def_cfa_offset 8
 10103              		.cfi_offset 3, -8
 10104              		.cfi_offset 14, -4
2197:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 10105              		.loc 1 2197 3 view .LVU2417
2197:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 10106              		.loc 1 2197 18 is_stmt 0 view .LVU2418
 10107 0002 0748     		ldr	r0, .L638
 10108 0004 074B     		ldr	r3, .L638+4
 10109 0006 0360     		str	r3, [r0]
2198:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 10110              		.loc 1 2198 3 is_stmt 1 view .LVU2419
2198:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 10111              		.loc 1 2198 24 is_stmt 0 view .LVU2420
 10112 0008 0223     		movs	r3, #2
 10113 000a 4360     		str	r3, [r0, #4]
2199:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 10114              		.loc 1 2199 3 is_stmt 1 view .LVU2421
2199:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 10115              		.loc 1 2199 21 is_stmt 0 view .LVU2422
 10116 000c 40F6FF73 		movw	r3, #4095
 10117 0010 8360     		str	r3, [r0, #8]
2200:Core/Src/main.c ****   {
 10118              		.loc 1 2200 3 is_stmt 1 view .LVU2423
2200:Core/Src/main.c ****   {
 10119              		.loc 1 2200 7 is_stmt 0 view .LVU2424
 10120 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 10121              	.LVL735:
2200:Core/Src/main.c ****   {
 10122              		.loc 1 2200 6 view .LVU2425
 10123 0016 00B9     		cbnz	r0, .L637
2208:Core/Src/main.c **** 
 10124              		.loc 1 2208 1 view .LVU2426
 10125 0018 08BD     		pop	{r3, pc}
 10126              	.L637:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 319


2202:Core/Src/main.c ****   }
 10127              		.loc 1 2202 5 is_stmt 1 view .LVU2427
 10128 001a FFF7FEFF 		bl	Error_Handler
 10129              	.LVL736:
 10130              	.L639:
 10131 001e 00BF     		.align	2
 10132              	.L638:
 10133 0020 00000000 		.word	hiwdg
 10134 0024 00300040 		.word	1073754112
 10135              		.cfi_endproc
 10136              	.LFE320:
 10138              		.section	.text.MX_RNG_Init,"ax",%progbits
 10139              		.align	1
 10140              		.syntax unified
 10141              		.thumb
 10142              		.thumb_func
 10143              		.fpu fpv4-sp-d16
 10145              	MX_RNG_Init:
 10146              	.LFB321:
2216:Core/Src/main.c **** 
 10147              		.loc 1 2216 1 view -0
 10148              		.cfi_startproc
 10149              		@ args = 0, pretend = 0, frame = 0
 10150              		@ frame_needed = 0, uses_anonymous_args = 0
 10151 0000 08B5     		push	{r3, lr}
 10152              	.LCFI104:
 10153              		.cfi_def_cfa_offset 8
 10154              		.cfi_offset 3, -8
 10155              		.cfi_offset 14, -4
2225:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 10156              		.loc 1 2225 3 view .LVU2429
2225:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 10157              		.loc 1 2225 17 is_stmt 0 view .LVU2430
 10158 0002 0448     		ldr	r0, .L644
 10159 0004 044B     		ldr	r3, .L644+4
 10160 0006 0360     		str	r3, [r0]
2226:Core/Src/main.c ****   {
 10161              		.loc 1 2226 3 is_stmt 1 view .LVU2431
2226:Core/Src/main.c ****   {
 10162              		.loc 1 2226 7 is_stmt 0 view .LVU2432
 10163 0008 FFF7FEFF 		bl	HAL_RNG_Init
 10164              	.LVL737:
2226:Core/Src/main.c ****   {
 10165              		.loc 1 2226 6 view .LVU2433
 10166 000c 00B9     		cbnz	r0, .L643
2234:Core/Src/main.c **** 
 10167              		.loc 1 2234 1 view .LVU2434
 10168 000e 08BD     		pop	{r3, pc}
 10169              	.L643:
2228:Core/Src/main.c ****   }
 10170              		.loc 1 2228 5 is_stmt 1 view .LVU2435
 10171 0010 FFF7FEFF 		bl	Error_Handler
 10172              	.LVL738:
 10173              	.L645:
 10174              		.align	2
 10175              	.L644:
 10176 0014 00000000 		.word	hrng
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 320


 10177 0018 00080650 		.word	1342572544
 10178              		.cfi_endproc
 10179              	.LFE321:
 10181              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 10182              		.align	1
 10183              		.syntax unified
 10184              		.thumb
 10185              		.thumb_func
 10186              		.fpu fpv4-sp-d16
 10188              	MX_USART1_UART_Init:
 10189              	.LFB327:
2500:Core/Src/main.c **** 
 10190              		.loc 1 2500 1 view -0
 10191              		.cfi_startproc
 10192              		@ args = 0, pretend = 0, frame = 0
 10193              		@ frame_needed = 0, uses_anonymous_args = 0
 10194 0000 08B5     		push	{r3, lr}
 10195              	.LCFI105:
 10196              		.cfi_def_cfa_offset 8
 10197              		.cfi_offset 3, -8
 10198              		.cfi_offset 14, -4
2509:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 10199              		.loc 1 2509 3 view .LVU2437
2509:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 10200              		.loc 1 2509 19 is_stmt 0 view .LVU2438
 10201 0002 0A48     		ldr	r0, .L650
 10202 0004 0A4B     		ldr	r3, .L650+4
 10203 0006 0360     		str	r3, [r0]
2510:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 10204              		.loc 1 2510 3 is_stmt 1 view .LVU2439
2510:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 10205              		.loc 1 2510 24 is_stmt 0 view .LVU2440
 10206 0008 4FF4E133 		mov	r3, #115200
 10207 000c 4360     		str	r3, [r0, #4]
2511:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 10208              		.loc 1 2511 3 is_stmt 1 view .LVU2441
2511:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 10209              		.loc 1 2511 26 is_stmt 0 view .LVU2442
 10210 000e 0023     		movs	r3, #0
 10211 0010 8360     		str	r3, [r0, #8]
2512:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 10212              		.loc 1 2512 3 is_stmt 1 view .LVU2443
2512:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 10213              		.loc 1 2512 24 is_stmt 0 view .LVU2444
 10214 0012 C360     		str	r3, [r0, #12]
2513:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 10215              		.loc 1 2513 3 is_stmt 1 view .LVU2445
2513:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 10216              		.loc 1 2513 22 is_stmt 0 view .LVU2446
 10217 0014 0361     		str	r3, [r0, #16]
2514:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 10218              		.loc 1 2514 3 is_stmt 1 view .LVU2447
2514:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 10219              		.loc 1 2514 20 is_stmt 0 view .LVU2448
 10220 0016 0C22     		movs	r2, #12
 10221 0018 4261     		str	r2, [r0, #20]
2515:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 321


 10222              		.loc 1 2515 3 is_stmt 1 view .LVU2449
2515:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 10223              		.loc 1 2515 25 is_stmt 0 view .LVU2450
 10224 001a 8361     		str	r3, [r0, #24]
2516:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 10225              		.loc 1 2516 3 is_stmt 1 view .LVU2451
2516:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 10226              		.loc 1 2516 28 is_stmt 0 view .LVU2452
 10227 001c C361     		str	r3, [r0, #28]
2517:Core/Src/main.c ****   {
 10228              		.loc 1 2517 3 is_stmt 1 view .LVU2453
2517:Core/Src/main.c ****   {
 10229              		.loc 1 2517 7 is_stmt 0 view .LVU2454
 10230 001e FFF7FEFF 		bl	HAL_UART_Init
 10231              	.LVL739:
2517:Core/Src/main.c ****   {
 10232              		.loc 1 2517 6 view .LVU2455
 10233 0022 00B9     		cbnz	r0, .L649
2525:Core/Src/main.c **** 
 10234              		.loc 1 2525 1 view .LVU2456
 10235 0024 08BD     		pop	{r3, pc}
 10236              	.L649:
2519:Core/Src/main.c ****   }
 10237              		.loc 1 2519 5 is_stmt 1 view .LVU2457
 10238 0026 FFF7FEFF 		bl	Error_Handler
 10239              	.LVL740:
 10240              	.L651:
 10241 002a 00BF     		.align	2
 10242              	.L650:
 10243 002c 00000000 		.word	huart1
 10244 0030 00100140 		.word	1073811456
 10245              		.cfi_endproc
 10246              	.LFE327:
 10248              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 10249              		.align	1
 10250              		.syntax unified
 10251              		.thumb
 10252              		.thumb_func
 10253              		.fpu fpv4-sp-d16
 10255              	MX_USART2_UART_Init:
 10256              	.LFB328:
2533:Core/Src/main.c **** 
 10257              		.loc 1 2533 1 view -0
 10258              		.cfi_startproc
 10259              		@ args = 0, pretend = 0, frame = 0
 10260              		@ frame_needed = 0, uses_anonymous_args = 0
 10261 0000 08B5     		push	{r3, lr}
 10262              	.LCFI106:
 10263              		.cfi_def_cfa_offset 8
 10264              		.cfi_offset 3, -8
 10265              		.cfi_offset 14, -4
2542:Core/Src/main.c ****   huart2.Init.BaudRate = 1000000;
 10266              		.loc 1 2542 3 view .LVU2459
2542:Core/Src/main.c ****   huart2.Init.BaudRate = 1000000;
 10267              		.loc 1 2542 19 is_stmt 0 view .LVU2460
 10268 0002 0948     		ldr	r0, .L656
 10269 0004 094B     		ldr	r3, .L656+4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 322


 10270 0006 0360     		str	r3, [r0]
2543:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 10271              		.loc 1 2543 3 is_stmt 1 view .LVU2461
2543:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 10272              		.loc 1 2543 24 is_stmt 0 view .LVU2462
 10273 0008 094B     		ldr	r3, .L656+8
 10274 000a 4360     		str	r3, [r0, #4]
2544:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 10275              		.loc 1 2544 3 is_stmt 1 view .LVU2463
2544:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 10276              		.loc 1 2544 26 is_stmt 0 view .LVU2464
 10277 000c 0023     		movs	r3, #0
 10278 000e 8360     		str	r3, [r0, #8]
2545:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 10279              		.loc 1 2545 3 is_stmt 1 view .LVU2465
2545:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 10280              		.loc 1 2545 24 is_stmt 0 view .LVU2466
 10281 0010 C360     		str	r3, [r0, #12]
2546:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 10282              		.loc 1 2546 3 is_stmt 1 view .LVU2467
2546:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 10283              		.loc 1 2546 22 is_stmt 0 view .LVU2468
 10284 0012 0361     		str	r3, [r0, #16]
2547:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 10285              		.loc 1 2547 3 is_stmt 1 view .LVU2469
2547:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 10286              		.loc 1 2547 20 is_stmt 0 view .LVU2470
 10287 0014 0C22     		movs	r2, #12
 10288 0016 4261     		str	r2, [r0, #20]
2548:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 10289              		.loc 1 2548 3 is_stmt 1 view .LVU2471
2548:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 10290              		.loc 1 2548 25 is_stmt 0 view .LVU2472
 10291 0018 8361     		str	r3, [r0, #24]
2549:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 10292              		.loc 1 2549 3 is_stmt 1 view .LVU2473
2549:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 10293              		.loc 1 2549 28 is_stmt 0 view .LVU2474
 10294 001a C361     		str	r3, [r0, #28]
2550:Core/Src/main.c ****   {
 10295              		.loc 1 2550 3 is_stmt 1 view .LVU2475
2550:Core/Src/main.c ****   {
 10296              		.loc 1 2550 7 is_stmt 0 view .LVU2476
 10297 001c FFF7FEFF 		bl	HAL_UART_Init
 10298              	.LVL741:
2550:Core/Src/main.c ****   {
 10299              		.loc 1 2550 6 view .LVU2477
 10300 0020 00B9     		cbnz	r0, .L655
2558:Core/Src/main.c **** 
 10301              		.loc 1 2558 1 view .LVU2478
 10302 0022 08BD     		pop	{r3, pc}
 10303              	.L655:
2552:Core/Src/main.c ****   }
 10304              		.loc 1 2552 5 is_stmt 1 view .LVU2479
 10305 0024 FFF7FEFF 		bl	Error_Handler
 10306              	.LVL742:
 10307              	.L657:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 323


 10308              		.align	2
 10309              	.L656:
 10310 0028 00000000 		.word	huart2
 10311 002c 00440040 		.word	1073759232
 10312 0030 40420F00 		.word	1000000
 10313              		.cfi_endproc
 10314              	.LFE328:
 10316              		.section	.text.MX_TIM3_Init,"ax",%progbits
 10317              		.align	1
 10318              		.syntax unified
 10319              		.thumb
 10320              		.thumb_func
 10321              		.fpu fpv4-sp-d16
 10323              	MX_TIM3_Init:
 10324              	.LFB324:
2321:Core/Src/main.c **** 
 10325              		.loc 1 2321 1 view -0
 10326              		.cfi_startproc
 10327              		@ args = 0, pretend = 0, frame = 56
 10328              		@ frame_needed = 0, uses_anonymous_args = 0
 10329 0000 00B5     		push	{lr}
 10330              	.LCFI107:
 10331              		.cfi_def_cfa_offset 4
 10332              		.cfi_offset 14, -4
 10333 0002 8FB0     		sub	sp, sp, #60
 10334              	.LCFI108:
 10335              		.cfi_def_cfa_offset 64
2327:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10336              		.loc 1 2327 3 view .LVU2481
2327:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10337              		.loc 1 2327 26 is_stmt 0 view .LVU2482
 10338 0004 0023     		movs	r3, #0
 10339 0006 0A93     		str	r3, [sp, #40]
 10340 0008 0B93     		str	r3, [sp, #44]
 10341 000a 0C93     		str	r3, [sp, #48]
 10342 000c 0D93     		str	r3, [sp, #52]
2328:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 10343              		.loc 1 2328 3 is_stmt 1 view .LVU2483
2328:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 10344              		.loc 1 2328 27 is_stmt 0 view .LVU2484
 10345 000e 0893     		str	r3, [sp, #32]
 10346 0010 0993     		str	r3, [sp, #36]
2329:Core/Src/main.c **** 
 10347              		.loc 1 2329 3 is_stmt 1 view .LVU2485
2329:Core/Src/main.c **** 
 10348              		.loc 1 2329 22 is_stmt 0 view .LVU2486
 10349 0012 0193     		str	r3, [sp, #4]
 10350 0014 0293     		str	r3, [sp, #8]
 10351 0016 0393     		str	r3, [sp, #12]
 10352 0018 0493     		str	r3, [sp, #16]
 10353 001a 0593     		str	r3, [sp, #20]
 10354 001c 0693     		str	r3, [sp, #24]
 10355 001e 0793     		str	r3, [sp, #28]
2334:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 10356              		.loc 1 2334 3 is_stmt 1 view .LVU2487
2334:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 10357              		.loc 1 2334 18 is_stmt 0 view .LVU2488
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 324


 10358 0020 2248     		ldr	r0, .L672
 10359 0022 234A     		ldr	r2, .L672+4
 10360 0024 0260     		str	r2, [r0]
2335:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 10361              		.loc 1 2335 3 is_stmt 1 view .LVU2489
2335:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 10362              		.loc 1 2335 24 is_stmt 0 view .LVU2490
 10363 0026 4360     		str	r3, [r0, #4]
2336:Core/Src/main.c ****   htim3.Init.Period = 3360-1;
 10364              		.loc 1 2336 3 is_stmt 1 view .LVU2491
2336:Core/Src/main.c ****   htim3.Init.Period = 3360-1;
 10365              		.loc 1 2336 26 is_stmt 0 view .LVU2492
 10366 0028 8360     		str	r3, [r0, #8]
2337:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10367              		.loc 1 2337 3 is_stmt 1 view .LVU2493
2337:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10368              		.loc 1 2337 21 is_stmt 0 view .LVU2494
 10369 002a 40F61F52 		movw	r2, #3359
 10370 002e C260     		str	r2, [r0, #12]
2338:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10371              		.loc 1 2338 3 is_stmt 1 view .LVU2495
2338:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10372              		.loc 1 2338 28 is_stmt 0 view .LVU2496
 10373 0030 0361     		str	r3, [r0, #16]
2339:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 10374              		.loc 1 2339 3 is_stmt 1 view .LVU2497
2339:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 10375              		.loc 1 2339 32 is_stmt 0 view .LVU2498
 10376 0032 8361     		str	r3, [r0, #24]
2340:Core/Src/main.c ****   {
 10377              		.loc 1 2340 3 is_stmt 1 view .LVU2499
2340:Core/Src/main.c ****   {
 10378              		.loc 1 2340 7 is_stmt 0 view .LVU2500
 10379 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 10380              	.LVL743:
2340:Core/Src/main.c ****   {
 10381              		.loc 1 2340 6 view .LVU2501
 10382 0038 58BB     		cbnz	r0, .L666
2344:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 10383              		.loc 1 2344 3 is_stmt 1 view .LVU2502
2344:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 10384              		.loc 1 2344 34 is_stmt 0 view .LVU2503
 10385 003a 4FF48053 		mov	r3, #4096
 10386 003e 0A93     		str	r3, [sp, #40]
2345:Core/Src/main.c ****   {
 10387              		.loc 1 2345 3 is_stmt 1 view .LVU2504
2345:Core/Src/main.c ****   {
 10388              		.loc 1 2345 7 is_stmt 0 view .LVU2505
 10389 0040 0AA9     		add	r1, sp, #40
 10390 0042 1A48     		ldr	r0, .L672
 10391 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 10392              	.LVL744:
2345:Core/Src/main.c ****   {
 10393              		.loc 1 2345 6 view .LVU2506
 10394 0048 28BB     		cbnz	r0, .L667
2349:Core/Src/main.c ****   {
 10395              		.loc 1 2349 3 is_stmt 1 view .LVU2507
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 325


2349:Core/Src/main.c ****   {
 10396              		.loc 1 2349 7 is_stmt 0 view .LVU2508
 10397 004a 1848     		ldr	r0, .L672
 10398 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 10399              	.LVL745:
2349:Core/Src/main.c ****   {
 10400              		.loc 1 2349 6 view .LVU2509
 10401 0050 18BB     		cbnz	r0, .L668
2353:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10402              		.loc 1 2353 3 is_stmt 1 view .LVU2510
2353:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10403              		.loc 1 2353 37 is_stmt 0 view .LVU2511
 10404 0052 0023     		movs	r3, #0
 10405 0054 0893     		str	r3, [sp, #32]
2354:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 10406              		.loc 1 2354 3 is_stmt 1 view .LVU2512
2354:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 10407              		.loc 1 2354 33 is_stmt 0 view .LVU2513
 10408 0056 0993     		str	r3, [sp, #36]
2355:Core/Src/main.c ****   {
 10409              		.loc 1 2355 3 is_stmt 1 view .LVU2514
2355:Core/Src/main.c ****   {
 10410              		.loc 1 2355 7 is_stmt 0 view .LVU2515
 10411 0058 08A9     		add	r1, sp, #32
 10412 005a 1448     		ldr	r0, .L672
 10413 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 10414              	.LVL746:
2355:Core/Src/main.c ****   {
 10415              		.loc 1 2355 6 view .LVU2516
 10416 0060 E8B9     		cbnz	r0, .L669
2359:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 10417              		.loc 1 2359 3 is_stmt 1 view .LVU2517
2359:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 10418              		.loc 1 2359 20 is_stmt 0 view .LVU2518
 10419 0062 6023     		movs	r3, #96
 10420 0064 0193     		str	r3, [sp, #4]
2360:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 10421              		.loc 1 2360 3 is_stmt 1 view .LVU2519
2360:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 10422              		.loc 1 2360 19 is_stmt 0 view .LVU2520
 10423 0066 0022     		movs	r2, #0
 10424 0068 0292     		str	r2, [sp, #8]
2361:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 10425              		.loc 1 2361 3 is_stmt 1 view .LVU2521
2361:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 10426              		.loc 1 2361 24 is_stmt 0 view .LVU2522
 10427 006a 0392     		str	r2, [sp, #12]
2362:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 10428              		.loc 1 2362 3 is_stmt 1 view .LVU2523
2362:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 10429              		.loc 1 2362 24 is_stmt 0 view .LVU2524
 10430 006c 0592     		str	r2, [sp, #20]
2363:Core/Src/main.c ****   {
 10431              		.loc 1 2363 3 is_stmt 1 view .LVU2525
2363:Core/Src/main.c ****   {
 10432              		.loc 1 2363 7 is_stmt 0 view .LVU2526
 10433 006e 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 326


 10434 0070 0E48     		ldr	r0, .L672
 10435 0072 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10436              	.LVL747:
2363:Core/Src/main.c ****   {
 10437              		.loc 1 2363 6 view .LVU2527
 10438 0076 A0B9     		cbnz	r0, .L670
2367:Core/Src/main.c ****   {
 10439              		.loc 1 2367 3 is_stmt 1 view .LVU2528
2367:Core/Src/main.c ****   {
 10440              		.loc 1 2367 7 is_stmt 0 view .LVU2529
 10441 0078 0422     		movs	r2, #4
 10442 007a 0DEB0201 		add	r1, sp, r2
 10443 007e 0B48     		ldr	r0, .L672
 10444 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10445              	.LVL748:
2367:Core/Src/main.c ****   {
 10446              		.loc 1 2367 6 view .LVU2530
 10447 0084 78B9     		cbnz	r0, .L671
2374:Core/Src/main.c **** 
 10448              		.loc 1 2374 3 is_stmt 1 view .LVU2531
 10449 0086 0948     		ldr	r0, .L672
 10450 0088 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 10451              	.LVL749:
2376:Core/Src/main.c **** 
 10452              		.loc 1 2376 1 is_stmt 0 view .LVU2532
 10453 008c 0FB0     		add	sp, sp, #60
 10454              	.LCFI109:
 10455              		.cfi_remember_state
 10456              		.cfi_def_cfa_offset 4
 10457              		@ sp needed
 10458 008e 5DF804FB 		ldr	pc, [sp], #4
 10459              	.L666:
 10460              	.LCFI110:
 10461              		.cfi_restore_state
2342:Core/Src/main.c ****   }
 10462              		.loc 1 2342 5 is_stmt 1 view .LVU2533
 10463 0092 FFF7FEFF 		bl	Error_Handler
 10464              	.LVL750:
 10465              	.L667:
2347:Core/Src/main.c ****   }
 10466              		.loc 1 2347 5 view .LVU2534
 10467 0096 FFF7FEFF 		bl	Error_Handler
 10468              	.LVL751:
 10469              	.L668:
2351:Core/Src/main.c ****   }
 10470              		.loc 1 2351 5 view .LVU2535
 10471 009a FFF7FEFF 		bl	Error_Handler
 10472              	.LVL752:
 10473              	.L669:
2357:Core/Src/main.c ****   }
 10474              		.loc 1 2357 5 view .LVU2536
 10475 009e FFF7FEFF 		bl	Error_Handler
 10476              	.LVL753:
 10477              	.L670:
2365:Core/Src/main.c ****   }
 10478              		.loc 1 2365 5 view .LVU2537
 10479 00a2 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 327


 10480              	.LVL754:
 10481              	.L671:
2369:Core/Src/main.c ****   }
 10482              		.loc 1 2369 5 view .LVU2538
 10483 00a6 FFF7FEFF 		bl	Error_Handler
 10484              	.LVL755:
 10485              	.L673:
 10486 00aa 00BF     		.align	2
 10487              	.L672:
 10488 00ac 00000000 		.word	htim3
 10489 00b0 00040040 		.word	1073742848
 10490              		.cfi_endproc
 10491              	.LFE324:
 10493              		.section	.text.MX_TIM4_Init,"ax",%progbits
 10494              		.align	1
 10495              		.syntax unified
 10496              		.thumb
 10497              		.thumb_func
 10498              		.fpu fpv4-sp-d16
 10500              	MX_TIM4_Init:
 10501              	.LFB325:
2384:Core/Src/main.c **** 
 10502              		.loc 1 2384 1 view -0
 10503              		.cfi_startproc
 10504              		@ args = 0, pretend = 0, frame = 56
 10505              		@ frame_needed = 0, uses_anonymous_args = 0
 10506 0000 00B5     		push	{lr}
 10507              	.LCFI111:
 10508              		.cfi_def_cfa_offset 4
 10509              		.cfi_offset 14, -4
 10510 0002 8FB0     		sub	sp, sp, #60
 10511              	.LCFI112:
 10512              		.cfi_def_cfa_offset 64
2390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10513              		.loc 1 2390 3 view .LVU2540
2390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10514              		.loc 1 2390 26 is_stmt 0 view .LVU2541
 10515 0004 0023     		movs	r3, #0
 10516 0006 0A93     		str	r3, [sp, #40]
 10517 0008 0B93     		str	r3, [sp, #44]
 10518 000a 0C93     		str	r3, [sp, #48]
 10519 000c 0D93     		str	r3, [sp, #52]
2391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 10520              		.loc 1 2391 3 is_stmt 1 view .LVU2542
2391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 10521              		.loc 1 2391 27 is_stmt 0 view .LVU2543
 10522 000e 0893     		str	r3, [sp, #32]
 10523 0010 0993     		str	r3, [sp, #36]
2392:Core/Src/main.c **** 
 10524              		.loc 1 2392 3 is_stmt 1 view .LVU2544
2392:Core/Src/main.c **** 
 10525              		.loc 1 2392 22 is_stmt 0 view .LVU2545
 10526 0012 0193     		str	r3, [sp, #4]
 10527 0014 0293     		str	r3, [sp, #8]
 10528 0016 0393     		str	r3, [sp, #12]
 10529 0018 0493     		str	r3, [sp, #16]
 10530 001a 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 328


 10531 001c 0693     		str	r3, [sp, #24]
 10532 001e 0793     		str	r3, [sp, #28]
2397:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 10533              		.loc 1 2397 3 is_stmt 1 view .LVU2546
2397:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 10534              		.loc 1 2397 18 is_stmt 0 view .LVU2547
 10535 0020 2B48     		ldr	r0, .L692
 10536 0022 2C4A     		ldr	r2, .L692+4
 10537 0024 0260     		str	r2, [r0]
2398:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 10538              		.loc 1 2398 3 is_stmt 1 view .LVU2548
2398:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 10539              		.loc 1 2398 24 is_stmt 0 view .LVU2549
 10540 0026 4360     		str	r3, [r0, #4]
2399:Core/Src/main.c ****   htim4.Init.Period = 3360-1;
 10541              		.loc 1 2399 3 is_stmt 1 view .LVU2550
2399:Core/Src/main.c ****   htim4.Init.Period = 3360-1;
 10542              		.loc 1 2399 26 is_stmt 0 view .LVU2551
 10543 0028 8360     		str	r3, [r0, #8]
2400:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10544              		.loc 1 2400 3 is_stmt 1 view .LVU2552
2400:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10545              		.loc 1 2400 21 is_stmt 0 view .LVU2553
 10546 002a 40F61F52 		movw	r2, #3359
 10547 002e C260     		str	r2, [r0, #12]
2401:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10548              		.loc 1 2401 3 is_stmt 1 view .LVU2554
2401:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10549              		.loc 1 2401 28 is_stmt 0 view .LVU2555
 10550 0030 0361     		str	r3, [r0, #16]
2402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 10551              		.loc 1 2402 3 is_stmt 1 view .LVU2556
2402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 10552              		.loc 1 2402 32 is_stmt 0 view .LVU2557
 10553 0032 8361     		str	r3, [r0, #24]
2403:Core/Src/main.c ****   {
 10554              		.loc 1 2403 3 is_stmt 1 view .LVU2558
2403:Core/Src/main.c ****   {
 10555              		.loc 1 2403 7 is_stmt 0 view .LVU2559
 10556 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 10557              	.LVL756:
2403:Core/Src/main.c ****   {
 10558              		.loc 1 2403 6 view .LVU2560
 10559 0038 0028     		cmp	r0, #0
 10560 003a 39D1     		bne	.L684
2407:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 10561              		.loc 1 2407 3 is_stmt 1 view .LVU2561
2407:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 10562              		.loc 1 2407 34 is_stmt 0 view .LVU2562
 10563 003c 4FF48053 		mov	r3, #4096
 10564 0040 0A93     		str	r3, [sp, #40]
2408:Core/Src/main.c ****   {
 10565              		.loc 1 2408 3 is_stmt 1 view .LVU2563
2408:Core/Src/main.c ****   {
 10566              		.loc 1 2408 7 is_stmt 0 view .LVU2564
 10567 0042 0AA9     		add	r1, sp, #40
 10568 0044 2248     		ldr	r0, .L692
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 329


 10569 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 10570              	.LVL757:
2408:Core/Src/main.c ****   {
 10571              		.loc 1 2408 6 view .LVU2565
 10572 004a 0028     		cmp	r0, #0
 10573 004c 32D1     		bne	.L685
2412:Core/Src/main.c ****   {
 10574              		.loc 1 2412 3 is_stmt 1 view .LVU2566
2412:Core/Src/main.c ****   {
 10575              		.loc 1 2412 7 is_stmt 0 view .LVU2567
 10576 004e 2048     		ldr	r0, .L692
 10577 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 10578              	.LVL758:
2412:Core/Src/main.c ****   {
 10579              		.loc 1 2412 6 view .LVU2568
 10580 0054 0028     		cmp	r0, #0
 10581 0056 2FD1     		bne	.L686
2416:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10582              		.loc 1 2416 3 is_stmt 1 view .LVU2569
2416:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10583              		.loc 1 2416 37 is_stmt 0 view .LVU2570
 10584 0058 0023     		movs	r3, #0
 10585 005a 0893     		str	r3, [sp, #32]
2417:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 10586              		.loc 1 2417 3 is_stmt 1 view .LVU2571
2417:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 10587              		.loc 1 2417 33 is_stmt 0 view .LVU2572
 10588 005c 0993     		str	r3, [sp, #36]
2418:Core/Src/main.c ****   {
 10589              		.loc 1 2418 3 is_stmt 1 view .LVU2573
2418:Core/Src/main.c ****   {
 10590              		.loc 1 2418 7 is_stmt 0 view .LVU2574
 10591 005e 08A9     		add	r1, sp, #32
 10592 0060 1B48     		ldr	r0, .L692
 10593 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 10594              	.LVL759:
2418:Core/Src/main.c ****   {
 10595              		.loc 1 2418 6 view .LVU2575
 10596 0066 48BB     		cbnz	r0, .L687
2422:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 10597              		.loc 1 2422 3 is_stmt 1 view .LVU2576
2422:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 10598              		.loc 1 2422 20 is_stmt 0 view .LVU2577
 10599 0068 6023     		movs	r3, #96
 10600 006a 0193     		str	r3, [sp, #4]
2423:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 10601              		.loc 1 2423 3 is_stmt 1 view .LVU2578
2423:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 10602              		.loc 1 2423 19 is_stmt 0 view .LVU2579
 10603 006c 0022     		movs	r2, #0
 10604 006e 0292     		str	r2, [sp, #8]
2424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 10605              		.loc 1 2424 3 is_stmt 1 view .LVU2580
2424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 10606              		.loc 1 2424 24 is_stmt 0 view .LVU2581
 10607 0070 0392     		str	r2, [sp, #12]
2425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 330


 10608              		.loc 1 2425 3 is_stmt 1 view .LVU2582
2425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 10609              		.loc 1 2425 24 is_stmt 0 view .LVU2583
 10610 0072 0592     		str	r2, [sp, #20]
2426:Core/Src/main.c ****   {
 10611              		.loc 1 2426 3 is_stmt 1 view .LVU2584
2426:Core/Src/main.c ****   {
 10612              		.loc 1 2426 7 is_stmt 0 view .LVU2585
 10613 0074 01A9     		add	r1, sp, #4
 10614 0076 1648     		ldr	r0, .L692
 10615 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10616              	.LVL760:
2426:Core/Src/main.c ****   {
 10617              		.loc 1 2426 6 view .LVU2586
 10618 007c 00BB     		cbnz	r0, .L688
2430:Core/Src/main.c ****   {
 10619              		.loc 1 2430 3 is_stmt 1 view .LVU2587
2430:Core/Src/main.c ****   {
 10620              		.loc 1 2430 7 is_stmt 0 view .LVU2588
 10621 007e 0422     		movs	r2, #4
 10622 0080 0DEB0201 		add	r1, sp, r2
 10623 0084 1248     		ldr	r0, .L692
 10624 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10625              	.LVL761:
2430:Core/Src/main.c ****   {
 10626              		.loc 1 2430 6 view .LVU2589
 10627 008a D8B9     		cbnz	r0, .L689
2434:Core/Src/main.c ****   {
 10628              		.loc 1 2434 3 is_stmt 1 view .LVU2590
2434:Core/Src/main.c ****   {
 10629              		.loc 1 2434 7 is_stmt 0 view .LVU2591
 10630 008c 0822     		movs	r2, #8
 10631 008e 01A9     		add	r1, sp, #4
 10632 0090 0F48     		ldr	r0, .L692
 10633 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10634              	.LVL762:
2434:Core/Src/main.c ****   {
 10635              		.loc 1 2434 6 view .LVU2592
 10636 0096 B8B9     		cbnz	r0, .L690
2438:Core/Src/main.c ****   {
 10637              		.loc 1 2438 3 is_stmt 1 view .LVU2593
2438:Core/Src/main.c ****   {
 10638              		.loc 1 2438 7 is_stmt 0 view .LVU2594
 10639 0098 0C22     		movs	r2, #12
 10640 009a 01A9     		add	r1, sp, #4
 10641 009c 0C48     		ldr	r0, .L692
 10642 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 10643              	.LVL763:
2438:Core/Src/main.c ****   {
 10644              		.loc 1 2438 6 view .LVU2595
 10645 00a2 98B9     		cbnz	r0, .L691
2445:Core/Src/main.c **** 
 10646              		.loc 1 2445 3 is_stmt 1 view .LVU2596
 10647 00a4 0A48     		ldr	r0, .L692
 10648 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 10649              	.LVL764:
2447:Core/Src/main.c **** 
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 331


 10650              		.loc 1 2447 1 is_stmt 0 view .LVU2597
 10651 00aa 0FB0     		add	sp, sp, #60
 10652              	.LCFI113:
 10653              		.cfi_remember_state
 10654              		.cfi_def_cfa_offset 4
 10655              		@ sp needed
 10656 00ac 5DF804FB 		ldr	pc, [sp], #4
 10657              	.L684:
 10658              	.LCFI114:
 10659              		.cfi_restore_state
2405:Core/Src/main.c ****   }
 10660              		.loc 1 2405 5 is_stmt 1 view .LVU2598
 10661 00b0 FFF7FEFF 		bl	Error_Handler
 10662              	.LVL765:
 10663              	.L685:
2410:Core/Src/main.c ****   }
 10664              		.loc 1 2410 5 view .LVU2599
 10665 00b4 FFF7FEFF 		bl	Error_Handler
 10666              	.LVL766:
 10667              	.L686:
2414:Core/Src/main.c ****   }
 10668              		.loc 1 2414 5 view .LVU2600
 10669 00b8 FFF7FEFF 		bl	Error_Handler
 10670              	.LVL767:
 10671              	.L687:
2420:Core/Src/main.c ****   }
 10672              		.loc 1 2420 5 view .LVU2601
 10673 00bc FFF7FEFF 		bl	Error_Handler
 10674              	.LVL768:
 10675              	.L688:
2428:Core/Src/main.c ****   }
 10676              		.loc 1 2428 5 view .LVU2602
 10677 00c0 FFF7FEFF 		bl	Error_Handler
 10678              	.LVL769:
 10679              	.L689:
2432:Core/Src/main.c ****   }
 10680              		.loc 1 2432 5 view .LVU2603
 10681 00c4 FFF7FEFF 		bl	Error_Handler
 10682              	.LVL770:
 10683              	.L690:
2436:Core/Src/main.c ****   }
 10684              		.loc 1 2436 5 view .LVU2604
 10685 00c8 FFF7FEFF 		bl	Error_Handler
 10686              	.LVL771:
 10687              	.L691:
2440:Core/Src/main.c ****   }
 10688              		.loc 1 2440 5 view .LVU2605
 10689 00cc FFF7FEFF 		bl	Error_Handler
 10690              	.LVL772:
 10691              	.L693:
 10692              		.align	2
 10693              	.L692:
 10694 00d0 00000000 		.word	htim4
 10695 00d4 00080040 		.word	1073743872
 10696              		.cfi_endproc
 10697              	.LFE325:
 10699              		.section	.text.MX_RTC_Init,"ax",%progbits
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 332


 10700              		.align	1
 10701              		.syntax unified
 10702              		.thumb
 10703              		.thumb_func
 10704              		.fpu fpv4-sp-d16
 10706              	MX_RTC_Init:
 10707              	.LFB322:
2242:Core/Src/main.c **** 
 10708              		.loc 1 2242 1 view -0
 10709              		.cfi_startproc
 10710              		@ args = 0, pretend = 0, frame = 0
 10711              		@ frame_needed = 0, uses_anonymous_args = 0
 10712 0000 08B5     		push	{r3, lr}
 10713              	.LCFI115:
 10714              		.cfi_def_cfa_offset 8
 10715              		.cfi_offset 3, -8
 10716              		.cfi_offset 14, -4
2253:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 10717              		.loc 1 2253 3 view .LVU2607
2253:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 10718              		.loc 1 2253 17 is_stmt 0 view .LVU2608
 10719 0002 0948     		ldr	r0, .L698
 10720 0004 094B     		ldr	r3, .L698+4
 10721 0006 0360     		str	r3, [r0]
2254:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 10722              		.loc 1 2254 3 is_stmt 1 view .LVU2609
2254:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 10723              		.loc 1 2254 24 is_stmt 0 view .LVU2610
 10724 0008 0023     		movs	r3, #0
 10725 000a 4360     		str	r3, [r0, #4]
2255:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 10726              		.loc 1 2255 3 is_stmt 1 view .LVU2611
2255:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 10727              		.loc 1 2255 26 is_stmt 0 view .LVU2612
 10728 000c 7F22     		movs	r2, #127
 10729 000e 8260     		str	r2, [r0, #8]
2256:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 10730              		.loc 1 2256 3 is_stmt 1 view .LVU2613
2256:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 10731              		.loc 1 2256 25 is_stmt 0 view .LVU2614
 10732 0010 FF22     		movs	r2, #255
 10733 0012 C260     		str	r2, [r0, #12]
2257:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 10734              		.loc 1 2257 3 is_stmt 1 view .LVU2615
2257:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 10735              		.loc 1 2257 20 is_stmt 0 view .LVU2616
 10736 0014 0361     		str	r3, [r0, #16]
2258:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 10737              		.loc 1 2258 3 is_stmt 1 view .LVU2617
2258:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 10738              		.loc 1 2258 28 is_stmt 0 view .LVU2618
 10739 0016 4361     		str	r3, [r0, #20]
2259:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 10740              		.loc 1 2259 3 is_stmt 1 view .LVU2619
2259:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 10741              		.loc 1 2259 24 is_stmt 0 view .LVU2620
 10742 0018 8361     		str	r3, [r0, #24]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 333


2260:Core/Src/main.c ****   {
 10743              		.loc 1 2260 3 is_stmt 1 view .LVU2621
2260:Core/Src/main.c ****   {
 10744              		.loc 1 2260 7 is_stmt 0 view .LVU2622
 10745 001a FFF7FEFF 		bl	HAL_RTC_Init
 10746              	.LVL773:
2260:Core/Src/main.c ****   {
 10747              		.loc 1 2260 6 view .LVU2623
 10748 001e 00B9     		cbnz	r0, .L697
2268:Core/Src/main.c **** 
 10749              		.loc 1 2268 1 view .LVU2624
 10750 0020 08BD     		pop	{r3, pc}
 10751              	.L697:
2262:Core/Src/main.c ****   }
 10752              		.loc 1 2262 5 is_stmt 1 view .LVU2625
 10753 0022 FFF7FEFF 		bl	Error_Handler
 10754              	.LVL774:
 10755              	.L699:
 10756 0026 00BF     		.align	2
 10757              	.L698:
 10758 0028 00000000 		.word	hrtc
 10759 002c 00280040 		.word	1073752064
 10760              		.cfi_endproc
 10761              	.LFE322:
 10763              		.section	.text.MX_TIM2_Init,"ax",%progbits
 10764              		.align	1
 10765              		.syntax unified
 10766              		.thumb
 10767              		.thumb_func
 10768              		.fpu fpv4-sp-d16
 10770              	MX_TIM2_Init:
 10771              	.LFB323:
2276:Core/Src/main.c **** 
 10772              		.loc 1 2276 1 view -0
 10773              		.cfi_startproc
 10774              		@ args = 0, pretend = 0, frame = 24
 10775              		@ frame_needed = 0, uses_anonymous_args = 0
 10776 0000 00B5     		push	{lr}
 10777              	.LCFI116:
 10778              		.cfi_def_cfa_offset 4
 10779              		.cfi_offset 14, -4
 10780 0002 87B0     		sub	sp, sp, #28
 10781              	.LCFI117:
 10782              		.cfi_def_cfa_offset 32
2282:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10783              		.loc 1 2282 3 view .LVU2627
2282:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10784              		.loc 1 2282 26 is_stmt 0 view .LVU2628
 10785 0004 0023     		movs	r3, #0
 10786 0006 0293     		str	r3, [sp, #8]
 10787 0008 0393     		str	r3, [sp, #12]
 10788 000a 0493     		str	r3, [sp, #16]
 10789 000c 0593     		str	r3, [sp, #20]
2283:Core/Src/main.c **** 
 10790              		.loc 1 2283 3 is_stmt 1 view .LVU2629
2283:Core/Src/main.c **** 
 10791              		.loc 1 2283 27 is_stmt 0 view .LVU2630
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 334


 10792 000e 0093     		str	r3, [sp]
 10793 0010 0193     		str	r3, [sp, #4]
2288:Core/Src/main.c ****   htim2.Init.Prescaler = 10000-1;
 10794              		.loc 1 2288 3 is_stmt 1 view .LVU2631
2288:Core/Src/main.c ****   htim2.Init.Prescaler = 10000-1;
 10795              		.loc 1 2288 18 is_stmt 0 view .LVU2632
 10796 0012 1448     		ldr	r0, .L708
 10797 0014 4FF08042 		mov	r2, #1073741824
 10798 0018 0260     		str	r2, [r0]
2289:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 10799              		.loc 1 2289 3 is_stmt 1 view .LVU2633
2289:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 10800              		.loc 1 2289 24 is_stmt 0 view .LVU2634
 10801 001a 42F20F72 		movw	r2, #9999
 10802 001e 4260     		str	r2, [r0, #4]
2290:Core/Src/main.c ****   htim2.Init.Period = 8400-1;
 10803              		.loc 1 2290 3 is_stmt 1 view .LVU2635
2290:Core/Src/main.c ****   htim2.Init.Period = 8400-1;
 10804              		.loc 1 2290 26 is_stmt 0 view .LVU2636
 10805 0020 8360     		str	r3, [r0, #8]
2291:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10806              		.loc 1 2291 3 is_stmt 1 view .LVU2637
2291:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10807              		.loc 1 2291 21 is_stmt 0 view .LVU2638
 10808 0022 42F2CF02 		movw	r2, #8399
 10809 0026 C260     		str	r2, [r0, #12]
2292:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10810              		.loc 1 2292 3 is_stmt 1 view .LVU2639
2292:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10811              		.loc 1 2292 28 is_stmt 0 view .LVU2640
 10812 0028 0361     		str	r3, [r0, #16]
2293:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 10813              		.loc 1 2293 3 is_stmt 1 view .LVU2641
2293:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 10814              		.loc 1 2293 32 is_stmt 0 view .LVU2642
 10815 002a 8361     		str	r3, [r0, #24]
2294:Core/Src/main.c ****   {
 10816              		.loc 1 2294 3 is_stmt 1 view .LVU2643
2294:Core/Src/main.c ****   {
 10817              		.loc 1 2294 7 is_stmt 0 view .LVU2644
 10818 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 10819              	.LVL775:
2294:Core/Src/main.c ****   {
 10820              		.loc 1 2294 6 view .LVU2645
 10821 0030 90B9     		cbnz	r0, .L705
2298:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 10822              		.loc 1 2298 3 is_stmt 1 view .LVU2646
2298:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 10823              		.loc 1 2298 34 is_stmt 0 view .LVU2647
 10824 0032 4FF48053 		mov	r3, #4096
 10825 0036 0293     		str	r3, [sp, #8]
2299:Core/Src/main.c ****   {
 10826              		.loc 1 2299 3 is_stmt 1 view .LVU2648
2299:Core/Src/main.c ****   {
 10827              		.loc 1 2299 7 is_stmt 0 view .LVU2649
 10828 0038 02A9     		add	r1, sp, #8
 10829 003a 0A48     		ldr	r0, .L708
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 335


 10830 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 10831              	.LVL776:
2299:Core/Src/main.c ****   {
 10832              		.loc 1 2299 6 view .LVU2650
 10833 0040 60B9     		cbnz	r0, .L706
2303:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10834              		.loc 1 2303 3 is_stmt 1 view .LVU2651
2303:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10835              		.loc 1 2303 37 is_stmt 0 view .LVU2652
 10836 0042 0023     		movs	r3, #0
 10837 0044 0093     		str	r3, [sp]
2304:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 10838              		.loc 1 2304 3 is_stmt 1 view .LVU2653
2304:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 10839              		.loc 1 2304 33 is_stmt 0 view .LVU2654
 10840 0046 0193     		str	r3, [sp, #4]
2305:Core/Src/main.c ****   {
 10841              		.loc 1 2305 3 is_stmt 1 view .LVU2655
2305:Core/Src/main.c ****   {
 10842              		.loc 1 2305 7 is_stmt 0 view .LVU2656
 10843 0048 6946     		mov	r1, sp
 10844 004a 0648     		ldr	r0, .L708
 10845 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 10846              	.LVL777:
2305:Core/Src/main.c ****   {
 10847              		.loc 1 2305 6 view .LVU2657
 10848 0050 30B9     		cbnz	r0, .L707
2313:Core/Src/main.c **** 
 10849              		.loc 1 2313 1 view .LVU2658
 10850 0052 07B0     		add	sp, sp, #28
 10851              	.LCFI118:
 10852              		.cfi_remember_state
 10853              		.cfi_def_cfa_offset 4
 10854              		@ sp needed
 10855 0054 5DF804FB 		ldr	pc, [sp], #4
 10856              	.L705:
 10857              	.LCFI119:
 10858              		.cfi_restore_state
2296:Core/Src/main.c ****   }
 10859              		.loc 1 2296 5 is_stmt 1 view .LVU2659
 10860 0058 FFF7FEFF 		bl	Error_Handler
 10861              	.LVL778:
 10862              	.L706:
2301:Core/Src/main.c ****   }
 10863              		.loc 1 2301 5 view .LVU2660
 10864 005c FFF7FEFF 		bl	Error_Handler
 10865              	.LVL779:
 10866              	.L707:
2307:Core/Src/main.c ****   }
 10867              		.loc 1 2307 5 view .LVU2661
 10868 0060 FFF7FEFF 		bl	Error_Handler
 10869              	.LVL780:
 10870              	.L709:
 10871              		.align	2
 10872              	.L708:
 10873 0064 00000000 		.word	htim2
 10874              		.cfi_endproc
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 336


 10875              	.LFE323:
 10877              		.section	.text.MX_TIM5_Init,"ax",%progbits
 10878              		.align	1
 10879              		.syntax unified
 10880              		.thumb
 10881              		.thumb_func
 10882              		.fpu fpv4-sp-d16
 10884              	MX_TIM5_Init:
 10885              	.LFB326:
2455:Core/Src/main.c **** 
 10886              		.loc 1 2455 1 view -0
 10887              		.cfi_startproc
 10888              		@ args = 0, pretend = 0, frame = 24
 10889              		@ frame_needed = 0, uses_anonymous_args = 0
 10890 0000 00B5     		push	{lr}
 10891              	.LCFI120:
 10892              		.cfi_def_cfa_offset 4
 10893              		.cfi_offset 14, -4
 10894 0002 87B0     		sub	sp, sp, #28
 10895              	.LCFI121:
 10896              		.cfi_def_cfa_offset 32
2461:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10897              		.loc 1 2461 3 view .LVU2663
2461:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 10898              		.loc 1 2461 26 is_stmt 0 view .LVU2664
 10899 0004 0023     		movs	r3, #0
 10900 0006 0293     		str	r3, [sp, #8]
 10901 0008 0393     		str	r3, [sp, #12]
 10902 000a 0493     		str	r3, [sp, #16]
 10903 000c 0593     		str	r3, [sp, #20]
2462:Core/Src/main.c **** 
 10904              		.loc 1 2462 3 is_stmt 1 view .LVU2665
2462:Core/Src/main.c **** 
 10905              		.loc 1 2462 27 is_stmt 0 view .LVU2666
 10906 000e 0093     		str	r3, [sp]
 10907 0010 0193     		str	r3, [sp, #4]
2467:Core/Src/main.c ****   htim5.Init.Prescaler = 84-1;
 10908              		.loc 1 2467 3 is_stmt 1 view .LVU2667
2467:Core/Src/main.c ****   htim5.Init.Prescaler = 84-1;
 10909              		.loc 1 2467 18 is_stmt 0 view .LVU2668
 10910 0012 1348     		ldr	r0, .L718
 10911 0014 134A     		ldr	r2, .L718+4
 10912 0016 0260     		str	r2, [r0]
2468:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 10913              		.loc 1 2468 3 is_stmt 1 view .LVU2669
2468:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 10914              		.loc 1 2468 24 is_stmt 0 view .LVU2670
 10915 0018 5322     		movs	r2, #83
 10916 001a 4260     		str	r2, [r0, #4]
2469:Core/Src/main.c ****   htim5.Init.Period = 65535;
 10917              		.loc 1 2469 3 is_stmt 1 view .LVU2671
2469:Core/Src/main.c ****   htim5.Init.Period = 65535;
 10918              		.loc 1 2469 26 is_stmt 0 view .LVU2672
 10919 001c 8360     		str	r3, [r0, #8]
2470:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 10920              		.loc 1 2470 3 is_stmt 1 view .LVU2673
2470:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 337


 10921              		.loc 1 2470 21 is_stmt 0 view .LVU2674
 10922 001e 4FF6FF72 		movw	r2, #65535
 10923 0022 C260     		str	r2, [r0, #12]
2471:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10924              		.loc 1 2471 3 is_stmt 1 view .LVU2675
2471:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 10925              		.loc 1 2471 28 is_stmt 0 view .LVU2676
 10926 0024 0361     		str	r3, [r0, #16]
2472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 10927              		.loc 1 2472 3 is_stmt 1 view .LVU2677
2472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 10928              		.loc 1 2472 32 is_stmt 0 view .LVU2678
 10929 0026 8361     		str	r3, [r0, #24]
2473:Core/Src/main.c ****   {
 10930              		.loc 1 2473 3 is_stmt 1 view .LVU2679
2473:Core/Src/main.c ****   {
 10931              		.loc 1 2473 7 is_stmt 0 view .LVU2680
 10932 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 10933              	.LVL781:
2473:Core/Src/main.c ****   {
 10934              		.loc 1 2473 6 view .LVU2681
 10935 002c 90B9     		cbnz	r0, .L715
2477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 10936              		.loc 1 2477 3 is_stmt 1 view .LVU2682
2477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 10937              		.loc 1 2477 34 is_stmt 0 view .LVU2683
 10938 002e 4FF48053 		mov	r3, #4096
 10939 0032 0293     		str	r3, [sp, #8]
2478:Core/Src/main.c ****   {
 10940              		.loc 1 2478 3 is_stmt 1 view .LVU2684
2478:Core/Src/main.c ****   {
 10941              		.loc 1 2478 7 is_stmt 0 view .LVU2685
 10942 0034 02A9     		add	r1, sp, #8
 10943 0036 0A48     		ldr	r0, .L718
 10944 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 10945              	.LVL782:
2478:Core/Src/main.c ****   {
 10946              		.loc 1 2478 6 view .LVU2686
 10947 003c 60B9     		cbnz	r0, .L716
2482:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10948              		.loc 1 2482 3 is_stmt 1 view .LVU2687
2482:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 10949              		.loc 1 2482 37 is_stmt 0 view .LVU2688
 10950 003e 0023     		movs	r3, #0
 10951 0040 0093     		str	r3, [sp]
2483:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 10952              		.loc 1 2483 3 is_stmt 1 view .LVU2689
2483:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 10953              		.loc 1 2483 33 is_stmt 0 view .LVU2690
 10954 0042 0193     		str	r3, [sp, #4]
2484:Core/Src/main.c ****   {
 10955              		.loc 1 2484 3 is_stmt 1 view .LVU2691
2484:Core/Src/main.c ****   {
 10956              		.loc 1 2484 7 is_stmt 0 view .LVU2692
 10957 0044 6946     		mov	r1, sp
 10958 0046 0648     		ldr	r0, .L718
 10959 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 338


 10960              	.LVL783:
2484:Core/Src/main.c ****   {
 10961              		.loc 1 2484 6 view .LVU2693
 10962 004c 30B9     		cbnz	r0, .L717
2492:Core/Src/main.c **** 
 10963              		.loc 1 2492 1 view .LVU2694
 10964 004e 07B0     		add	sp, sp, #28
 10965              	.LCFI122:
 10966              		.cfi_remember_state
 10967              		.cfi_def_cfa_offset 4
 10968              		@ sp needed
 10969 0050 5DF804FB 		ldr	pc, [sp], #4
 10970              	.L715:
 10971              	.LCFI123:
 10972              		.cfi_restore_state
2475:Core/Src/main.c ****   }
 10973              		.loc 1 2475 5 is_stmt 1 view .LVU2695
 10974 0054 FFF7FEFF 		bl	Error_Handler
 10975              	.LVL784:
 10976              	.L716:
2480:Core/Src/main.c ****   }
 10977              		.loc 1 2480 5 view .LVU2696
 10978 0058 FFF7FEFF 		bl	Error_Handler
 10979              	.LVL785:
 10980              	.L717:
2486:Core/Src/main.c ****   }
 10981              		.loc 1 2486 5 view .LVU2697
 10982 005c FFF7FEFF 		bl	Error_Handler
 10983              	.LVL786:
 10984              	.L719:
 10985              		.align	2
 10986              	.L718:
 10987 0060 00000000 		.word	htim5
 10988 0064 000C0040 		.word	1073744896
 10989              		.cfi_endproc
 10990              	.LFE326:
 10992              		.section	.text.SystemClock_Config,"ax",%progbits
 10993              		.align	1
 10994              		.global	SystemClock_Config
 10995              		.syntax unified
 10996              		.thumb
 10997              		.thumb_func
 10998              		.fpu fpv4-sp-d16
 11000              	SystemClock_Config:
 11001              	.LFB316:
2008:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 11002              		.loc 1 2008 1 view -0
 11003              		.cfi_startproc
 11004              		@ args = 0, pretend = 0, frame = 96
 11005              		@ frame_needed = 0, uses_anonymous_args = 0
 11006 0000 00B5     		push	{lr}
 11007              	.LCFI124:
 11008              		.cfi_def_cfa_offset 4
 11009              		.cfi_offset 14, -4
 11010 0002 99B0     		sub	sp, sp, #100
 11011              	.LCFI125:
 11012              		.cfi_def_cfa_offset 104
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 339


2009:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 11013              		.loc 1 2009 3 view .LVU2699
2009:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 11014              		.loc 1 2009 22 is_stmt 0 view .LVU2700
 11015 0004 3022     		movs	r2, #48
 11016 0006 0021     		movs	r1, #0
 11017 0008 0DEB0200 		add	r0, sp, r2
 11018 000c FFF7FEFF 		bl	memset
 11019              	.LVL787:
2010:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 11020              		.loc 1 2010 3 is_stmt 1 view .LVU2701
2010:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 11021              		.loc 1 2010 22 is_stmt 0 view .LVU2702
 11022 0010 0023     		movs	r3, #0
 11023 0012 0793     		str	r3, [sp, #28]
 11024 0014 0893     		str	r3, [sp, #32]
 11025 0016 0993     		str	r3, [sp, #36]
 11026 0018 0A93     		str	r3, [sp, #40]
 11027 001a 0B93     		str	r3, [sp, #44]
2011:Core/Src/main.c **** 
 11028              		.loc 1 2011 3 is_stmt 1 view .LVU2703
2011:Core/Src/main.c **** 
 11029              		.loc 1 2011 28 is_stmt 0 view .LVU2704
 11030 001c 0393     		str	r3, [sp, #12]
 11031 001e 0493     		str	r3, [sp, #16]
 11032 0020 0593     		str	r3, [sp, #20]
 11033 0022 0693     		str	r3, [sp, #24]
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11034              		.loc 1 2015 3 is_stmt 1 view .LVU2705
 11035              	.LBB107:
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11036              		.loc 1 2015 3 view .LVU2706
 11037 0024 0193     		str	r3, [sp, #4]
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11038              		.loc 1 2015 3 view .LVU2707
 11039 0026 284A     		ldr	r2, .L728
 11040 0028 116C     		ldr	r1, [r2, #64]
 11041 002a 41F08051 		orr	r1, r1, #268435456
 11042 002e 1164     		str	r1, [r2, #64]
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11043              		.loc 1 2015 3 view .LVU2708
 11044 0030 126C     		ldr	r2, [r2, #64]
 11045 0032 02F08052 		and	r2, r2, #268435456
 11046 0036 0192     		str	r2, [sp, #4]
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11047              		.loc 1 2015 3 view .LVU2709
 11048 0038 019A     		ldr	r2, [sp, #4]
 11049              	.LBE107:
2015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 11050              		.loc 1 2015 3 view .LVU2710
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 11051              		.loc 1 2016 3 view .LVU2711
 11052              	.LBB108:
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 11053              		.loc 1 2016 3 view .LVU2712
 11054 003a 0293     		str	r3, [sp, #8]
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 340


 11055              		.loc 1 2016 3 view .LVU2713
 11056 003c 234B     		ldr	r3, .L728+4
 11057 003e 1A68     		ldr	r2, [r3]
 11058 0040 42F48042 		orr	r2, r2, #16384
 11059 0044 1A60     		str	r2, [r3]
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 11060              		.loc 1 2016 3 view .LVU2714
 11061 0046 1B68     		ldr	r3, [r3]
 11062 0048 03F48043 		and	r3, r3, #16384
 11063 004c 0293     		str	r3, [sp, #8]
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 11064              		.loc 1 2016 3 view .LVU2715
 11065 004e 029B     		ldr	r3, [sp, #8]
 11066              	.LBE108:
2016:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 11067              		.loc 1 2016 3 view .LVU2716
2020:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 11068              		.loc 1 2020 3 view .LVU2717
2020:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 11069              		.loc 1 2020 36 is_stmt 0 view .LVU2718
 11070 0050 0D23     		movs	r3, #13
 11071 0052 0C93     		str	r3, [sp, #48]
2022:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 11072              		.loc 1 2022 3 is_stmt 1 view .LVU2719
2022:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 11073              		.loc 1 2022 30 is_stmt 0 view .LVU2720
 11074 0054 4FF48033 		mov	r3, #65536
 11075 0058 0D93     		str	r3, [sp, #52]
2023:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 11076              		.loc 1 2023 3 is_stmt 1 view .LVU2721
2023:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 11077              		.loc 1 2023 30 is_stmt 0 view .LVU2722
 11078 005a 0123     		movs	r3, #1
 11079 005c 0E93     		str	r3, [sp, #56]
2024:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 11080              		.loc 1 2024 3 is_stmt 1 view .LVU2723
2024:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 11081              		.loc 1 2024 30 is_stmt 0 view .LVU2724
 11082 005e 1193     		str	r3, [sp, #68]
2025:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 11083              		.loc 1 2025 3 is_stmt 1 view .LVU2725
2025:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 11084              		.loc 1 2025 34 is_stmt 0 view .LVU2726
 11085 0060 0223     		movs	r3, #2
 11086 0062 1293     		str	r3, [sp, #72]
2026:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 11087              		.loc 1 2026 3 is_stmt 1 view .LVU2727
2026:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 11088              		.loc 1 2026 35 is_stmt 0 view .LVU2728
 11089 0064 4FF48002 		mov	r2, #4194304
 11090 0068 1392     		str	r2, [sp, #76]
2027:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 11091              		.loc 1 2027 3 is_stmt 1 view .LVU2729
2027:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 11092              		.loc 1 2027 30 is_stmt 0 view .LVU2730
 11093 006a 0822     		movs	r2, #8
 11094 006c 1492     		str	r2, [sp, #80]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 341


2028:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 11095              		.loc 1 2028 3 is_stmt 1 view .LVU2731
2028:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 11096              		.loc 1 2028 30 is_stmt 0 view .LVU2732
 11097 006e A822     		movs	r2, #168
 11098 0070 1592     		str	r2, [sp, #84]
2029:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 11099              		.loc 1 2029 3 is_stmt 1 view .LVU2733
2029:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 11100              		.loc 1 2029 30 is_stmt 0 view .LVU2734
 11101 0072 1693     		str	r3, [sp, #88]
2030:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 11102              		.loc 1 2030 3 is_stmt 1 view .LVU2735
2030:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 11103              		.loc 1 2030 30 is_stmt 0 view .LVU2736
 11104 0074 0723     		movs	r3, #7
 11105 0076 1793     		str	r3, [sp, #92]
2031:Core/Src/main.c ****   {
 11106              		.loc 1 2031 3 is_stmt 1 view .LVU2737
2031:Core/Src/main.c ****   {
 11107              		.loc 1 2031 7 is_stmt 0 view .LVU2738
 11108 0078 0CA8     		add	r0, sp, #48
 11109 007a FFF7FEFF 		bl	HAL_RCC_OscConfig
 11110              	.LVL788:
2031:Core/Src/main.c ****   {
 11111              		.loc 1 2031 6 view .LVU2739
 11112 007e E0B9     		cbnz	r0, .L725
2037:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 11113              		.loc 1 2037 3 is_stmt 1 view .LVU2740
2037:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 11114              		.loc 1 2037 31 is_stmt 0 view .LVU2741
 11115 0080 0F23     		movs	r3, #15
 11116 0082 0793     		str	r3, [sp, #28]
2039:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 11117              		.loc 1 2039 3 is_stmt 1 view .LVU2742
2039:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 11118              		.loc 1 2039 34 is_stmt 0 view .LVU2743
 11119 0084 0223     		movs	r3, #2
 11120 0086 0893     		str	r3, [sp, #32]
2040:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 11121              		.loc 1 2040 3 is_stmt 1 view .LVU2744
2040:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 11122              		.loc 1 2040 35 is_stmt 0 view .LVU2745
 11123 0088 0023     		movs	r3, #0
 11124 008a 0993     		str	r3, [sp, #36]
2041:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 11125              		.loc 1 2041 3 is_stmt 1 view .LVU2746
2041:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 11126              		.loc 1 2041 36 is_stmt 0 view .LVU2747
 11127 008c 4FF4A053 		mov	r3, #5120
 11128 0090 0A93     		str	r3, [sp, #40]
2042:Core/Src/main.c **** 
 11129              		.loc 1 2042 3 is_stmt 1 view .LVU2748
2042:Core/Src/main.c **** 
 11130              		.loc 1 2042 36 is_stmt 0 view .LVU2749
 11131 0092 4FF48053 		mov	r3, #4096
 11132 0096 0B93     		str	r3, [sp, #44]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 342


2044:Core/Src/main.c ****   {
 11133              		.loc 1 2044 3 is_stmt 1 view .LVU2750
2044:Core/Src/main.c ****   {
 11134              		.loc 1 2044 7 is_stmt 0 view .LVU2751
 11135 0098 0521     		movs	r1, #5
 11136 009a 07A8     		add	r0, sp, #28
 11137 009c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 11138              	.LVL789:
2044:Core/Src/main.c ****   {
 11139              		.loc 1 2044 6 view .LVU2752
 11140 00a0 68B9     		cbnz	r0, .L726
2048:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 11141              		.loc 1 2048 3 is_stmt 1 view .LVU2753
2048:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 11142              		.loc 1 2048 44 is_stmt 0 view .LVU2754
 11143 00a2 0223     		movs	r3, #2
 11144 00a4 0393     		str	r3, [sp, #12]
2049:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 11145              		.loc 1 2049 3 is_stmt 1 view .LVU2755
2049:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 11146              		.loc 1 2049 41 is_stmt 0 view .LVU2756
 11147 00a6 4FF48073 		mov	r3, #256
 11148 00aa 0693     		str	r3, [sp, #24]
2050:Core/Src/main.c ****   {
 11149              		.loc 1 2050 3 is_stmt 1 view .LVU2757
2050:Core/Src/main.c ****   {
 11150              		.loc 1 2050 7 is_stmt 0 view .LVU2758
 11151 00ac 03A8     		add	r0, sp, #12
 11152 00ae FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 11153              	.LVL790:
2050:Core/Src/main.c ****   {
 11154              		.loc 1 2050 6 view .LVU2759
 11155 00b2 30B9     		cbnz	r0, .L727
2054:Core/Src/main.c **** 
 11156              		.loc 1 2054 1 view .LVU2760
 11157 00b4 19B0     		add	sp, sp, #100
 11158              	.LCFI126:
 11159              		.cfi_remember_state
 11160              		.cfi_def_cfa_offset 4
 11161              		@ sp needed
 11162 00b6 5DF804FB 		ldr	pc, [sp], #4
 11163              	.L725:
 11164              	.LCFI127:
 11165              		.cfi_restore_state
2033:Core/Src/main.c ****   }
 11166              		.loc 1 2033 5 is_stmt 1 view .LVU2761
 11167 00ba FFF7FEFF 		bl	Error_Handler
 11168              	.LVL791:
 11169              	.L726:
2046:Core/Src/main.c ****   }
 11170              		.loc 1 2046 5 view .LVU2762
 11171 00be FFF7FEFF 		bl	Error_Handler
 11172              	.LVL792:
 11173              	.L727:
2052:Core/Src/main.c ****   }
 11174              		.loc 1 2052 5 view .LVU2763
 11175 00c2 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 343


 11176              	.LVL793:
 11177              	.L729:
 11178 00c6 00BF     		.align	2
 11179              	.L728:
 11180 00c8 00380240 		.word	1073887232
 11181 00cc 00700040 		.word	1073770496
 11182              		.cfi_endproc
 11183              	.LFE316:
 11185              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 11186              		.align	2
 11187              	.LC120:
 11188 0000 52617A6F 		.ascii	"RazorBoard booting...please wait!\015\012\000"
 11188      72426F61 
 11188      72642062 
 11188      6F6F7469 
 11188      6E672E2E 
 11189              		.align	2
 11190              	.LC121:
 11191 0024 426F6F74 		.ascii	"Booting done!\015\012\000"
 11191      696E6720 
 11191      646F6E65 
 11191      210D0A00 
 11192              		.section	.text.main,"ax",%progbits
 11193              		.align	1
 11194              		.global	main
 11195              		.syntax unified
 11196              		.thumb
 11197              		.thumb_func
 11198              		.fpu fpv4-sp-d16
 11200              	main:
 11201              	.LFB315:
1859:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 11202              		.loc 1 1859 1 view -0
 11203              		.cfi_startproc
 11204              		@ Volatile: function does not return.
 11205              		@ args = 0, pretend = 0, frame = 0
 11206              		@ frame_needed = 0, uses_anonymous_args = 0
 11207 0000 08B5     		push	{r3, lr}
 11208              	.LCFI128:
 11209              		.cfi_def_cfa_offset 8
 11210              		.cfi_offset 3, -8
 11211              		.cfi_offset 14, -4
1867:Core/Src/main.c **** 
 11212              		.loc 1 1867 3 view .LVU2765
 11213 0002 FFF7FEFF 		bl	HAL_Init
 11214              	.LVL794:
1874:Core/Src/main.c **** 
 11215              		.loc 1 1874 3 view .LVU2766
 11216 0006 FFF7FEFF 		bl	SystemClock_Config
 11217              	.LVL795:
1881:Core/Src/main.c ****   MX_DMA_Init();
 11218              		.loc 1 1881 3 view .LVU2767
 11219 000a FFF7FEFF 		bl	MX_GPIO_Init
 11220              	.LVL796:
1882:Core/Src/main.c ****   MX_ADC1_Init();
 11221              		.loc 1 1882 3 view .LVU2768
 11222 000e FFF7FEFF 		bl	MX_DMA_Init
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 344


 11223              	.LVL797:
1883:Core/Src/main.c ****   MX_I2C1_Init();
 11224              		.loc 1 1883 3 view .LVU2769
 11225 0012 FFF7FEFF 		bl	MX_ADC1_Init
 11226              	.LVL798:
1884:Core/Src/main.c ****   MX_I2C2_Init();
 11227              		.loc 1 1884 3 view .LVU2770
 11228 0016 FFF7FEFF 		bl	MX_I2C1_Init
 11229              	.LVL799:
1885:Core/Src/main.c ****   MX_IWDG_Init();
 11230              		.loc 1 1885 3 view .LVU2771
 11231 001a FFF7FEFF 		bl	MX_I2C2_Init
 11232              	.LVL800:
1886:Core/Src/main.c ****   MX_RNG_Init();
 11233              		.loc 1 1886 3 view .LVU2772
 11234 001e FFF7FEFF 		bl	MX_IWDG_Init
 11235              	.LVL801:
1887:Core/Src/main.c ****   MX_USART1_UART_Init();
 11236              		.loc 1 1887 3 view .LVU2773
 11237 0022 FFF7FEFF 		bl	MX_RNG_Init
 11238              	.LVL802:
1888:Core/Src/main.c ****   MX_USART2_UART_Init();
 11239              		.loc 1 1888 3 view .LVU2774
 11240 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 11241              	.LVL803:
1889:Core/Src/main.c ****   MX_TIM3_Init();
 11242              		.loc 1 1889 3 view .LVU2775
 11243 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 11244              	.LVL804:
1890:Core/Src/main.c ****   MX_TIM4_Init();
 11245              		.loc 1 1890 3 view .LVU2776
 11246 002e FFF7FEFF 		bl	MX_TIM3_Init
 11247              	.LVL805:
1891:Core/Src/main.c ****   MX_RTC_Init();
 11248              		.loc 1 1891 3 view .LVU2777
 11249 0032 FFF7FEFF 		bl	MX_TIM4_Init
 11250              	.LVL806:
1892:Core/Src/main.c ****   MX_TIM2_Init();
 11251              		.loc 1 1892 3 view .LVU2778
 11252 0036 FFF7FEFF 		bl	MX_RTC_Init
 11253              	.LVL807:
1893:Core/Src/main.c ****   MX_TIM5_Init();
 11254              		.loc 1 1893 3 view .LVU2779
 11255 003a FFF7FEFF 		bl	MX_TIM2_Init
 11256              	.LVL808:
1894:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 11257              		.loc 1 1894 3 view .LVU2780
 11258 003e FFF7FEFF 		bl	MX_TIM5_Init
 11259              	.LVL809:
1897:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim3);					// Start TIM3 on cutter motor
 11260              		.loc 1 1897 3 view .LVU2781
 11261 0042 634C     		ldr	r4, .L744
 11262 0044 2046     		mov	r0, r4
 11263 0046 FFF7FEFF 		bl	HAL_TIM_Base_Start
 11264              	.LVL810:
1898:Core/Src/main.c **** 
 11265              		.loc 1 1898 3 view .LVU2782
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 345


 11266 004a 624D     		ldr	r5, .L744+4
 11267 004c 2846     		mov	r0, r5
 11268 004e FFF7FEFF 		bl	HAL_TIM_Base_Start
 11269              	.LVL811:
1900:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_2);		//M1 Motor PWM
 11270              		.loc 1 1900 3 view .LVU2783
 11271 0052 0021     		movs	r1, #0
 11272 0054 2046     		mov	r0, r4
 11273 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11274              	.LVL812:
1901:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_3);		//M2 Motor PWM
 11275              		.loc 1 1901 3 view .LVU2784
 11276 005a 0421     		movs	r1, #4
 11277 005c 2046     		mov	r0, r4
 11278 005e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11279              	.LVL813:
1902:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4,TIM_CHANNEL_4);		//M2 Motor PWM
 11280              		.loc 1 1902 3 view .LVU2785
 11281 0062 0821     		movs	r1, #8
 11282 0064 2046     		mov	r0, r4
 11283 0066 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11284              	.LVL814:
1903:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);		//C1 Motor PWM
 11285              		.loc 1 1903 3 view .LVU2786
 11286 006a 0C21     		movs	r1, #12
 11287 006c 2046     		mov	r0, r4
 11288 006e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11289              	.LVL815:
1904:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);		//C1 Motor PWM
 11290              		.loc 1 1904 3 view .LVU2787
 11291 0072 0021     		movs	r1, #0
 11292 0074 2846     		mov	r0, r5
 11293 0076 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11294              	.LVL816:
1905:Core/Src/main.c **** 
 11295              		.loc 1 1905 3 view .LVU2788
 11296 007a 0421     		movs	r1, #4
 11297 007c 2846     		mov	r0, r5
 11298 007e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 11299              	.LVL817:
1907:Core/Src/main.c **** 
 11300              		.loc 1 1907 3 view .LVU2789
 11301 0082 5548     		ldr	r0, .L744+8
 11302 0084 FFF7FEFF 		bl	HAL_TIM_Base_Start
 11303              	.LVL818:
1909:Core/Src/main.c ****   TIM4->CCR2 = 0;								//M1 Motor - Make sure PWM is 0
 11304              		.loc 1 1909 3 view .LVU2790
1909:Core/Src/main.c ****   TIM4->CCR2 = 0;								//M1 Motor - Make sure PWM is 0
 11305              		.loc 1 1909 14 is_stmt 0 view .LVU2791
 11306 0088 544A     		ldr	r2, .L744+12
 11307 008a 0023     		movs	r3, #0
 11308 008c 5363     		str	r3, [r2, #52]
1910:Core/Src/main.c ****   TIM4->CCR3 = 0;								//M2 Motor - Make sure PWM is 0
 11309              		.loc 1 1910 3 is_stmt 1 view .LVU2792
1910:Core/Src/main.c ****   TIM4->CCR3 = 0;								//M2 Motor - Make sure PWM is 0
 11310              		.loc 1 1910 14 is_stmt 0 view .LVU2793
 11311 008e 9363     		str	r3, [r2, #56]
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 346


1911:Core/Src/main.c ****   TIM4->CCR4 = 0;								//M2 Motor - Make sure PWM is 0
 11312              		.loc 1 1911 3 is_stmt 1 view .LVU2794
1911:Core/Src/main.c ****   TIM4->CCR4 = 0;								//M2 Motor - Make sure PWM is 0
 11313              		.loc 1 1911 14 is_stmt 0 view .LVU2795
 11314 0090 D363     		str	r3, [r2, #60]
1912:Core/Src/main.c ****   TIM3->CCR1 = 0;								//C1 Motor - Make sure PWM is 0
 11315              		.loc 1 1912 3 is_stmt 1 view .LVU2796
1912:Core/Src/main.c ****   TIM3->CCR1 = 0;								//C1 Motor - Make sure PWM is 0
 11316              		.loc 1 1912 14 is_stmt 0 view .LVU2797
 11317 0092 1364     		str	r3, [r2, #64]
1913:Core/Src/main.c ****   TIM3->CCR2 = 0;								//C1 Motor - Make sure PWM is 0
 11318              		.loc 1 1913 3 is_stmt 1 view .LVU2798
1913:Core/Src/main.c ****   TIM3->CCR2 = 0;								//C1 Motor - Make sure PWM is 0
 11319              		.loc 1 1913 14 is_stmt 0 view .LVU2799
 11320 0094 A2F58062 		sub	r2, r2, #1024
 11321 0098 5363     		str	r3, [r2, #52]
1914:Core/Src/main.c **** 
 11322              		.loc 1 1914 3 is_stmt 1 view .LVU2800
1914:Core/Src/main.c **** 
 11323              		.loc 1 1914 14 is_stmt 0 view .LVU2801
 11324 009a 9363     		str	r3, [r2, #56]
1921:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);				// 1 second interrupt, will update the watchdog and send info t
 11325              		.loc 1 1921 3 is_stmt 1 view .LVU2802
 11326 009c FFF7FEFF 		bl	WatchdogInit
 11327              	.LVL819:
1922:Core/Src/main.c **** 
 11328              		.loc 1 1922 3 view .LVU2803
 11329 00a0 4F48     		ldr	r0, .L744+16
 11330 00a2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 11331              	.LVL820:
1924:Core/Src/main.c ****   Serial_Console("RazorBoard booting...please wait!\r\n");
 11332              		.loc 1 1924 3 view .LVU2804
 11333 00a6 4F4C     		ldr	r4, .L744+20
 11334 00a8 2046     		mov	r0, r4
 11335 00aa FFF7FEFF 		bl	Serial_RPi
 11336              	.LVL821:
1925:Core/Src/main.c **** 
 11337              		.loc 1 1925 3 view .LVU2805
 11338 00ae 2046     		mov	r0, r4
 11339 00b0 FFF7FEFF 		bl	Serial_Console
 11340              	.LVL822:
1927:Core/Src/main.c **** 
 11341              		.loc 1 1927 3 view .LVU2806
 11342 00b4 4FF40072 		mov	r2, #512
 11343 00b8 4B49     		ldr	r1, .L744+24
 11344 00ba 4C48     		ldr	r0, .L744+28
 11345 00bc FFF7FEFF 		bl	HAL_ADC_Start_DMA
 11346              	.LVL823:
1929:Core/Src/main.c **** 
 11347              		.loc 1 1929 3 view .LVU2807
 11348 00c0 FFF7FEFF 		bl	InitFIR
 11349              	.LVL824:
1931:Core/Src/main.c **** 
 11350              		.loc 1 1931 3 view .LVU2808
 11351 00c4 4A48     		ldr	r0, .L744+32
 11352 00c6 FFF7FEFF 		bl	HAL_RNG_Init
 11353              	.LVL825:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 347


1933:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart2, UART_IT_IDLE);	// Enable interrupt for the Raspberry Pi
 11354              		.loc 1 1933 3 view .LVU2809
 11355 00ca 4A4B     		ldr	r3, .L744+36
 11356 00cc 1A68     		ldr	r2, [r3]
 11357 00ce D368     		ldr	r3, [r2, #12]
 11358 00d0 43F01003 		orr	r3, r3, #16
 11359 00d4 D360     		str	r3, [r2, #12]
1934:Core/Src/main.c **** 
 11360              		.loc 1 1934 3 view .LVU2810
 11361 00d6 484B     		ldr	r3, .L744+40
 11362 00d8 1A68     		ldr	r2, [r3]
 11363 00da D368     		ldr	r3, [r2, #12]
 11364 00dc 43F01003 		orr	r3, r3, #16
 11365 00e0 D360     		str	r3, [r2, #12]
1936:Core/Src/main.c ****   IMU_timer = HAL_GetTick();					// Initial load of the IMU timer
 11366              		.loc 1 1936 3 view .LVU2811
1936:Core/Src/main.c ****   IMU_timer = HAL_GetTick();					// Initial load of the IMU timer
 11367              		.loc 1 1936 15 is_stmt 0 view .LVU2812
 11368 00e2 FFF7FEFF 		bl	HAL_GetTick
 11369              	.LVL826:
1936:Core/Src/main.c ****   IMU_timer = HAL_GetTick();					// Initial load of the IMU timer
 11370              		.loc 1 1936 13 view .LVU2813
 11371 00e6 454B     		ldr	r3, .L744+44
 11372 00e8 1860     		str	r0, [r3]
1937:Core/Src/main.c ****   MotorSpeedUpdateFreq_timer =  HAL_GetTick();	// Initial load of the MotorSpeedUpdateFreq
 11373              		.loc 1 1937 3 is_stmt 1 view .LVU2814
1937:Core/Src/main.c ****   MotorSpeedUpdateFreq_timer =  HAL_GetTick();	// Initial load of the MotorSpeedUpdateFreq
 11374              		.loc 1 1937 15 is_stmt 0 view .LVU2815
 11375 00ea FFF7FEFF 		bl	HAL_GetTick
 11376              	.LVL827:
1937:Core/Src/main.c ****   MotorSpeedUpdateFreq_timer =  HAL_GetTick();	// Initial load of the MotorSpeedUpdateFreq
 11377              		.loc 1 1937 13 view .LVU2816
 11378 00ee 444B     		ldr	r3, .L744+48
 11379 00f0 1860     		str	r0, [r3]
1938:Core/Src/main.c **** 
 11380              		.loc 1 1938 3 is_stmt 1 view .LVU2817
1938:Core/Src/main.c **** 
 11381              		.loc 1 1938 33 is_stmt 0 view .LVU2818
 11382 00f2 FFF7FEFF 		bl	HAL_GetTick
 11383              	.LVL828:
1938:Core/Src/main.c **** 
 11384              		.loc 1 1938 30 view .LVU2819
 11385 00f6 434B     		ldr	r3, .L744+52
 11386 00f8 1860     		str	r0, [r3]
1940:Core/Src/main.c **** 
 11387              		.loc 1 1940 3 is_stmt 1 view .LVU2820
 11388 00fa FFF7FEFF 		bl	Init6050
 11389              	.LVL829:
1942:Core/Src/main.c **** 
 11390              		.loc 1 1942 3 view .LVU2821
1942:Core/Src/main.c **** 
 11391              		.loc 1 1942 20 is_stmt 0 view .LVU2822
 11392 00fe FFF7FEFF 		bl	HAL_GetTick
 11393              	.LVL830:
1942:Core/Src/main.c **** 
 11394              		.loc 1 1942 18 view .LVU2823
 11395 0102 414B     		ldr	r3, .L744+56
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 348


 11396 0104 1860     		str	r0, [r3]
1944:Core/Src/main.c **** 
 11397              		.loc 1 1944 3 is_stmt 1 view .LVU2824
 11398 0106 6420     		movs	r0, #100
 11399 0108 FFF7FEFF 		bl	delay_us
 11400              	.LVL831:
1946:Core/Src/main.c ****   Serial_Console("Booting done!\r\n");
 11401              		.loc 1 1946 3 view .LVU2825
 11402 010c 3F4C     		ldr	r4, .L744+60
 11403 010e 2046     		mov	r0, r4
 11404 0110 FFF7FEFF 		bl	Serial_RPi
 11405              	.LVL832:
1947:Core/Src/main.c **** 
 11406              		.loc 1 1947 3 view .LVU2826
 11407 0114 2046     		mov	r0, r4
 11408 0116 FFF7FEFF 		bl	Serial_Console
 11409              	.LVL833:
 11410 011a 26E0     		b	.L737
 11411              	.L743:
1954:Core/Src/main.c ****   	  MPU6050_Read_Gyro();
 11412              		.loc 1 1954 7 view .LVU2827
 11413 011c FFF7FEFF 		bl	MPU6050_Read_Accel
 11414              	.LVL834:
1955:Core/Src/main.c ****   	  ProcessIMUData();
 11415              		.loc 1 1955 6 view .LVU2828
 11416 0120 FFF7FEFF 		bl	MPU6050_Read_Gyro
 11417              	.LVL835:
1956:Core/Src/main.c ****   	  IMU_timer = HAL_GetTick();
 11418              		.loc 1 1956 6 view .LVU2829
 11419 0124 FFF7FEFF 		bl	ProcessIMUData
 11420              	.LVL836:
1957:Core/Src/main.c ****   	  }
 11421              		.loc 1 1957 6 view .LVU2830
1957:Core/Src/main.c ****   	  }
 11422              		.loc 1 1957 18 is_stmt 0 view .LVU2831
 11423 0128 FFF7FEFF 		bl	HAL_GetTick
 11424              	.LVL837:
1957:Core/Src/main.c ****   	  }
 11425              		.loc 1 1957 16 view .LVU2832
 11426 012c 344B     		ldr	r3, .L744+48
 11427 012e 1860     		str	r0, [r3]
 11428 0130 22E0     		b	.L731
 11429              	.L733:
1975:Core/Src/main.c ****   		CheckVoltage();
 11430              		.loc 1 1975 5 is_stmt 1 view .LVU2833
 11431 0132 FFF7FEFF 		bl	CollectADC
 11432              	.LVL838:
1976:Core/Src/main.c ****   	}
 11433              		.loc 1 1976 5 view .LVU2834
 11434 0136 FFF7FEFF 		bl	CheckVoltage
 11435              	.LVL839:
 11436              	.L734:
1982:Core/Src/main.c **** 
 11437              		.loc 1 1982 5 view .LVU2835
1982:Core/Src/main.c **** 
 11438              		.loc 1 1982 24 is_stmt 0 view .LVU2836
 11439 013a 354B     		ldr	r3, .L744+64
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 349


 11440 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1982:Core/Src/main.c **** 
 11441              		.loc 1 1982 8 view .LVU2837
 11442 013e 012B     		cmp	r3, #1
 11443 0140 3CD0     		beq	.L740
 11444              	.L735:
1984:Core/Src/main.c **** 
 11445              		.loc 1 1984 4 is_stmt 1 view .LVU2838
 11446 0142 FFF7FEFF 		bl	ChargerConnected
 11447              	.LVL840:
1986:Core/Src/main.c ****     HAL_UART_Receive_DMA(&huart2, PIBuffer, PI_BFR_SIZE);
 11448              		.loc 1 1986 4 view .LVU2839
 11449 0146 4022     		movs	r2, #64
 11450 0148 3249     		ldr	r1, .L744+68
 11451 014a 2A48     		ldr	r0, .L744+36
 11452 014c FFF7FEFF 		bl	HAL_UART_Receive_DMA
 11453              	.LVL841:
1987:Core/Src/main.c **** 
 11454              		.loc 1 1987 5 view .LVU2840
 11455 0150 4022     		movs	r2, #64
 11456 0152 3149     		ldr	r1, .L744+72
 11457 0154 2848     		ldr	r0, .L744+40
 11458 0156 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 11459              	.LVL842:
1989:Core/Src/main.c ****     	parseCommand_Console();
 11460              		.loc 1 1989 5 view .LVU2841
1989:Core/Src/main.c ****     	parseCommand_Console();
 11461              		.loc 1 1989 21 is_stmt 0 view .LVU2842
 11462 015a 304B     		ldr	r3, .L744+76
 11463 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1989:Core/Src/main.c ****     	parseCommand_Console();
 11464              		.loc 1 1989 8 view .LVU2843
 11465 015e 012B     		cmp	r3, #1
 11466 0160 2FD0     		beq	.L741
 11467              	.L736:
1992:Core/Src/main.c ****   		parseCommand_RPI();
 11468              		.loc 1 1992 4 is_stmt 1 view .LVU2844
1992:Core/Src/main.c ****   		parseCommand_RPI();
 11469              		.loc 1 1992 20 is_stmt 0 view .LVU2845
 11470 0162 2F4B     		ldr	r3, .L744+80
 11471 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1992:Core/Src/main.c ****   		parseCommand_RPI();
 11472              		.loc 1 1992 7 view .LVU2846
 11473 0166 012B     		cmp	r3, #1
 11474 0168 2ED0     		beq	.L742
 11475              	.L737:
1949:Core/Src/main.c ****     {
 11476              		.loc 1 1949 3 is_stmt 1 view .LVU2847
1953:Core/Src/main.c ****    	  MPU6050_Read_Accel();
 11477              		.loc 1 1953 4 view .LVU2848
1953:Core/Src/main.c ****    	  MPU6050_Read_Accel();
 11478              		.loc 1 1953 8 is_stmt 0 view .LVU2849
 11479 016a FFF7FEFF 		bl	HAL_GetTick
 11480              	.LVL843:
1953:Core/Src/main.c ****    	  MPU6050_Read_Accel();
 11481              		.loc 1 1953 22 view .LVU2850
 11482 016e 244B     		ldr	r3, .L744+48
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 350


 11483 0170 1B68     		ldr	r3, [r3]
 11484 0172 C01A     		subs	r0, r0, r3
1953:Core/Src/main.c ****    	  MPU6050_Read_Accel();
 11485              		.loc 1 1953 7 view .LVU2851
 11486 0174 1328     		cmp	r0, #19
 11487 0176 D1D8     		bhi	.L743
 11488              	.L731:
1961:Core/Src/main.c **** 
 11489              		.loc 1 1961 4 is_stmt 1 view .LVU2852
1961:Core/Src/main.c **** 
 11490              		.loc 1 1961 32 is_stmt 0 view .LVU2853
 11491 0178 2A4B     		ldr	r3, .L744+84
 11492 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1961:Core/Src/main.c **** 
 11493              		.loc 1 1961 7 view .LVU2854
 11494 017c DBB9     		cbnz	r3, .L732
1963:Core/Src/main.c **** 
 11495              		.loc 1 1963 5 is_stmt 1 view .LVU2855
 11496 017e FFF7FEFF 		bl	CheckSecurity
 11497              	.LVL844:
1965:Core/Src/main.c **** 
 11498              		.loc 1 1965 5 view .LVU2856
 11499 0182 FFF7FEFF 		bl	CheckState
 11500              	.LVL845:
1967:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
 11501              		.loc 1 1967 5 view .LVU2857
1967:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
 11502              		.loc 1 1967 15 is_stmt 0 view .LVU2858
 11503 0186 284B     		ldr	r3, .L744+88
 11504 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1967:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
 11505              		.loc 1 1967 8 view .LVU2859
 11506 018a 012B     		cmp	r3, #1
 11507 018c D1D1     		bne	.L733
1967:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
 11508              		.loc 1 1967 42 discriminator 1 view .LVU2860
 11509 018e 274B     		ldr	r3, .L744+92
 11510 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1967:Core/Src/main.c ****   			if (HAL_GetTick() - MotorSpeedUpdateFreq_timer >= MotorSpeedUpdateFreq) {
 11511              		.loc 1 1967 26 discriminator 1 view .LVU2861
 11512 0192 012B     		cmp	r3, #1
 11513 0194 CDD1     		bne	.L733
1968:Core/Src/main.c **** 
 11514              		.loc 1 1968 6 is_stmt 1 view .LVU2862
1968:Core/Src/main.c **** 
 11515              		.loc 1 1968 10 is_stmt 0 view .LVU2863
 11516 0196 FFF7FEFF 		bl	HAL_GetTick
 11517              	.LVL846:
1968:Core/Src/main.c **** 
 11518              		.loc 1 1968 24 view .LVU2864
 11519 019a 1A4B     		ldr	r3, .L744+52
 11520 019c 1B68     		ldr	r3, [r3]
 11521 019e C01A     		subs	r0, r0, r3
1968:Core/Src/main.c **** 
 11522              		.loc 1 1968 53 view .LVU2865
 11523 01a0 234B     		ldr	r3, .L744+96
 11524 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 351


1968:Core/Src/main.c **** 
 11525              		.loc 1 1968 9 view .LVU2866
 11526 01a4 9842     		cmp	r0, r3
 11527 01a6 C4D3     		bcc	.L733
1970:Core/Src/main.c ****   			 MotorSpeedUpdateFreq_timer =  HAL_GetTick();
 11528              		.loc 1 1970 7 is_stmt 1 view .LVU2867
 11529 01a8 FFF7FEFF 		bl	UpdateMotorSpeed
 11530              	.LVL847:
1971:Core/Src/main.c **** 
 11531              		.loc 1 1971 7 view .LVU2868
1971:Core/Src/main.c **** 
 11532              		.loc 1 1971 37 is_stmt 0 view .LVU2869
 11533 01ac FFF7FEFF 		bl	HAL_GetTick
 11534              	.LVL848:
1971:Core/Src/main.c **** 
 11535              		.loc 1 1971 34 view .LVU2870
 11536 01b0 144B     		ldr	r3, .L744+52
 11537 01b2 1860     		str	r0, [r3]
 11538 01b4 BDE7     		b	.L733
 11539              	.L732:
1979:Core/Src/main.c ****   	}
 11540              		.loc 1 1979 5 is_stmt 1 view .LVU2871
 11541 01b6 FFF7FEFF 		bl	perimeterTracker
 11542              	.LVL849:
 11543 01ba BEE7     		b	.L734
 11544              	.L740:
1982:Core/Src/main.c **** 
 11545              		.loc 1 1982 30 discriminator 1 view .LVU2872
 11546 01bc FFF7FEFF 		bl	SendInfo
 11547              	.LVL850:
 11548 01c0 BFE7     		b	.L735
 11549              	.L741:
1990:Core/Src/main.c ****     }
 11550              		.loc 1 1990 6 view .LVU2873
 11551 01c2 FFF7FEFF 		bl	parseCommand_Console
 11552              	.LVL851:
 11553 01c6 CCE7     		b	.L736
 11554              	.L742:
1993:Core/Src/main.c ****   	}
 11555              		.loc 1 1993 5 view .LVU2874
 11556 01c8 FFF7FEFF 		bl	parseCommand_RPI
 11557              	.LVL852:
 11558 01cc CDE7     		b	.L737
 11559              	.L745:
 11560 01ce 00BF     		.align	2
 11561              	.L744:
 11562 01d0 00000000 		.word	htim4
 11563 01d4 00000000 		.word	htim3
 11564 01d8 00000000 		.word	htim5
 11565 01dc 00080040 		.word	1073743872
 11566 01e0 00000000 		.word	htim2
 11567 01e4 00000000 		.word	.LC120
 11568 01e8 00000000 		.word	ADC_BUFFER
 11569 01ec 00000000 		.word	hadc1
 11570 01f0 00000000 		.word	hrng
 11571 01f4 00000000 		.word	huart1
 11572 01f8 00000000 		.word	huart2
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 352


 11573 01fc 00000000 		.word	.LANCHOR49
 11574 0200 00000000 		.word	.LANCHOR90
 11575 0204 00000000 		.word	.LANCHOR91
 11576 0208 00000000 		.word	Boundary_Timer
 11577 020c 24000000 		.word	.LC121
 11578 0210 00000000 		.word	.LANCHOR60
 11579 0214 00000000 		.word	ConsoleBuffer
 11580 0218 00000000 		.word	PIBuffer
 11581 021c 00000000 		.word	.LANCHOR78
 11582 0220 00000000 		.word	.LANCHOR75
 11583 0224 00000000 		.word	.LANCHOR59
 11584 0228 00000000 		.word	.LANCHOR11
 11585 022c 00000000 		.word	.LANCHOR39
 11586 0230 00000000 		.word	.LANCHOR92
 11587              		.cfi_endproc
 11588              	.LFE315:
 11590              		.comm	hdma_usart2_rx,96,4
 11591              		.comm	hdma_usart1_rx,96,4
 11592              		.comm	huart2,68,4
 11593              		.comm	huart1,68,4
 11594              		.comm	htim5,72,4
 11595              		.comm	htim4,72,4
 11596              		.comm	htim3,72,4
 11597              		.comm	htim2,72,4
 11598              		.comm	hrtc,32,4
 11599              		.comm	hrng,16,4
 11600              		.comm	hi2c2,84,4
 11601              		.comm	hi2c1,84,4
 11602              		.comm	hdma_adc1,96,4
 11603              		.comm	hadc1,72,4
 11604              		.global	DEBUG_RAZORBOARD
 11605              		.global	ChargerConnect
 11606              		.global	MotorSpeedUpdateFreq
 11607              		.global	MotorSpeedUpdateFreq_timer
 11608              		.global	Signature_Record
 11609              		.comm	S,12,4
 11610              		.comm	BWF2,1024,4
 11611              		.comm	BWF1,1024,4
 11612              		.global	Overturn_Limit
 11613              		.global	roll_limit_idx
 11614              		.global	pitch_limit_idx
 11615              		.global	roll_limit
 11616              		.global	pitch_limit
 11617              		.global	pitch_error
 11618              		.global	pitch
 11619              		.global	roll_error
 11620              		.global	roll
 11621              		.global	yaw_error
 11622              		.global	heading
 11623              		.global	hold_heading
 11624              		.global	Force_Active
 11625              		.global	C1_F
 11626              		.global	M2_F
 11627              		.global	M1_F
 11628              		.comm	C1_force,80,4
 11629              		.comm	M2_force,80,4
 11630              		.comm	M1_force,80,4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 353


 11631              		.global	C1_idx
 11632              		.global	M2_idx
 11633              		.global	M1_idx
 11634              		.global	HoldChargeDetection
 11635              		.global	Battery_Ready
 11636              		.global	WorkingHourEnd
 11637              		.global	WorkingHourStart
 11638              		.global	Security
 11639              		.global	UART2_ready
 11640              		.global	UART1_ready
 11641              		.comm	ConsoleBuffer,64,4
 11642              		.comm	PIBuffer,64,4
 11643              		.comm	msg,68,4
 11644              		.global	MasterSwitch
 11645              		.global	Docked
 11646              		.global	SendInfoStatus
 11647              		.global	OUTSIDE_timer
 11648              		.global	IMU_timer
 11649              		.global	ADC_timer
 11650              		.global	AVOID_FRONT
 11651              		.global	AVOID_RIGHT
 11652              		.global	AVOID_LEFT
 11653              		.global	cutterStatus
 11654              		.global	LastState
 11655              		.global	State
 11656              		.global	BWF2_Status
 11657              		.global	BWF1_Status
 11658              		.global	Cutter_Limit
 11659              		.global	Motor_Limit
 11660              		.global	Voltage
 11661              		.global	C1_error
 11662              		.global	M2_error
 11663              		.global	M1_error
 11664              		.global	C1_amp
 11665              		.comm	M2_amp,4,4
 11666              		.comm	M1_amp,4,4
 11667              		.global	Boundary_Timeout
 11668              		.comm	Boundary_Timer,4,4
 11669              		.global	bwf2_outside
 11670              		.global	bwf1_outside
 11671              		.global	bwf2_inside
 11672              		.global	bwf1_inside
 11673              		.global	Signal_Integrity_OUT
 11674              		.global	Signal_Integrity_IN
 11675              		.global	Outside_Threshold
 11676              		.global	Start_Threshold
 11677              		.global	Initial_Start
 11678              		.global	perimeterTrackingActive
 11679              		.global	perimeterTracking
 11680              		.global	previousTime
 11681              		.global	rateError
 11682              		.global	elapsedTime
 11683              		.global	cumError
 11684              		.global	lastError
 11685              		.global	error
 11686              		.global	kd
 11687              		.global	ki
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 354


 11688              		.global	kp
 11689              		.global	Tick2
 11690              		.global	Tick1
 11691              		.global	yaw
 11692              		.comm	raw_pitch,4,4
 11693              		.comm	raw_roll,4,4
 11694              		.comm	Gz,4,4
 11695              		.comm	Gy,4,4
 11696              		.comm	Gx,4,4
 11697              		.comm	Az,4,4
 11698              		.comm	Ay,4,4
 11699              		.comm	Ax,4,4
 11700              		.global	Gyro_Z_RAW
 11701              		.global	Gyro_Y_RAW
 11702              		.global	Gyro_X_RAW
 11703              		.global	Accel_Z_RAW
 11704              		.global	Accel_Y_RAW
 11705              		.global	Accel_X_RAW
 11706              		.global	Channel_Status
 11707              		.global	Channel
 11708              		.global	V1_Value
 11709              		.global	C1_Value
 11710              		.global	M2_Value
 11711              		.global	M1_Value
 11712              		.comm	hiwdg,12,4
 11713              		.global	validSignature
 11714              		.comm	ADC_BUFFER,1024,4
 11715              		.comm	ADCADC,1024,4
 11716              		.section	.bss.ADC_timer,"aw",%nobits
 11717              		.align	2
 11718              		.set	.LANCHOR49,. + 0
 11721              	ADC_timer:
 11722 0000 00000000 		.space	4
 11723              		.section	.bss.AVOID_FRONT,"aw",%nobits
 11724              		.set	.LANCHOR74,. + 0
 11727              	AVOID_FRONT:
 11728 0000 00       		.space	1
 11729              		.section	.bss.AVOID_LEFT,"aw",%nobits
 11730              		.set	.LANCHOR72,. + 0
 11733              	AVOID_LEFT:
 11734 0000 00       		.space	1
 11735              		.section	.bss.AVOID_RIGHT,"aw",%nobits
 11736              		.set	.LANCHOR73,. + 0
 11739              	AVOID_RIGHT:
 11740 0000 00       		.space	1
 11741              		.section	.bss.Accel_X_RAW,"aw",%nobits
 11742              		.align	1
 11743              		.set	.LANCHOR79,. + 0
 11746              	Accel_X_RAW:
 11747 0000 0000     		.space	2
 11748              		.section	.bss.Accel_Y_RAW,"aw",%nobits
 11749              		.align	1
 11750              		.set	.LANCHOR80,. + 0
 11753              	Accel_Y_RAW:
 11754 0000 0000     		.space	2
 11755              		.section	.bss.Accel_Z_RAW,"aw",%nobits
 11756              		.align	1
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 355


 11757              		.set	.LANCHOR81,. + 0
 11760              	Accel_Z_RAW:
 11761 0000 0000     		.space	2
 11762              		.section	.bss.BWF1_Status,"aw",%nobits
 11763              		.set	.LANCHOR18,. + 0
 11766              	BWF1_Status:
 11767 0000 00       		.space	1
 11768              		.section	.bss.BWF2_Status,"aw",%nobits
 11769              		.set	.LANCHOR24,. + 0
 11772              	BWF2_Status:
 11773 0000 00       		.space	1
 11774              		.section	.bss.Battery_Ready,"aw",%nobits
 11775              		.set	.LANCHOR32,. + 0
 11778              	Battery_Ready:
 11779 0000 00       		.space	1
 11780              		.section	.bss.C1_F,"aw",%nobits
 11781              		.align	2
 11784              	C1_F:
 11785 0000 00000000 		.space	4
 11786              		.section	.bss.C1_Value,"aw",%nobits
 11787              		.align	2
 11788              		.set	.LANCHOR50,. + 0
 11791              	C1_Value:
 11792 0000 00000000 		.space	4
 11793              		.section	.bss.C1_amp,"aw",%nobits
 11794              		.align	2
 11795              		.set	.LANCHOR52,. + 0
 11798              	C1_amp:
 11799 0000 00000000 		.space	4
 11800              		.section	.bss.C1_error,"aw",%nobits
 11801              		.align	2
 11802              		.set	.LANCHOR51,. + 0
 11805              	C1_error:
 11806 0000 00000000 		.space	4
 11807              		.section	.bss.C1_idx,"aw",%nobits
 11808              		.set	.LANCHOR38,. + 0
 11811              	C1_idx:
 11812 0000 00       		.space	1
 11813              		.section	.bss.Channel_Status,"aw",%nobits
 11814              		.set	.LANCHOR48,. + 0
 11817              	Channel_Status:
 11818 0000 00       		.space	1
 11819              		.section	.bss.ChargerConnect,"aw",%nobits
 11820              		.set	.LANCHOR57,. + 0
 11823              	ChargerConnect:
 11824 0000 00       		.space	1
 11825              		.section	.bss.DEBUG_RAZORBOARD,"aw",%nobits
 11826              		.set	.LANCHOR61,. + 0
 11829              	DEBUG_RAZORBOARD:
 11830 0000 00       		.space	1
 11831              		.section	.bss.Docked,"aw",%nobits
 11832              		.set	.LANCHOR33,. + 0
 11835              	Docked:
 11836 0000 00       		.space	1
 11837              		.section	.bss.Force_Active,"aw",%nobits
 11838              		.set	.LANCHOR39,. + 0
 11841              	Force_Active:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 356


 11842 0000 00       		.space	1
 11843              		.section	.bss.Gyro_X_RAW,"aw",%nobits
 11844              		.align	1
 11845              		.set	.LANCHOR84,. + 0
 11848              	Gyro_X_RAW:
 11849 0000 0000     		.space	2
 11850              		.section	.bss.Gyro_Y_RAW,"aw",%nobits
 11851              		.align	1
 11852              		.set	.LANCHOR85,. + 0
 11855              	Gyro_Y_RAW:
 11856 0000 0000     		.space	2
 11857              		.section	.bss.Gyro_Z_RAW,"aw",%nobits
 11858              		.align	1
 11859              		.set	.LANCHOR86,. + 0
 11862              	Gyro_Z_RAW:
 11863 0000 0000     		.space	2
 11864              		.section	.bss.IMU_timer,"aw",%nobits
 11865              		.align	2
 11866              		.set	.LANCHOR90,. + 0
 11869              	IMU_timer:
 11870 0000 00000000 		.space	4
 11871              		.section	.bss.Initial_Start,"aw",%nobits
 11872              		.set	.LANCHOR19,. + 0
 11875              	Initial_Start:
 11876 0000 00       		.space	1
 11877              		.section	.bss.LastState,"aw",%nobits
 11878              		.set	.LANCHOR10,. + 0
 11881              	LastState:
 11882 0000 00       		.space	1
 11883              		.section	.bss.M1_F,"aw",%nobits
 11884              		.align	2
 11885              		.set	.LANCHOR43,. + 0
 11888              	M1_F:
 11889 0000 00000000 		.space	4
 11890              		.section	.bss.M1_Value,"aw",%nobits
 11891              		.align	2
 11892              		.set	.LANCHOR41,. + 0
 11895              	M1_Value:
 11896 0000 00000000 		.space	4
 11897              		.section	.bss.M1_error,"aw",%nobits
 11898              		.align	2
 11899              		.set	.LANCHOR42,. + 0
 11902              	M1_error:
 11903 0000 00000000 		.space	4
 11904              		.section	.bss.M1_idx,"aw",%nobits
 11905              		.set	.LANCHOR36,. + 0
 11908              	M1_idx:
 11909 0000 00       		.space	1
 11910              		.section	.bss.M2_F,"aw",%nobits
 11911              		.align	2
 11912              		.set	.LANCHOR47,. + 0
 11915              	M2_F:
 11916 0000 00000000 		.space	4
 11917              		.section	.bss.M2_Value,"aw",%nobits
 11918              		.align	2
 11919              		.set	.LANCHOR45,. + 0
 11922              	M2_Value:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 357


 11923 0000 00000000 		.space	4
 11924              		.section	.bss.M2_error,"aw",%nobits
 11925              		.align	2
 11926              		.set	.LANCHOR46,. + 0
 11929              	M2_error:
 11930 0000 00000000 		.space	4
 11931              		.section	.bss.M2_idx,"aw",%nobits
 11932              		.set	.LANCHOR37,. + 0
 11935              	M2_idx:
 11936 0000 00       		.space	1
 11937              		.section	.bss.MotorSpeedUpdateFreq_timer,"aw",%nobits
 11938              		.align	2
 11939              		.set	.LANCHOR91,. + 0
 11942              	MotorSpeedUpdateFreq_timer:
 11943 0000 00000000 		.space	4
 11944              		.section	.bss.OUTSIDE_timer,"aw",%nobits
 11945              		.align	2
 11946              		.set	.LANCHOR29,. + 0
 11949              	OUTSIDE_timer:
 11950 0000 00000000 		.space	4
 11951              		.section	.bss.Output,"aw",%nobits
 11952              		.align	2
 11953              		.set	.LANCHOR14,. + 0
 11956              	Output:
 11957 0000 00000000 		.space	1024
 11957      00000000 
 11957      00000000 
 11957      00000000 
 11957      00000000 
 11958              		.section	.bss.Security,"aw",%nobits
 11959              		.set	.LANCHOR28,. + 0
 11962              	Security:
 11963 0000 00       		.space	1
 11964              		.section	.bss.SendInfoStatus,"aw",%nobits
 11965              		.set	.LANCHOR60,. + 0
 11968              	SendInfoStatus:
 11969 0000 00       		.space	1
 11970              		.section	.bss.Signature_Record,"aw",%nobits
 11971              		.set	.LANCHOR15,. + 0
 11974              	Signature_Record:
 11975 0000 00       		.space	1
 11976              		.section	.bss.Start_Threshold,"aw",%nobits
 11977              		.align	1
 11978              		.set	.LANCHOR20,. + 0
 11981              	Start_Threshold:
 11982 0000 0000     		.space	2
 11983              		.section	.bss.State,"aw",%nobits
 11984              		.set	.LANCHOR11,. + 0
 11987              	State:
 11988 0000 00       		.space	1
 11989              		.section	.bss.SysMemBootJump,"aw",%nobits
 11990              		.align	2
 11991              		.set	.LANCHOR76,. + 0
 11994              	SysMemBootJump:
 11995 0000 00000000 		.space	4
 11996              		.section	.bss.Tick1,"aw",%nobits
 11997              		.align	3
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 358


 11998              		.set	.LANCHOR64,. + 0
 12001              	Tick1:
 12002 0000 00000000 		.space	8
 12002      00000000 
 12003              		.section	.bss.Tick2,"aw",%nobits
 12004              		.align	3
 12005              		.set	.LANCHOR65,. + 0
 12008              	Tick2:
 12009 0000 00000000 		.space	8
 12009      00000000 
 12010              		.section	.bss.UART1_ready,"aw",%nobits
 12011              		.set	.LANCHOR78,. + 0
 12014              	UART1_ready:
 12015 0000 00       		.space	1
 12016              		.section	.bss.UART2_ready,"aw",%nobits
 12017              		.set	.LANCHOR75,. + 0
 12020              	UART2_ready:
 12021 0000 00       		.space	1
 12022              		.section	.bss.V1_Value,"aw",%nobits
 12023              		.align	2
 12024              		.set	.LANCHOR55,. + 0
 12027              	V1_Value:
 12028 0000 00000000 		.space	4
 12029              		.section	.bss.bwf1_inside,"aw",%nobits
 12030              		.align	2
 12031              		.set	.LANCHOR21,. + 0
 12034              	bwf1_inside:
 12035 0000 00000000 		.space	4
 12036              		.section	.bss.bwf1_outside,"aw",%nobits
 12037              		.align	2
 12038              		.set	.LANCHOR23,. + 0
 12041              	bwf1_outside:
 12042 0000 00000000 		.space	4
 12043              		.section	.bss.bwf2_inside,"aw",%nobits
 12044              		.align	2
 12045              		.set	.LANCHOR25,. + 0
 12048              	bwf2_inside:
 12049 0000 00000000 		.space	4
 12050              		.section	.bss.bwf2_outside,"aw",%nobits
 12051              		.align	2
 12052              		.set	.LANCHOR26,. + 0
 12055              	bwf2_outside:
 12056 0000 00000000 		.space	4
 12057              		.section	.bss.cumError,"aw",%nobits
 12058              		.align	3
 12059              		.set	.LANCHOR67,. + 0
 12062              	cumError:
 12063 0000 00000000 		.space	8
 12063      00000000 
 12064              		.section	.bss.cutterStatus,"aw",%nobits
 12065              		.set	.LANCHOR8,. + 0
 12068              	cutterStatus:
 12069 0000 00       		.space	1
 12070              		.section	.bss.elapsedTime,"aw",%nobits
 12071              		.align	3
 12072              		.set	.LANCHOR63,. + 0
 12075              	elapsedTime:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 359


 12076 0000 00000000 		.space	8
 12076      00000000 
 12077              		.section	.bss.error,"aw",%nobits
 12078              		.align	3
 12079              		.set	.LANCHOR66,. + 0
 12082              	error:
 12083 0000 00000000 		.space	8
 12083      00000000 
 12084              		.section	.bss.firStateF32,"aw",%nobits
 12085              		.align	2
 12086              		.set	.LANCHOR12,. + 0
 12089              	firStateF32:
 12090 0000 00000000 		.space	144
 12090      00000000 
 12090      00000000 
 12090      00000000 
 12090      00000000 
 12091              		.section	.bss.heading,"aw",%nobits
 12092              		.align	2
 12093              		.set	.LANCHOR7,. + 0
 12096              	heading:
 12097 0000 00000000 		.space	4
 12098              		.section	.bss.hold_heading,"aw",%nobits
 12099              		.align	2
 12100              		.set	.LANCHOR9,. + 0
 12103              	hold_heading:
 12104 0000 00000000 		.space	4
 12105              		.section	.bss.ki,"aw",%nobits
 12106              		.align	2
 12107              		.set	.LANCHOR70,. + 0
 12110              	ki:
 12111 0000 00000000 		.space	4
 12112              		.section	.bss.lastError,"aw",%nobits
 12113              		.align	3
 12114              		.set	.LANCHOR34,. + 0
 12117              	lastError:
 12118 0000 00000000 		.space	8
 12118      00000000 
 12119              		.section	.bss.perimeterTracking,"aw",%nobits
 12120              		.set	.LANCHOR35,. + 0
 12123              	perimeterTracking:
 12124 0000 00       		.space	1
 12125              		.section	.bss.perimeterTrackingActive,"aw",%nobits
 12126              		.set	.LANCHOR59,. + 0
 12129              	perimeterTrackingActive:
 12130 0000 00       		.space	1
 12131              		.section	.bss.pitch,"aw",%nobits
 12132              		.align	2
 12133              		.set	.LANCHOR5,. + 0
 12136              	pitch:
 12137 0000 00000000 		.space	4
 12138              		.section	.bss.pitch_error,"aw",%nobits
 12139              		.align	2
 12140              		.set	.LANCHOR83,. + 0
 12143              	pitch_error:
 12144 0000 00000000 		.space	4
 12145              		.section	.bss.pitch_limit,"aw",%nobits
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 360


 12146              		.align	2
 12147              		.set	.LANCHOR1,. + 0
 12150              	pitch_limit:
 12151 0000 00000000 		.space	80
 12151      00000000 
 12151      00000000 
 12151      00000000 
 12151      00000000 
 12152              		.section	.bss.pitch_limit_idx,"aw",%nobits
 12153              		.set	.LANCHOR0,. + 0
 12156              	pitch_limit_idx:
 12157 0000 00       		.space	1
 12158              		.section	.bss.previousTime,"aw",%nobits
 12159              		.align	3
 12160              		.set	.LANCHOR62,. + 0
 12163              	previousTime:
 12164 0000 00000000 		.space	8
 12164      00000000 
 12165              		.section	.bss.rateError,"aw",%nobits
 12166              		.align	3
 12167              		.set	.LANCHOR68,. + 0
 12170              	rateError:
 12171 0000 00000000 		.space	8
 12171      00000000 
 12172              		.section	.bss.roll,"aw",%nobits
 12173              		.align	2
 12174              		.set	.LANCHOR4,. + 0
 12177              	roll:
 12178 0000 00000000 		.space	4
 12179              		.section	.bss.roll_error,"aw",%nobits
 12180              		.align	2
 12181              		.set	.LANCHOR82,. + 0
 12184              	roll_error:
 12185 0000 00000000 		.space	4
 12186              		.section	.bss.roll_limit,"aw",%nobits
 12187              		.align	2
 12188              		.set	.LANCHOR3,. + 0
 12191              	roll_limit:
 12192 0000 00000000 		.space	80
 12192      00000000 
 12192      00000000 
 12192      00000000 
 12192      00000000 
 12193              		.section	.bss.roll_limit_idx,"aw",%nobits
 12194              		.set	.LANCHOR2,. + 0
 12197              	roll_limit_idx:
 12198 0000 00       		.space	1
 12199              		.section	.bss.yaw,"aw",%nobits
 12200              		.align	2
 12201              		.set	.LANCHOR6,. + 0
 12204              	yaw:
 12205 0000 00000000 		.space	4
 12206              		.section	.bss.yaw_error,"aw",%nobits
 12207              		.align	2
 12208              		.set	.LANCHOR87,. + 0
 12211              	yaw_error:
 12212 0000 00000000 		.space	4
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 361


 12213              		.section	.data.Boundary_Timeout,"aw"
 12214              		.set	.LANCHOR27,. + 0
 12217              	Boundary_Timeout:
 12218 0000 06       		.byte	6
 12219              		.section	.data.Channel,"aw"
 12220              		.set	.LANCHOR40,. + 0
 12223              	Channel:
 12224 0000 C1       		.byte	-63
 12225              		.section	.data.Cutter_Limit,"aw"
 12226              		.align	2
 12227              		.set	.LANCHOR53,. + 0
 12230              	Cutter_Limit:
 12231 0000 0000803F 		.word	1065353216
 12232              		.section	.data.HoldChargeDetection,"aw"
 12233              		.align	1
 12234              		.set	.LANCHOR58,. + 0
 12237              	HoldChargeDetection:
 12238 0000 C800     		.short	200
 12239              		.section	.data.MasterSwitch,"aw"
 12240              		.set	.LANCHOR54,. + 0
 12243              	MasterSwitch:
 12244 0000 01       		.byte	1
 12245              		.section	.data.MotorSpeedUpdateFreq,"aw"
 12246              		.set	.LANCHOR92,. + 0
 12249              	MotorSpeedUpdateFreq:
 12250 0000 64       		.byte	100
 12251              		.section	.data.Motor_Limit,"aw"
 12252              		.align	2
 12253              		.set	.LANCHOR44,. + 0
 12256              	Motor_Limit:
 12257 0000 00004040 		.word	1077936128
 12258              		.section	.data.Outside_Threshold,"aw"
 12259              		.set	.LANCHOR88,. + 0
 12262              	Outside_Threshold:
 12263 0000 08       		.byte	8
 12264              		.section	.data.Overturn_Limit,"aw"
 12265              		.set	.LANCHOR89,. + 0
 12268              	Overturn_Limit:
 12269 0000 23       		.byte	35
 12270              		.section	.data.Signal_Integrity_IN,"aw"
 12271              		.align	2
 12272              		.set	.LANCHOR17,. + 0
 12275              	Signal_Integrity_IN:
 12276 0000 CDCC4C3F 		.word	1061997773
 12277              		.section	.data.Signal_Integrity_OUT,"aw"
 12278              		.align	2
 12279              		.set	.LANCHOR22,. + 0
 12282              	Signal_Integrity_OUT:
 12283 0000 CDCC4CBF 		.word	3209481421
 12284              		.section	.data.Voltage,"aw"
 12285              		.align	2
 12286              		.set	.LANCHOR56,. + 0
 12289              	Voltage:
 12290 0000 00E0C446 		.word	1187307520
 12291              		.section	.data.WorkingHourEnd,"aw"
 12292              		.set	.LANCHOR31,. + 0
 12295              	WorkingHourEnd:
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 362


 12296 0000 14       		.byte	20
 12297              		.section	.data.WorkingHourStart,"aw"
 12298              		.set	.LANCHOR30,. + 0
 12301              	WorkingHourStart:
 12302 0000 0A       		.byte	10
 12303              		.section	.data.firCoeffs32,"aw"
 12304              		.align	2
 12305              		.set	.LANCHOR13,. + 0
 12308              	firCoeffs32:
 12309 0000 4DFDDF3D 		.word	1038089549
 12310 0004 48E0933E 		.word	1049878600
 12311 0008 BA55CD3E 		.word	1053644218
 12312 000c 48E0933E 		.word	1049878600
 12313 0010 4DFDDF3D 		.word	1038089549
 12314              		.section	.data.kd,"aw"
 12315              		.align	2
 12316              		.set	.LANCHOR71,. + 0
 12319              	kd:
 12320 0000 0AD7233C 		.word	1008981770
 12321              		.section	.data.kp,"aw"
 12322              		.align	2
 12323              		.set	.LANCHOR69,. + 0
 12326              	kp:
 12327 0000 8FC2F53D 		.word	1039516303
 12328              		.section	.data.validSignature,"aw"
 12329              		.align	2
 12330              		.set	.LANCHOR16,. + 0
 12333              	validSignature:
 12334 0000 A8D9D6C2 		.word	3268860328
 12335 0004 134F12C3 		.word	3272757011
 12336 0008 F2892FC3 		.word	3274672626
 12337 000c 2A3839C3 		.word	3275307050
 12338 0010 47352CC3 		.word	3274454343
 12339 0014 DB9402C3 		.word	3271726299
 12340 0018 FC5489C2 		.word	3263780092
 12341 001c D93391C1 		.word	3247518681
 12342 0020 16A1F6BF 		.word	3220611350
 12343 0024 415496C0 		.word	3231077441
 12344 0028 7787A8C0 		.word	3232270199
 12345 002c F88D5841 		.word	1096322552
 12346 0030 2B643542 		.word	1110795307
 12347 0034 41A29A42 		.word	1117430337
 12348 0038 F9A4A342 		.word	1118020857
 12349 003c D0A08342 		.word	1115922640
 12350 0040 B0463A42 		.word	1111115440
 12351 0044 94C02442 		.word	1109704852
 12352 0048 B0B9ED41 		.word	1106098608
 12353 004c 0C5B8F40 		.word	1083136780
 12354 0050 2F6A0FC2 		.word	3255790127
 12355 0054 8F6499C2 		.word	3264832655
 12356 0058 2219E2C2 		.word	3269597474
 12357 005c 2F5102C3 		.word	3271708975
 12358 0060 A052FEC2 		.word	3271447200
 12359 0064 B3F1D6C2 		.word	3268866483
 12360 0068 D8BCB4C2 		.word	3266624728
 12361 006c 443AA1C2 		.word	3265346116
 12362 0070 71EBA1C2 		.word	3265391473
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 363


 12363 0074 DA8EA8C2 		.word	3265826522
 12364 0078 A6FFB2C2 		.word	3266510758
 12365 007c DBD1A9C2 		.word	3265909211
 12366 0080 336F82C2 		.word	3263328051
 12367 0084 4DC10AC2 		.word	3255484749
 12368 0088 1F598FC1 		.word	3247397151
 12369 008c 4D60A0C1 		.word	3248513101
 12370 0090 A5E1D0C1 		.word	3251691941
 12371 0094 D616B4C1 		.word	3249805014
 12372 0098 F0100CC1 		.word	3238793456
 12373 009c 88B8A541 		.word	1101379720
 12374 00a0 01159A42 		.word	1117394177
 12375 00a4 33400B43 		.word	1124810803
 12376 00a8 0CA63043 		.word	1127261708
 12377 00ac 05442C43 		.word	1126974469
 12378 00b0 76441843 		.word	1125663862
 12379 00b4 C1100443 		.word	1124339905
 12380 00b8 69A3ED42 		.word	1122870121
 12381 00bc 1EF9B842 		.word	1119418654
 12382 00c0 30BC6342 		.word	1113832496
 12383 00c4 7A0F8041 		.word	1098911610
 12384 00c8 306F64C1 		.word	3244584752
 12385 00cc 701919C2 		.word	3256424816
 12386 00d0 B8021DC2 		.word	3256681144
 12387 00d4 10A329C1 		.word	3240731408
 12388 00d8 AB973842 		.word	1111005099
 12389 00dc A970BA42 		.word	1119514793
 12390 00e0 C36BDA42 		.word	1121610691
 12391 00e4 7F9EBC42 		.word	1119657599
 12392 00e8 3A58A042 		.word	1117804602
 12393 00ec 450DA142 		.word	1117850949
 12394 00f0 FCADB942 		.word	1119464956
 12395 00f4 F9B4C142 		.word	1119991033
 12396 00f8 5E28AE42 		.word	1118709854
 12397 00fc 7E227D42 		.word	1115497086
 12398 0100 AAF8F541 		.word	1106639018
 12399 0104 BADB13C0 		.word	3222526906
 12400 0108 899DB7C1 		.word	3250036105
 12401 010c 86C3E3C1 		.word	3252929414
 12402 0110 037C20C2 		.word	3256908803
 12403 0114 3B3895C2 		.word	3264559163
 12404 0118 D2A9FAC2 		.word	3271207378
 12405 011c E10B25C3 		.word	3273984993
 12406 0120 AE2B38C3 		.word	3275238318
 12407 0124 744F2CC3 		.word	3274461044
 12408 0128 2EEBFCC2 		.word	3271355182
 12409 012c 0C4848C2 		.word	3259516940
 12410 0130 D5C97741 		.word	1098369493
 12411 0134 F1412C42 		.word	1110196721
 12412 0138 2FFAF041 		.word	1106311727
 12413 013c 227A4C41 		.word	1095531042
 12414 0140 7BCEC040 		.word	1086377595
 12415 0144 4EE09841 		.word	1100537934
 12416 0148 57770542 		.word	1107654487
 12417 014c 23662242 		.word	1109550627
 12418 0150 890DF041 		.word	1106251145
 12419 0154 D2328241 		.word	1099051730
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 364


 12420 0158 07B208C0 		.word	3221795335
 12421 015c 4C09AFC1 		.word	3249473868
 12422 0160 200038C2 		.word	3258449952
 12423 0164 E4E97BC2 		.word	3262900708
 12424 0168 DCEEA5C2 		.word	3265654492
 12425 016c 3AAAE1C2 		.word	3269569082
 12426 0170 3D8612C3 		.word	3272771133
 12427 0174 F5181FC3 		.word	3273595125
 12428 0178 1FFC0EC3 		.word	3272539167
 12429 017c 3CFCDAC2 		.word	3269131324
 12430              		.section	.rodata.VERSION,"a"
 12431              		.align	2
 12432              		.set	.LANCHOR77,. + 0
 12435              	VERSION:
 12436 0000 56657273 		.ascii	"Version 1.0.0\000"
 12436      696F6E20 
 12436      312E302E 
 12436      3000
 12437              		.text
 12438              	.Letext0:
 12439              		.file 4 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_types
 12440              		.file 5 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 12441              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 12442              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f415xx.h"
 12443              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 12444              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 12445              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 12446              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 12447              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 12448              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 12449              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 12450              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 12451              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 12452              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 12453              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 12454              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 12455              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 12456              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 12457              		.file 22 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 12458              		.file 23 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 12459              		.file 24 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stddef.
 12460              		.file 25 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 12461              		.file 26 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/math.h"
 12462              		.file 27 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 12463              		.file 28 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/time.h"
 12464              		.file 29 "Core/Inc/arm_math.h"
 12465              		.file 30 "Core/Inc/fir_filter.h"
 12466              		.file 31 "Core/Inc/signature.h"
 12467              		.file 32 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/ctype.h"
 12468              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 12469              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 12470              		.file 35 "Core/Inc/main.h"
 12471              		.file 36 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/string.h"
 12472              		.file 37 "<built-in>"
 12473              		.file 38 "/usr/local/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 365


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:20     .text.ProcessIMUData:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:27     .text.ProcessIMUData:0000000000000000 ProcessIMUData
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:225    .text.ProcessIMUData:0000000000000100 $d
                            *COM*:0000000000000004 raw_pitch
                            *COM*:0000000000000004 raw_roll
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:243    .text.delay_us:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:249    .text.delay_us:0000000000000000 delay_us
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:276    .text.delay_us:0000000000000010 $d
                            *COM*:0000000000000048 htim5
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:281    .text.cutterOFF:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:287    .text.cutterOFF:0000000000000000 cutterOFF
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:311    .text.cutterOFF:0000000000000010 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:320    .text.UpdateMotorSpeed:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:326    .text.UpdateMotorSpeed:0000000000000000 UpdateMotorSpeed
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:509    .text.UpdateMotorSpeed:00000000000000cc $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:519    .text.MotorBrake:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:525    .text.MotorBrake:0000000000000000 MotorBrake
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:561    .text.MotorBrake:000000000000001c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:568    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:574    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:754    .text.MX_GPIO_Init:00000000000000cc $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:762    .text.MX_DMA_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:768    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:855    .text.MX_DMA_Init:0000000000000064 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:860    .text.WatchdogInit:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:866    .text.WatchdogInit:0000000000000000 WatchdogInit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:898    .text.WatchdogInit:0000000000000018 $d
                            *COM*:000000000000000c hiwdg
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:904    .text.InitFIR:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:910    .text.InitFIR:0000000000000000 InitFIR
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:943    .text.InitFIR:000000000000001c $d
                            *COM*:000000000000000c S
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:950    .text.MotorHardBrake:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:956    .text.MotorHardBrake:0000000000000000 MotorHardBrake
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1003   .text.MotorHardBrake:0000000000000028 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1010   .text.cutterHardBreak:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1016   .text.cutterHardBreak:0000000000000000 cutterHardBreak
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1047   .text.cutterHardBreak:000000000000001c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1052   .text.MotorStop:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1058   .text.MotorStop:0000000000000000 MotorStop
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1210   .text.MotorStop:0000000000000088 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1219   .text.Undock_MotorBackward:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1225   .text.Undock_MotorBackward:0000000000000000 Undock_MotorBackward
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1308   .text.Undock_MotorBackward:0000000000000040 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1314   .text.Init6050:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1320   .text.Init6050:0000000000000000 Init6050
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1421   .text.Init6050:000000000000008c $d
                            *COM*:0000000000000054 hi2c2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1426   .text.Serial_RPi:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1432   .text.Serial_RPi:0000000000000000 Serial_RPi
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1464   .text.Serial_RPi:0000000000000018 $d
                            *COM*:0000000000000044 huart2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1469   .text.Serial_Console:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1475   .text.Serial_Console:0000000000000000 Serial_Console
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1507   .text.Serial_Console:0000000000000018 $d
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 366


                            *COM*:0000000000000044 huart1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1512   .text.FIR_LEFT:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1518   .text.FIR_LEFT:0000000000000000 FIR_LEFT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1596   .text.FIR_LEFT:000000000000003c $d
                            *COM*:0000000000000400 BWF1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1603   .text.FIR_RIGHT:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1609   .text.FIR_RIGHT:0000000000000000 FIR_RIGHT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1687   .text.FIR_RIGHT:000000000000003c $d
                            *COM*:0000000000000400 BWF2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1694   .text.CheckBWF:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:1700   .text.CheckBWF:0000000000000000 CheckBWF
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2211   .text.CheckBWF:0000000000000228 $d
                            *COM*:0000000000000400 ADC_BUFFER
                            *COM*:0000000000000004 Boundary_Timer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2232   .text.CheckSecurity:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2238   .text.CheckSecurity:0000000000000000 CheckSecurity
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2350   .text.CheckSecurity:0000000000000074 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2361   .text.MotorLeft:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2367   .text.MotorLeft:0000000000000000 MotorLeft
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2475   .text.MotorLeft:000000000000004c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2481   .text.MotorBackward:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2487   .text.MotorBackward:0000000000000000 MotorBackward
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2595   .text.MotorBackward:000000000000004c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2601   .text.MotorRight:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2607   .text.MotorRight:0000000000000000 MotorRight
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2715   .text.MotorRight:000000000000004c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2721   .rodata.unDock.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2725   .text.unDock:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2731   .text.unDock:0000000000000000 unDock
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2860   .text.unDock:00000000000000a0 $d
                            *COM*:0000000000000020 hrtc
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2874   .text.TimeToGoHome:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2880   .text.TimeToGoHome:0000000000000000 TimeToGoHome
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2943   .text.TimeToGoHome:0000000000000040 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2950   .text.rnd:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2956   .text.rnd:0000000000000000 rnd
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2992   .text.rnd:0000000000000014 $d
                            *COM*:0000000000000010 hrng
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:2997   .rodata.cutterON.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3001   .text.cutterON:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3007   .text.cutterON:0000000000000000 cutterON
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3124   .text.cutterON:0000000000000070 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3132   .text.ADC_Send:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3138   .text.ADC_Send:0000000000000000 ADC_Send
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3201   .text.ADC_Send:0000000000000040 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3206   .text.ADC_Receive:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3212   .text.ADC_Receive:0000000000000000 ADC_Receive
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3262   .text.ADC_Receive:0000000000000030 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3272   .text.CheckMotorCurrent:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3278   .text.CheckMotorCurrent:0000000000000000 CheckMotorCurrent
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3779   .text.CheckMotorCurrent:00000000000002b0 $d
                            *COM*:0000000000000004 M1_amp
                            *COM*:0000000000000050 M1_force
                            *COM*:0000000000000004 M2_amp
                            *COM*:0000000000000050 M2_force
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3813   .text.CollectADC:0000000000000000 $t
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 367


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:3819   .text.CollectADC:0000000000000000 CollectADC
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4141   .text.CollectADC:0000000000000178 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4162   .rodata.ChargerConnected.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4175   .text.ChargerConnected:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4181   .text.ChargerConnected:0000000000000000 ChargerConnected
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4328   .text.ChargerConnected:00000000000000c0 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4348   .rodata.CheckVoltage.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4353   .text.CheckVoltage:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4359   .text.CheckVoltage:0000000000000000 CheckVoltage
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4428   .text.CheckVoltage:0000000000000054 $d
                            *COM*:0000000000000044 msg
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4437   .rodata.SendInfo.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4474   .text.SendInfo:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4480   .text.SendInfo:0000000000000000 SendInfo
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4785   .text.SendInfo:00000000000001f4 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4824   .text.perimeterTracker:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:4830   .text.perimeterTracker:0000000000000000 perimeterTracker
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5199   .text.perimeterTracker:0000000000000218 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5221   .rodata.parseCommand_RPI.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5249   .text.parseCommand_RPI:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5255   .text.parseCommand_RPI:0000000000000000 parseCommand_RPI
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5472   .text.parseCommand_RPI:00000000000000e8 $d
                            *COM*:0000000000000040 PIBuffer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5495   .text.BootLoaderInit:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5501   .text.BootLoaderInit:0000000000000000 BootLoaderInit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5591   .text.BootLoaderInit:0000000000000034 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5599   .text.setDate:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5605   .text.setDate:0000000000000000 setDate
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5677   .text.setDate:0000000000000044 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5682   .text.setTime:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5688   .text.setTime:0000000000000000 setTime
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5758   .text.setTime:0000000000000048 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:5763   .rodata.parseCommand_Console.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:6045   .text.parseCommand_Console:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:6051   .text.parseCommand_Console:0000000000000000 parseCommand_Console
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:6648   .text.parseCommand_Console:00000000000002e8 $d
                            *COM*:0000000000000040 ConsoleBuffer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:6697   .text.parseCommand_Console:000000000000039c $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:7203   .text.parseCommand_Console:0000000000000634 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:7241   .text.parseCommand_Console:00000000000006c4 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:7684   .text.parseCommand_Console:00000000000009ec $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:7707   .text.parseCommand_Console:0000000000000a40 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:7998   .text.parseCommand_Console:0000000000000c54 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8015   .text.WatchdogRefresh:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8021   .text.WatchdogRefresh:0000000000000000 WatchdogRefresh
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8041   .text.WatchdogRefresh:000000000000000c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8046   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8053   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8079   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8084   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8091   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8105   .text.HAL_UART_RxCpltCallback_UART1:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8112   .text.HAL_UART_RxCpltCallback_UART1:0000000000000000 HAL_UART_RxCpltCallback_UART1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8172   .text.HAL_UART_RxCpltCallback_UART1:0000000000000034 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8178   .text.HAL_UART_RxCpltCallback_UART2:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8185   .text.HAL_UART_RxCpltCallback_UART2:0000000000000000 HAL_UART_RxCpltCallback_UART2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8245   .text.HAL_UART_RxCpltCallback_UART2:0000000000000034 $d
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 368


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8251   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8258   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8272   .text.Error_Handler:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8279   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8310   .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8316   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8444   .text.MX_ADC1_Init:0000000000000078 $d
                            *COM*:0000000000000048 hadc1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8451   .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8457   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8515   .text.MX_I2C1_Init:000000000000002c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8522   .text.MX_I2C2_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8528   .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8586   .text.MX_I2C2_Init:000000000000002c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8593   .rodata.reInitIMU.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8597   .text.reInitIMU:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8603   .text.reInitIMU:0000000000000000 reInitIMU
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8706   .text.reInitIMU:0000000000000074 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8713   .text.MPU6050_Read_Accel:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8719   .text.MPU6050_Read_Accel:0000000000000000 MPU6050_Read_Accel
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8946   .text.MPU6050_Read_Accel:0000000000000168 $d
                            *COM*:0000000000000004 Ax
                            *COM*:0000000000000004 Ay
                            *COM*:0000000000000004 Az
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8964   .text.MPU6050_Read_Gyro:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:8970   .text.MPU6050_Read_Gyro:0000000000000000 MPU6050_Read_Gyro
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9159   .text.MPU6050_Read_Gyro:0000000000000120 $d
                            *COM*:0000000000000004 Gx
                            *COM*:0000000000000004 Gy
                            *COM*:0000000000000004 Gz
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9177   .text.MotorForward:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9183   .text.MotorForward:0000000000000000 MotorForward
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9370   .text.MotorForward:00000000000000d0 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9378   .rodata.CheckState.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9400   .text.CheckState:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9406   .text.CheckState:0000000000000000 CheckState
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9927   .text.CheckState:0000000000000300 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:9953   .text.CheckState:000000000000035c $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10076  .text.CheckState:0000000000000424 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10088  .text.MX_IWDG_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10094  .text.MX_IWDG_Init:0000000000000000 MX_IWDG_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10133  .text.MX_IWDG_Init:0000000000000020 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10139  .text.MX_RNG_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10145  .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10176  .text.MX_RNG_Init:0000000000000014 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10182  .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10188  .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10243  .text.MX_USART1_UART_Init:000000000000002c $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10249  .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10255  .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10310  .text.MX_USART2_UART_Init:0000000000000028 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10317  .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10323  .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10488  .text.MX_TIM3_Init:00000000000000ac $d
                            *COM*:0000000000000048 htim3
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10494  .text.MX_TIM4_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10500  .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 369


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10694  .text.MX_TIM4_Init:00000000000000d0 $d
                            *COM*:0000000000000048 htim4
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10700  .text.MX_RTC_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10706  .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10758  .text.MX_RTC_Init:0000000000000028 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10764  .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10770  .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10873  .text.MX_TIM2_Init:0000000000000064 $d
                            *COM*:0000000000000048 htim2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10878  .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10884  .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10987  .text.MX_TIM5_Init:0000000000000060 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:10993  .text.SystemClock_Config:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11000  .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11180  .text.SystemClock_Config:00000000000000c8 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11186  .rodata.main.str1.4:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11193  .text.main:0000000000000000 $t
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11200  .text.main:0000000000000000 main
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11562  .text.main:00000000000001d0 $d
                            *COM*:0000000000000060 hdma_usart2_rx
                            *COM*:0000000000000060 hdma_usart1_rx
                            *COM*:0000000000000060 hdma_adc1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11829  .bss.DEBUG_RAZORBOARD:0000000000000000 DEBUG_RAZORBOARD
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11823  .bss.ChargerConnect:0000000000000000 ChargerConnect
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12249  .data.MotorSpeedUpdateFreq:0000000000000000 MotorSpeedUpdateFreq
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11942  .bss.MotorSpeedUpdateFreq_timer:0000000000000000 MotorSpeedUpdateFreq_timer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11974  .bss.Signature_Record:0000000000000000 Signature_Record
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12268  .data.Overturn_Limit:0000000000000000 Overturn_Limit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12197  .bss.roll_limit_idx:0000000000000000 roll_limit_idx
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12156  .bss.pitch_limit_idx:0000000000000000 pitch_limit_idx
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12191  .bss.roll_limit:0000000000000000 roll_limit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12150  .bss.pitch_limit:0000000000000000 pitch_limit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12143  .bss.pitch_error:0000000000000000 pitch_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12136  .bss.pitch:0000000000000000 pitch
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12184  .bss.roll_error:0000000000000000 roll_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12177  .bss.roll:0000000000000000 roll
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12211  .bss.yaw_error:0000000000000000 yaw_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12096  .bss.heading:0000000000000000 heading
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12103  .bss.hold_heading:0000000000000000 hold_heading
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11841  .bss.Force_Active:0000000000000000 Force_Active
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11784  .bss.C1_F:0000000000000000 C1_F
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11915  .bss.M2_F:0000000000000000 M2_F
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11888  .bss.M1_F:0000000000000000 M1_F
                            *COM*:0000000000000050 C1_force
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11811  .bss.C1_idx:0000000000000000 C1_idx
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11935  .bss.M2_idx:0000000000000000 M2_idx
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11908  .bss.M1_idx:0000000000000000 M1_idx
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12237  .data.HoldChargeDetection:0000000000000000 HoldChargeDetection
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11778  .bss.Battery_Ready:0000000000000000 Battery_Ready
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12295  .data.WorkingHourEnd:0000000000000000 WorkingHourEnd
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12301  .data.WorkingHourStart:0000000000000000 WorkingHourStart
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11962  .bss.Security:0000000000000000 Security
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12020  .bss.UART2_ready:0000000000000000 UART2_ready
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12014  .bss.UART1_ready:0000000000000000 UART1_ready
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12243  .data.MasterSwitch:0000000000000000 MasterSwitch
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11835  .bss.Docked:0000000000000000 Docked
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11968  .bss.SendInfoStatus:0000000000000000 SendInfoStatus
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 370


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11949  .bss.OUTSIDE_timer:0000000000000000 OUTSIDE_timer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11869  .bss.IMU_timer:0000000000000000 IMU_timer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11721  .bss.ADC_timer:0000000000000000 ADC_timer
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11727  .bss.AVOID_FRONT:0000000000000000 AVOID_FRONT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11739  .bss.AVOID_RIGHT:0000000000000000 AVOID_RIGHT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11733  .bss.AVOID_LEFT:0000000000000000 AVOID_LEFT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12068  .bss.cutterStatus:0000000000000000 cutterStatus
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11881  .bss.LastState:0000000000000000 LastState
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11987  .bss.State:0000000000000000 State
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11772  .bss.BWF2_Status:0000000000000000 BWF2_Status
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11766  .bss.BWF1_Status:0000000000000000 BWF1_Status
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12230  .data.Cutter_Limit:0000000000000000 Cutter_Limit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12256  .data.Motor_Limit:0000000000000000 Motor_Limit
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12289  .data.Voltage:0000000000000000 Voltage
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11805  .bss.C1_error:0000000000000000 C1_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11929  .bss.M2_error:0000000000000000 M2_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11902  .bss.M1_error:0000000000000000 M1_error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11798  .bss.C1_amp:0000000000000000 C1_amp
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12217  .data.Boundary_Timeout:0000000000000000 Boundary_Timeout
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12055  .bss.bwf2_outside:0000000000000000 bwf2_outside
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12041  .bss.bwf1_outside:0000000000000000 bwf1_outside
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12048  .bss.bwf2_inside:0000000000000000 bwf2_inside
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12034  .bss.bwf1_inside:0000000000000000 bwf1_inside
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12282  .data.Signal_Integrity_OUT:0000000000000000 Signal_Integrity_OUT
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12275  .data.Signal_Integrity_IN:0000000000000000 Signal_Integrity_IN
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12262  .data.Outside_Threshold:0000000000000000 Outside_Threshold
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11981  .bss.Start_Threshold:0000000000000000 Start_Threshold
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11875  .bss.Initial_Start:0000000000000000 Initial_Start
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12129  .bss.perimeterTrackingActive:0000000000000000 perimeterTrackingActive
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12123  .bss.perimeterTracking:0000000000000000 perimeterTracking
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12163  .bss.previousTime:0000000000000000 previousTime
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12170  .bss.rateError:0000000000000000 rateError
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12075  .bss.elapsedTime:0000000000000000 elapsedTime
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12062  .bss.cumError:0000000000000000 cumError
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12117  .bss.lastError:0000000000000000 lastError
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12082  .bss.error:0000000000000000 error
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12319  .data.kd:0000000000000000 kd
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12110  .bss.ki:0000000000000000 ki
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12326  .data.kp:0000000000000000 kp
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12008  .bss.Tick2:0000000000000000 Tick2
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12001  .bss.Tick1:0000000000000000 Tick1
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12204  .bss.yaw:0000000000000000 yaw
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11862  .bss.Gyro_Z_RAW:0000000000000000 Gyro_Z_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11855  .bss.Gyro_Y_RAW:0000000000000000 Gyro_Y_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11848  .bss.Gyro_X_RAW:0000000000000000 Gyro_X_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11760  .bss.Accel_Z_RAW:0000000000000000 Accel_Z_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11753  .bss.Accel_Y_RAW:0000000000000000 Accel_Y_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11746  .bss.Accel_X_RAW:0000000000000000 Accel_X_RAW
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11817  .bss.Channel_Status:0000000000000000 Channel_Status
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12223  .data.Channel:0000000000000000 Channel
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12027  .bss.V1_Value:0000000000000000 V1_Value
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11791  .bss.C1_Value:0000000000000000 C1_Value
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11922  .bss.M2_Value:0000000000000000 M2_Value
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11895  .bss.M1_Value:0000000000000000 M1_Value
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12333  .data.validSignature:0000000000000000 validSignature
                            *COM*:0000000000000400 ADCADC
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11717  .bss.ADC_timer:0000000000000000 $d
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 371


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11728  .bss.AVOID_FRONT:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11734  .bss.AVOID_LEFT:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11740  .bss.AVOID_RIGHT:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11742  .bss.Accel_X_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11749  .bss.Accel_Y_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11756  .bss.Accel_Z_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11767  .bss.BWF1_Status:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11773  .bss.BWF2_Status:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11779  .bss.Battery_Ready:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11781  .bss.C1_F:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11787  .bss.C1_Value:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11794  .bss.C1_amp:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11801  .bss.C1_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11812  .bss.C1_idx:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11818  .bss.Channel_Status:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11824  .bss.ChargerConnect:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11830  .bss.DEBUG_RAZORBOARD:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11836  .bss.Docked:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11842  .bss.Force_Active:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11844  .bss.Gyro_X_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11851  .bss.Gyro_Y_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11858  .bss.Gyro_Z_RAW:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11865  .bss.IMU_timer:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11876  .bss.Initial_Start:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11882  .bss.LastState:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11884  .bss.M1_F:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11891  .bss.M1_Value:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11898  .bss.M1_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11909  .bss.M1_idx:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11911  .bss.M2_F:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11918  .bss.M2_Value:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11925  .bss.M2_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11936  .bss.M2_idx:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11938  .bss.MotorSpeedUpdateFreq_timer:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11945  .bss.OUTSIDE_timer:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11952  .bss.Output:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11956  .bss.Output:0000000000000000 Output
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11963  .bss.Security:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11969  .bss.SendInfoStatus:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11975  .bss.Signature_Record:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11977  .bss.Start_Threshold:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11988  .bss.State:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11990  .bss.SysMemBootJump:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11994  .bss.SysMemBootJump:0000000000000000 SysMemBootJump
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:11997  .bss.Tick1:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12004  .bss.Tick2:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12015  .bss.UART1_ready:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12021  .bss.UART2_ready:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12023  .bss.V1_Value:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12030  .bss.bwf1_inside:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12037  .bss.bwf1_outside:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12044  .bss.bwf2_inside:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12051  .bss.bwf2_outside:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12058  .bss.cumError:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12069  .bss.cutterStatus:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12071  .bss.elapsedTime:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12078  .bss.error:0000000000000000 $d
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 372


/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12085  .bss.firStateF32:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12089  .bss.firStateF32:0000000000000000 firStateF32
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12092  .bss.heading:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12099  .bss.hold_heading:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12106  .bss.ki:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12113  .bss.lastError:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12124  .bss.perimeterTracking:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12130  .bss.perimeterTrackingActive:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12132  .bss.pitch:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12139  .bss.pitch_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12146  .bss.pitch_limit:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12157  .bss.pitch_limit_idx:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12159  .bss.previousTime:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12166  .bss.rateError:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12173  .bss.roll:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12180  .bss.roll_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12187  .bss.roll_limit:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12198  .bss.roll_limit_idx:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12200  .bss.yaw:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12207  .bss.yaw_error:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12226  .data.Cutter_Limit:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12233  .data.HoldChargeDetection:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12252  .data.Motor_Limit:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12271  .data.Signal_Integrity_IN:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12278  .data.Signal_Integrity_OUT:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12285  .data.Voltage:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12304  .data.firCoeffs32:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12308  .data.firCoeffs32:0000000000000000 firCoeffs32
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12315  .data.kd:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12322  .data.kp:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12329  .data.validSignature:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12431  .rodata.VERSION:0000000000000000 $d
/var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s:12435  .rodata.VERSION:0000000000000000 VERSION

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_IWDG_Init
arm_fir_init_f32
HAL_Delay
HAL_I2C_Mem_Read
HAL_I2C_Mem_Write
strlen
HAL_UART_Transmit
arm_fir_f32
sqrtf
HAL_GetTick
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RNG_GetRandomNumber
ARM GAS  /var/folders/78/wq2gckps4pn7f7kxsm8gvb3w0000gn/T//ccSMHzg7.s 			page 373


HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmplt
__aeabi_dcmpge
HAL_GPIO_ReadPin
sprintf
__aeabi_ui2d
__aeabi_dadd
__aeabi_d2uiz
round
memset
memcpy
strcmp
HAL_DeInit
RTC_ByteToBcd2
HAL_RTC_SetDate
HAL_RTC_SetTime
strncmp
_ctype_
sscanf
HAL_IWDG_Refresh
HAL_UART_DMAStop
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_I2C_DeInit
atan2
HAL_RNG_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RTC_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_UART_Receive_DMA
